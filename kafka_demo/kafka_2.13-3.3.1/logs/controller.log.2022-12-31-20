[2022-12-31 20:00:06,290] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:00:06,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:02:58,347] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-12-31 20:02:58,347] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-12-31 20:02:58,349] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-12-31 20:02:58,357] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-12-31 20:02:58,533] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:02:58,534] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:02:58,534] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:02:58,535] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-12-31 20:02:58,535] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:02:58,537] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:02:58,537] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:02:58,538] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-12-31 20:02:58,538] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-12-31 20:02:58,538] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-12-31 20:02:58,541] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-12-31 20:04:29,987] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:04:30,032] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-12-31 20:04:30,034] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-31 20:04:30,039] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-31 20:04:30,043] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-31 20:04:30,046] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-31 20:04:30,064] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 46) (kafka.controller.KafkaController)
[2022-12-31 20:04:30,076] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:04:30,081] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-31 20:04:30,107] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-31 20:04:30,111] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:04:30,112] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:04:30,112] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:04:30,113] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-31 20:04:30,116] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,117] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,118] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-31 20:04:30,119] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-12-31 20:04:30,119] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-31 20:04:30,150] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:04:30,152] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:04:30,162] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:04:30,165] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:04:30,168] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:04:30,170] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:04:30,188] INFO [RequestSendThread controllerId=0] Controller 0 connected to 172.30.1.15:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-31 20:04:30,188] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:04:30,188] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-12-31 20:04:30,199] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,199] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,199] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,199] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-31 20:04:30,200] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-31 20:04:30,230] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-31 20:04:35,240] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:04:35,241] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:09:35,240] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:09:35,244] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:12:21,913] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-12-31 20:12:21,914] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-12-31 20:12:21,915] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-12-31 20:12:21,919] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-12-31 20:12:22,096] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:12:22,097] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:12:22,097] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:12:22,098] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-12-31 20:12:22,098] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:12:22,100] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:12:22,100] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:12:22,100] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-12-31 20:12:22,100] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-12-31 20:12:22,101] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-12-31 20:12:22,103] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-12-31 20:12:38,959] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:12:39,010] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-12-31 20:12:39,012] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-31 20:12:39,016] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-31 20:12:39,019] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-31 20:12:39,020] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-31 20:12:39,038] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 65) (kafka.controller.KafkaController)
[2022-12-31 20:12:39,044] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:12:39,051] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-31 20:12:39,071] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-31 20:12:39,074] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:12:39,074] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:12:39,075] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:12:39,081] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-31 20:12:39,087] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,087] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,088] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-31 20:12:39,088] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-12-31 20:12:39,099] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-31 20:12:39,133] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:12:39,137] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:12:39,139] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:12:39,140] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:12:39,140] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:12:39,141] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:12:39,150] INFO [RequestSendThread controllerId=0] Controller 0 connected to 127.0.0.1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-31 20:12:39,161] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:12:39,163] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-12-31 20:12:39,183] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,184] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,184] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,184] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-31 20:12:39,190] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-31 20:12:39,220] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-31 20:12:44,231] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:12:44,232] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:16:37,833] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-12-31 20:16:37,834] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-12-31 20:16:37,836] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-12-31 20:16:37,840] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-12-31 20:16:37,987] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:16:37,988] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:16:37,988] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:16:37,989] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-12-31 20:16:37,989] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:16:37,990] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:16:37,991] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:16:37,991] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-12-31 20:16:37,992] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-12-31 20:16:37,991] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-12-31 20:16:37,994] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-12-31 20:41:34,212] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-12-31 20:41:34,260] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-12-31 20:41:34,263] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-12-31 20:41:34,267] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-12-31 20:41:34,270] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-12-31 20:41:34,273] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-12-31 20:41:34,303] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 84) (kafka.controller.KafkaController)
[2022-12-31 20:41:34,308] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:41:34,313] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-12-31 20:41:34,333] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-12-31 20:41:34,339] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-12-31 20:41:34,340] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:41:34,340] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-12-31 20:41:34,341] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-12-31 20:41:34,348] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,349] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,349] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-12-31 20:41:34,350] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-12-31 20:41:34,350] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-12-31 20:41:34,386] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:41:34,387] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:41:34,400] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:41:34,401] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-12-31 20:41:34,402] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:41:34,402] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:41:34,407] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-12-31 20:41:34,408] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-12-31 20:41:34,412] INFO [RequestSendThread controllerId=0] Controller 0 connected to 127.0.0.1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-31 20:41:34,430] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,430] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,431] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,431] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-12-31 20:41:34,436] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-12-31 20:41:34,465] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-12-31 20:41:39,481] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:41:39,483] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:46:39,496] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:46:39,500] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:51:39,503] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:51:39,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:56:39,506] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-12-31 20:56:39,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-12-31 20:58:11,696] INFO [Controller id=0] New topics: [Set(example-catalog-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(example-catalog-topic,Some(DIPAETEvRaWomI6N2kfdCA),Map(example-catalog-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-31 20:58:11,699] INFO [Controller id=0] New partition creation callback for example-catalog-topic-0 (kafka.controller.KafkaController)
[2022-12-31 20:58:11,936] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(W91nNj6VT52ShlSpc_rAuw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-12-31 20:58:11,938] INFO [RequestSendThread controllerId=0] Controller 0 connected to 127.0.0.1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-12-31 20:58:11,939] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-12-31 20:59:31,388] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-12-31 20:59:31,415] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
