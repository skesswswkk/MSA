[2023-01-02 18:05:18,989] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-01-02 18:05:19,071] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-01-02 18:05:19,083] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-01-02 18:05:19,143] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-01-02 18:05:19,152] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-01-02 18:05:19,173] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-01-02 18:05:19,183] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-01-02 18:05:19,212] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-01-02 18:05:19,227] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-01-02 18:05:19,238] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-01-02 18:05:19,324] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-01-02 18:05:19,333] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-01-02 18:05:19,337] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-01-02 18:05:19,338] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-01-02 18:05:19,341] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-01-02 18:05:19,349] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,350] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,350] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-01-02 18:05:19,351] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-01-02 18:05:19,351] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-01-02 18:05:19,389] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-01-02 18:05:19,392] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-01-02 18:05:19,407] INFO [RequestSendThread controllerId=0] Controller 0 connected to 127.0.0.1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-01-02 18:05:19,407] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-01-02 18:05:19,408] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-01-02 18:05:19,408] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-01-02 18:05:19,409] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-01-02 18:05:19,416] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-01-02 18:05:19,417] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-01-02 18:05:19,428] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,429] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,429] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,429] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-01-02 18:05:19,430] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-01-02 18:05:19,475] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-01-02 18:05:19,714] INFO [Controller id=0] New topics: [Set(example-catalog-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(example-catalog-topic,Some(0KWLTTe8RTe61v-aDVkjSg),Map(example-catalog-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:19,714] INFO [Controller id=0] New partition creation callback for example-catalog-topic-0 (kafka.controller.KafkaController)
[2023-01-02 18:05:19,875] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-01-02 18:05:19,907] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-01-02 18:05:24,145] INFO [Controller id=0] New topics: [Set(connect-offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-offsets,Some(GlKBHWAMT4WfOUe95U5lqA),HashMap(connect-offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:24,146] INFO [Controller id=0] New partition creation callback for connect-offsets-20,connect-offsets-6,connect-offsets-17,connect-offsets-15,connect-offsets-7,connect-offsets-24,connect-offsets-16,connect-offsets-3,connect-offsets-21,connect-offsets-11,connect-offsets-10,connect-offsets-2,connect-offsets-18,connect-offsets-23,connect-offsets-4,connect-offsets-12,connect-offsets-5,connect-offsets-13,connect-offsets-14,connect-offsets-0,connect-offsets-8,connect-offsets-9,connect-offsets-1,connect-offsets-19,connect-offsets-22 (kafka.controller.KafkaController)
[2023-01-02 18:05:24,522] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:05:24,524] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:05:24,535] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:05:24,547] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:05:25,473] INFO [Controller id=0] New topics: [Set(orders)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(orders,Some(CXBYjT7iQDaLMB45eQij7g),Map(orders-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:25,486] INFO [Controller id=0] New partition creation callback for orders-0 (kafka.controller.KafkaController)
[2023-01-02 18:05:26,272] INFO [Controller id=0] New topics: [Set(connect-status)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-status,Some(k2RnN86BS7y_RkPyM4gSSw),HashMap(connect-status-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-status-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-status-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-status-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), connect-status-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:26,272] INFO [Controller id=0] New partition creation callback for connect-status-4,connect-status-3,connect-status-2,connect-status-0,connect-status-1 (kafka.controller.KafkaController)
[2023-01-02 18:05:26,794] INFO [Controller id=0] New topics: [HashSet(connect-configs)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-configs,Some(qxuMjhBYQZiUlOg2EuF1mA),Map(connect-configs-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:26,794] INFO [Controller id=0] New partition creation callback for connect-configs-0 (kafka.controller.KafkaController)
[2023-01-02 18:05:27,048] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(Jll6a8niRSWHgSiabXmLFQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-01-02 18:05:27,049] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-01-02 18:10:24,548] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:10:24,558] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:10:24,594] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:10:24,595] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:15:24,593] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:15:24,596] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:15:24,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:15:24,620] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:20:24,632] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:20:24,635] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:20:24,647] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:20:24,648] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:25:24,648] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:25:24,649] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:25:24,663] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:25:24,663] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:30:24,661] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:30:24,664] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:30:24,670] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:30:24,671] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:35:24,673] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:35:24,675] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:35:24,687] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:35:24,688] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:40:24,685] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:40:24,690] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:40:24,704] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:40:24,705] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:45:24,701] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:45:24,703] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:45:24,723] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:45:24,723] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-01-02 18:50:24,717] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-01-02 18:50:24,719] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-01-02 18:50:24,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-01-02 18:50:24,726] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
