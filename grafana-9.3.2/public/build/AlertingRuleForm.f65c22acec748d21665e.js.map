{"version":3,"file":"AlertingRuleForm.f65c22acec748d21665e.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/AlertWarning.tsx","webpack://grafana/./public/app/features/alerting/unified/api/preview.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/PreviewRuleResult.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/PreviewRule.tsx","webpack://grafana/./public/app/features/alerting/unified/types/preview.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudEvaluationBehavior.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/util.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/GroupAndNamespaceFields.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/RuleFolderPicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/DetailsStep.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/NotificationsStep.tsx","webpack://grafana/../../opt/drone/yarncache/js-yaml-npm-4.1.0-3606f32312-c7830dfd45.zip/node_modules/js-yaml/dist/js-yaml.mjs","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/RuleInspector.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudAlertPreview.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/preview.ts","webpack://grafana/./public/app/features/alerting/unified/utils/labels.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/ExpressionEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/Spacer.tsx","webpack://grafana/./public/app/features/alerting/unified/components/expressions/AlertConditionIndicator.tsx","webpack://grafana/./public/app/features/alerting/unified/components/expressions/util.ts","webpack://grafana/./public/app/features/alerting/unified/components/expressions/Expression.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/ExpressionsEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/VizWrapper.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useVizHeight.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryWrapper.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryRows.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useRuleSourcesWithRuler.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudRulesSourcePicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/RuleType.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/GrafanaManagedAlert.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/DisabledTooltip.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/MimirOrLokiAlert.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/MimirOrLokiRecordingRule.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/RuleTypePicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/AlertType.tsx","webpack://grafana/./public/app/features/alerting/utils/dataSourceFromExpression.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/reducer.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/QueryAndExpressionsStep.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/AlertRuleForm.tsx","webpack://grafana/./public/app/features/alerting/unified/ExistingRuleEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/RuleEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/PanelPluginsButtonGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useAlertQueriesStatus.ts","webpack://grafana/./public/app/features/alerting/unified/hooks/useFolder.ts","webpack://grafana/./public/app/features/alerting/unified/hooks/useIsRuleEditable.ts","webpack://grafana/./public/app/features/alerting/unified/utils/timeRange.ts","webpack://grafana/./public/app/features/alerting/unified/state/AlertingQueryRunner.ts","webpack://grafana/./public/app/features/alerting/unified/utils/accessControlHooks.ts","webpack://grafana/./public/app/features/expressions/guards.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, LinkButton, useStyles2 } from '@grafana/ui';\n\ninterface AlertWarningProps {\n  title: string;\n  children: React.ReactNode;\n}\nexport function AlertWarning({ title, children }: AlertWarningProps) {\n  return (\n    <Alert className={useStyles2(warningStyles).warning} severity=\"warning\" title={title}>\n      <p>{children}</p>\n      <LinkButton href=\"alerting/list\">To rule list</LinkButton>\n    </Alert>\n  );\n}\n\nconst warningStyles = (theme: GrafanaTheme2) => ({\n  warning: css`\n    margin: ${theme.spacing(4)};\n  `,\n});\n","import { Observable, of } from 'rxjs';\nimport { catchError, map, share } from 'rxjs/operators';\n\nimport {\n  dataFrameFromJSON,\n  DataFrameJSON,\n  getDefaultTimeRange,\n  LoadingState,\n  PanelData,\n  withLoadingIndicator,\n} from '@grafana/data';\nimport { getBackendSrv, toDataQueryError } from '@grafana/runtime';\n\nimport {\n  isCloudPreviewRequest,\n  isGrafanaPreviewRequest,\n  PreviewRuleRequest,\n  PreviewRuleResponse,\n} from '../types/preview';\nimport { RuleFormType } from '../types/rule-form';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\n\nexport function previewAlertRule(request: PreviewRuleRequest): Observable<PreviewRuleResponse> {\n  if (isCloudPreviewRequest(request)) {\n    return fetchAlertRulePreview(request, request.dataSourceUid, RuleFormType.cloudAlerting);\n  }\n\n  if (isGrafanaPreviewRequest(request)) {\n    return fetchAlertRulePreview(request, GRAFANA_RULES_SOURCE_NAME, RuleFormType.grafana);\n  }\n\n  throw new Error('unsupported preview rule request');\n}\n\ntype AlertRulePreviewResponse = {\n  instances: DataFrameJSON[];\n};\n\nfunction fetchAlertRulePreview(\n  request: PreviewRuleRequest,\n  dataSourceUid: string,\n  ruleType: RuleFormType\n): Observable<PreviewRuleResponse> {\n  return withLoadingIndicator({\n    whileLoading: createResponse(ruleType),\n    source: getBackendSrv()\n      .fetch<AlertRulePreviewResponse>({\n        method: 'POST',\n        url: `/api/v1/rule/test/${dataSourceUid}`,\n        data: request,\n      })\n      .pipe(\n        map(({ data }) => {\n          return createResponse(ruleType, {\n            state: LoadingState.Done,\n            series: data.instances.map(dataFrameFromJSON),\n          });\n        }),\n        catchError((error: Error) => {\n          return of(\n            createResponse(ruleType, {\n              state: LoadingState.Error,\n              error: toDataQueryError(error),\n            })\n          );\n        }),\n        share()\n      ),\n  });\n}\n\nfunction createResponse(ruleType: RuleFormType, data: Partial<PanelData> = {}): PreviewRuleResponse {\n  return {\n    ruleType,\n    data: {\n      state: LoadingState.Loading,\n      series: [],\n      timeRange: getDefaultTimeRange(),\n      ...data,\n    },\n  };\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { FieldConfigSource, FieldMatcherID, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { TableCellDisplayMode, useStyles2 } from '@grafana/ui';\n\nimport { PreviewRuleResponse } from '../../types/preview';\nimport { RuleFormType } from '../../types/rule-form';\nimport { messageFromError } from '../../utils/redux';\n\ntype Props = {\n  preview: PreviewRuleResponse | undefined;\n};\n\nexport function PreviewRuleResult(props: Props): React.ReactElement | null {\n  const { preview } = props;\n  const styles = useStyles2(getStyles);\n  const fieldConfig: FieldConfigSource = {\n    defaults: {},\n    overrides: [\n      {\n        matcher: { id: FieldMatcherID.byName, options: 'Info' },\n        properties: [{ id: 'custom.displayMode', value: TableCellDisplayMode.JSONView }],\n      },\n    ],\n  };\n\n  if (!preview) {\n    return null;\n  }\n\n  const { data, ruleType } = preview;\n\n  if (data.state === LoadingState.Loading) {\n    return (\n      <div className={styles.container}>\n        <span>Loading preview...</span>\n      </div>\n    );\n  }\n\n  if (data.state === LoadingState.Error) {\n    return (\n      <div className={styles.container}>\n        {data.error ? messageFromError(data.error) : 'Failed to preview alert rule'}\n      </div>\n    );\n  }\n  return (\n    <div className={styles.container}>\n      <span>\n        Preview based on the result of running the query, for this moment.{' '}\n        {ruleType === RuleFormType.grafana ? 'Configuration for `no data` and `error handling` is not applied.' : null}\n      </span>\n      <div className={styles.table}>\n        <AutoSizer>\n          {({ width, height }) => (\n            <div style={{ width: `${width}px`, height: `${height}px` }}>\n              <PanelRenderer\n                title=\"\"\n                width={width}\n                height={height}\n                pluginId=\"table\"\n                data={data}\n                fieldConfig={fieldConfig}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      margin: ${theme.spacing(2)} 0;\n    `,\n    table: css`\n      flex: 1 1 auto;\n      height: 135px;\n      margin-top: ${theme.spacing(2)};\n      border: 1px solid ${theme.colors.border.medium};\n      border-radius: ${theme.shape.borderRadius(1)};\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useMountedState } from 'react-use';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { dateTimeFormatISO, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Alert, Button, HorizontalGroup, useStyles2 } from '@grafana/ui';\n\nimport { previewAlertRule } from '../../api/preview';\nimport { useAlertQueriesStatus } from '../../hooks/useAlertQueriesStatus';\nimport { PreviewRuleRequest, PreviewRuleResponse } from '../../types/preview';\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\n\nimport { PreviewRuleResult } from './PreviewRuleResult';\n\nconst fields: Array<keyof RuleFormValues> = ['type', 'dataSourceName', 'condition', 'queries', 'expression'];\n\nexport function PreviewRule(): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const [preview, onPreview] = usePreview();\n  const { watch } = useFormContext<RuleFormValues>();\n  const [type, condition, queries] = watch(['type', 'condition', 'queries']);\n  const { allDataSourcesAvailable } = useAlertQueriesStatus(queries);\n\n  if (type === RuleFormType.cloudRecording || type === RuleFormType.cloudAlerting) {\n    return null;\n  }\n\n  const isPreviewAvailable = Boolean(condition) && allDataSourcesAvailable;\n\n  return (\n    <div className={styles.container}>\n      <HorizontalGroup>\n        {allDataSourcesAvailable && (\n          <Button disabled={!isPreviewAvailable} type=\"button\" variant=\"primary\" onClick={onPreview}>\n            Preview alerts\n          </Button>\n        )}\n        {!allDataSourcesAvailable && (\n          <Alert title=\"Preview is not available\" severity=\"warning\">\n            Cannot display the query preview. Some of the data sources used in the queries are not available.\n          </Alert>\n        )}\n      </HorizontalGroup>\n      <PreviewRuleResult preview={preview} />\n    </div>\n  );\n}\n\nexport function usePreview(): [PreviewRuleResponse | undefined, () => void] {\n  const [preview, setPreview] = useState<PreviewRuleResponse | undefined>();\n  const { getValues } = useFormContext<RuleFormValues>();\n  const isMounted = useMountedState();\n\n  const onPreview = useCallback(() => {\n    const values = getValues(fields);\n    const request = createPreviewRequest(values);\n\n    previewAlertRule(request)\n      .pipe(takeWhile((response) => !isCompleted(response), true))\n      .subscribe((response) => {\n        if (!isMounted()) {\n          return;\n        }\n        setPreview(response);\n      });\n  }, [getValues, isMounted]);\n\n  return [preview, onPreview];\n}\n\nfunction createPreviewRequest(values: any[]): PreviewRuleRequest {\n  const [type, dataSourceName, condition, queries, expression] = values;\n  const dsSettings = getDataSourceSrv().getInstanceSettings(dataSourceName);\n  if (!dsSettings) {\n    throw new Error(`Cannot find data source settings for ${dataSourceName}`);\n  }\n\n  switch (type) {\n    case RuleFormType.cloudAlerting:\n      return {\n        dataSourceUid: dsSettings.uid,\n        dataSourceName,\n        expr: expression,\n      };\n\n    case RuleFormType.grafana:\n      return {\n        grafana_condition: {\n          condition,\n          data: queries,\n          now: dateTimeFormatISO(Date.now()),\n        },\n      };\n\n    default:\n      throw new Error(`Alert type ${type} not supported by preview.`);\n  }\n}\n\nfunction isCompleted(response: PreviewRuleResponse): boolean {\n  switch (response.data.state) {\n    case LoadingState.Done:\n    case LoadingState.Error:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      margin-top: ${theme.spacing(2)};\n      max-width: ${theme.breakpoints.values.xxl}px;\n    `,\n  };\n}\n","import { PanelData } from '@grafana/data';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { RuleFormType } from './rule-form';\n\nexport type PreviewRuleRequest = GrafanaPreviewRuleRequest | CloudPreviewRuleRequest;\n\nexport type GrafanaPreviewRuleRequest = {\n  grafana_condition: {\n    condition: string;\n    data: AlertQuery[];\n    now: string;\n  };\n};\n\nexport type CloudPreviewRuleRequest = {\n  dataSourceUid: string;\n  dataSourceName: string;\n  expr: string;\n};\n\nexport type PreviewRuleResponse = {\n  ruleType: RuleFormType;\n  data: PanelData;\n};\n\nexport function isCloudPreviewRequest(request: PreviewRuleRequest): request is CloudPreviewRuleRequest {\n  return 'expr' in request;\n}\n\nexport function isGrafanaPreviewRequest(request: PreviewRuleRequest): request is GrafanaPreviewRuleRequest {\n  return 'grafana_condition' in request;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Field, Input, InputControl, Select, useStyles2 } from '@grafana/ui';\n\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\nimport { timeOptions } from '../../utils/time';\n\nimport { PreviewRule } from './PreviewRule';\nimport { RuleEditorSection } from './RuleEditorSection';\n\nexport const CloudEvaluationBehavior = () => {\n  const styles = useStyles2(getStyles);\n  const {\n    register,\n    control,\n    watch,\n    formState: { errors },\n  } = useFormContext<RuleFormValues>();\n\n  const type = watch('type');\n\n  // cloud recording rules do not have alert conditions\n  if (type === RuleFormType.cloudRecording) {\n    return null;\n  }\n\n  return (\n    <RuleEditorSection stepNo={2} title=\"Alert evaluation behavior\">\n      <Field label=\"For\" description=\"Expression has to be true for this long for the alert to be fired.\">\n        <div className={styles.flexRow}>\n          <Field invalid={!!errors.forTime?.message} error={errors.forTime?.message} className={styles.inlineField}>\n            <Input\n              {...register('forTime', { pattern: { value: /^\\d+$/, message: 'Must be a positive integer.' } })}\n              width={8}\n            />\n          </Field>\n          <InputControl\n            name=\"forTimeUnit\"\n            render={({ field: { onChange, ref, ...field } }) => (\n              <Select\n                {...field}\n                options={timeOptions}\n                onChange={(value) => onChange(value?.value)}\n                width={15}\n                className={styles.timeUnit}\n              />\n            )}\n            control={control}\n          />\n        </div>\n      </Field>\n      <PreviewRule />\n    </RuleEditorSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  inlineField: css`\n    margin-bottom: 0;\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n  `,\n  timeUnit: css`\n    margin-left: ${theme.spacing(0.5)};\n  `,\n});\n","import { ValidateResult } from 'react-hook-form';\n\nimport { DataFrame } from '@grafana/data';\nimport { isTimeSeries } from '@grafana/data/src/dataframe/utils';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nexport function queriesWithUpdatedReferences(\n  queries: AlertQuery[],\n  previousRefId: string,\n  newRefId: string\n): AlertQuery[] {\n  return queries.map((query) => {\n    if (previousRefId === newRefId) {\n      return query;\n    }\n\n    if (!isExpressionQuery(query.model)) {\n      return query;\n    }\n\n    const isMathExpression = query.model.type === 'math';\n    const isReduceExpression = query.model.type === 'reduce';\n    const isResampleExpression = query.model.type === 'resample';\n    const isClassicExpression = query.model.type === 'classic_conditions';\n    const isThresholdExpression = query.model.type === 'threshold';\n\n    if (isMathExpression) {\n      return {\n        ...query,\n        model: {\n          ...query.model,\n          expression: updateMathExpressionRefs(query.model.expression ?? '', previousRefId, newRefId),\n        },\n      };\n    }\n\n    if (isResampleExpression || isReduceExpression || isThresholdExpression) {\n      const isReferencing = query.model.expression === previousRefId;\n\n      return {\n        ...query,\n        model: {\n          ...query.model,\n          expression: isReferencing ? newRefId : query.model.expression,\n        },\n      };\n    }\n\n    if (isClassicExpression) {\n      const conditions = query.model.conditions?.map((condition) => ({\n        ...condition,\n        query: {\n          ...condition.query,\n          params: condition.query.params.map((param: string) => (param === previousRefId ? newRefId : param)),\n        },\n      }));\n\n      return { ...query, model: { ...query.model, conditions } };\n    }\n\n    return query;\n  });\n}\n\nexport function updateMathExpressionRefs(expression: string, previousRefId: string, newRefId: string): string {\n  const oldExpression = new RegExp('(\\\\$' + previousRefId + '\\\\b)|(\\\\${' + previousRefId + '})', 'gm');\n  const newExpression = '${' + newRefId + '}';\n\n  return expression.replace(oldExpression, newExpression);\n}\n\nexport function refIdExists(queries: AlertQuery[], refId: string | null): boolean {\n  return queries.find((query) => query.refId === refId) !== undefined;\n}\n\n// some gateways (like Istio) will decode \"/\" and \"\\\" characters – this will cause 404 errors for any API call\n// that includes these values in the URL (ie. /my/path%2fto/resource -> /my/path/to/resource)\n//\n// see https://istio.io/latest/docs/ops/best-practices/security/#customize-your-system-on-path-normalization\nexport function checkForPathSeparator(value: string): ValidateResult {\n  const containsPathSeparator = value.includes('/') || value.includes('\\\\');\n  if (containsPathSeparator) {\n    return 'Cannot contain \"/\" or \"\\\\\" characters';\n  }\n\n  return true;\n}\n\nexport function errorFromSeries(series: DataFrame[]): Error | undefined {\n  if (series.length === 0) {\n    return;\n  }\n\n  const isTimeSeriesResults = isTimeSeries(series);\n\n  let error;\n  if (isTimeSeriesResults) {\n    error = new Error('You cannot use time series data as an alert condition, consider adding a reduce expression.');\n  }\n\n  return error;\n}\n\nexport function warningFromSeries(series: DataFrame[]): Error | undefined {\n  const notices = series[0]?.meta?.notices ?? [];\n  const warning = notices.find((notice) => notice.severity === 'warning')?.text;\n\n  return warning ? new Error(warning) : undefined;\n}\n","import { css } from '@emotion/css';\nimport React, { FC, useEffect, useMemo } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Field, InputControl, useStyles2, VirtualizedSelect } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { fetchRulerRulesAction } from '../../state/actions';\nimport { RuleFormValues } from '../../types/rule-form';\n\nimport { checkForPathSeparator } from './util';\n\ninterface Props {\n  rulesSourceName: string;\n}\n\nexport const GroupAndNamespaceFields: FC<Props> = ({ rulesSourceName }) => {\n  const {\n    control,\n    watch,\n    formState: { errors },\n    setValue,\n  } = useFormContext<RuleFormValues>();\n\n  const style = useStyles2(getStyle);\n\n  const rulerRequests = useUnifiedAlertingSelector((state) => state.rulerRules);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRulerRulesAction({ rulesSourceName }));\n  }, [rulesSourceName, dispatch]);\n\n  const rulesConfig = rulerRequests[rulesSourceName]?.result;\n\n  const namespace = watch('namespace');\n\n  const namespaceOptions = useMemo(\n    (): Array<SelectableValue<string>> =>\n      rulesConfig ? Object.keys(rulesConfig).map((namespace) => ({ label: namespace, value: namespace })) : [],\n    [rulesConfig]\n  );\n\n  const groupOptions = useMemo(\n    (): Array<SelectableValue<string>> =>\n      (namespace && rulesConfig?.[namespace]?.map((group) => ({ label: group.name, value: group.name }))) || [],\n    [namespace, rulesConfig]\n  );\n\n  return (\n    <div className={style.flexRow}>\n      <Field\n        data-testid=\"namespace-picker\"\n        label=\"Namespace\"\n        error={errors.namespace?.message}\n        invalid={!!errors.namespace?.message}\n      >\n        <InputControl\n          render={({ field: { onChange, ref, ...field } }) => (\n            <VirtualizedSelect\n              {...field}\n              allowCustomValue\n              className={style.input}\n              onChange={(value) => {\n                setValue('group', ''); //reset if namespace changes\n                onChange(value.value);\n              }}\n              options={namespaceOptions}\n              width={42}\n            />\n          )}\n          name=\"namespace\"\n          control={control}\n          rules={{\n            required: { value: true, message: 'Required.' },\n            validate: {\n              pathSeparator: checkForPathSeparator,\n            },\n          }}\n        />\n      </Field>\n      <Field data-testid=\"group-picker\" label=\"Group\" error={errors.group?.message} invalid={!!errors.group?.message}>\n        <InputControl\n          render={({ field: { ref, ...field } }) => (\n            <VirtualizedSelect\n              {...field}\n              allowCustomValue\n              options={groupOptions}\n              width={42}\n              onChange={(value) => {\n                setValue('group', value.value ?? '');\n              }}\n              className={style.input}\n            />\n          )}\n          name=\"group\"\n          control={control}\n          rules={{\n            required: { value: true, message: 'Required.' },\n            validate: {\n              pathSeparator: checkForPathSeparator,\n            },\n          }}\n        />\n      </Field>\n    </div>\n  );\n};\n\nconst getStyle = (theme: GrafanaTheme2) => ({\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    & > * + * {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  input: css`\n    width: 330px !important;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { FolderPicker, Props as FolderPickerProps } from 'app/core/components/Select/FolderPicker';\nimport { PermissionLevelString } from 'app/types';\n\nimport { FolderWarning, CustomAdd } from '../../../../../core/components/Select/FolderPicker';\n\nexport interface Folder {\n  title: string;\n  id: number;\n}\n\nexport interface RuleFolderPickerProps extends Omit<FolderPickerProps, 'initialTitle' | 'initialFolderId'> {\n  value?: Folder;\n  dissalowSlashes: boolean;\n}\n\nconst SlashesWarning = () => {\n  const styles = useStyles2(getStyles);\n  const onClick = () => window.open('https://github.com/grafana/grafana/issues/42947', '_blank');\n  return (\n    <Stack gap={0.5}>\n      <div className={styles.slashNotAllowed}>Folders with &apos;/&apos; character are not allowed.</div>\n      <Tooltip placement=\"top\" content={'Link to the Github issue'} theme=\"info\">\n        <Icon name=\"info-circle\" size=\"xs\" className={styles.infoIcon} onClick={onClick} />\n      </Tooltip>\n    </Stack>\n  );\n};\n\nexport const containsSlashes = (str: string): boolean => str.indexOf('/') !== -1;\n\nexport function RuleFolderPicker(props: RuleFolderPickerProps) {\n  const { value } = props;\n  const warningCondition = (folderName: string) => containsSlashes(folderName);\n\n  const folderWarning: FolderWarning = {\n    warningCondition: warningCondition,\n    warningComponent: SlashesWarning,\n  };\n\n  const customAdd: CustomAdd = {\n    disallowValues: true,\n    isAllowedValue: (value) => !containsSlashes(value),\n  };\n\n  return (\n    <FolderPicker\n      showRoot={false}\n      allowEmpty={true}\n      initialTitle={value?.title}\n      initialFolderId={value?.id}\n      accessControlMetadata\n      {...props}\n      permissionLevel={PermissionLevelString.View}\n      customAdd={customAdd}\n      folderWarning={folderWarning}\n    />\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  slashNotAllowed: css`\n    color: ${theme.colors.warning.main};\n    font-size: 12px;\n    margin-bottom: 2px;\n  `,\n  infoIcon: css`\n    color: ${theme.colors.warning.main};\n    font-size: 12px;\n    margin-bottom: 2px;\n    cursor: pointer;\n  `,\n});\n","import { css } from '@emotion/css';\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { useStyles2, Field, Input, InputControl, Label, Tooltip, Icon } from '@grafana/ui';\nimport { FolderPickerFilter } from 'app/core/components/Select/FolderPicker';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { DashboardSearchHit } from 'app/features/search/types';\nimport { AccessControlAction } from 'app/types';\n\nimport { RuleForm, RuleFormType, RuleFormValues } from '../../types/rule-form';\n\nimport AnnotationsField from './AnnotationsField';\nimport { GroupAndNamespaceFields } from './GroupAndNamespaceFields';\nimport { RuleEditorSection } from './RuleEditorSection';\nimport { RuleFolderPicker, Folder, containsSlashes } from './RuleFolderPicker';\nimport { checkForPathSeparator } from './util';\n\nconst recordingRuleNameValidationPattern = {\n  message:\n    'Recording rule name must be valid metric name. It may only contain letters, numbers, and colons. It may not contain whitespace.',\n  value: /^[a-zA-Z_:][a-zA-Z0-9_:]*$/,\n};\n\ninterface DetailsStepProps {\n  initialFolder: RuleForm | null;\n}\n\nexport const DetailsStep = ({ initialFolder }: DetailsStepProps) => {\n  const {\n    register,\n    watch,\n    formState: { errors },\n  } = useFormContext<RuleFormValues & { location?: string }>();\n\n  const styles = useStyles2(getStyles);\n\n  const ruleFormType = watch('type');\n  const dataSourceName = watch('dataSourceName');\n  const type = watch('type');\n\n  const folderFilter = useRuleFolderFilter(initialFolder);\n\n  return (\n    <RuleEditorSection\n      stepNo={type === RuleFormType.cloudRecording ? 2 : 3}\n      title={\n        type === RuleFormType.cloudRecording ? 'Add details for your recording rule' : 'Add details for your alert'\n      }\n      description={\n        type === RuleFormType.cloudRecording\n          ? 'Add labels to help you better manage your rules'\n          : 'Write a summary and add labels to help you better manage your alerts'\n      }\n    >\n      <Field\n        className={styles.formInput}\n        label=\"Rule name\"\n        error={errors?.name?.message}\n        invalid={!!errors.name?.message}\n      >\n        <Input\n          id=\"name\"\n          {...register('name', {\n            required: { value: true, message: 'Must enter an alert name' },\n            pattern: ruleFormType === RuleFormType.cloudRecording ? recordingRuleNameValidationPattern : undefined,\n            validate: {\n              pathSeparator: (value: string) => {\n                // we use the alert rule name as the \"groupname\" for Grafana managed alerts, so we can't allow path separators\n                if (ruleFormType === RuleFormType.grafana) {\n                  return checkForPathSeparator(value);\n                }\n\n                return true;\n              },\n            },\n          })}\n        />\n      </Field>\n\n      {(ruleFormType === RuleFormType.cloudRecording || ruleFormType === RuleFormType.cloudAlerting) &&\n        dataSourceName && <GroupAndNamespaceFields rulesSourceName={dataSourceName} />}\n\n      {ruleFormType === RuleFormType.grafana && (\n        <div className={classNames([styles.flexRow, styles.alignBaseline])}>\n          <Field\n            label={\n              <Label htmlFor=\"folder\" description={'Select a folder to store your rule.'}>\n                <Stack gap={0.5}>\n                  Folder\n                  <Tooltip\n                    placement=\"top\"\n                    content={\n                      <div>\n                        Each folder has unique folder permission. When you store multiple rules in a folder, the folder\n                        access permissions get assigned to the rules.\n                      </div>\n                    }\n                  >\n                    <Icon name=\"info-circle\" size=\"xs\" />\n                  </Tooltip>\n                </Stack>\n              </Label>\n            }\n            className={styles.formInput}\n            error={errors.folder?.message}\n            invalid={!!errors.folder?.message}\n            data-testid=\"folder-picker\"\n          >\n            <InputControl\n              render={({ field: { ref, ...field } }) => (\n                <RuleFolderPicker\n                  inputId=\"folder\"\n                  {...field}\n                  enableCreateNew={contextSrv.hasPermission(AccessControlAction.FoldersCreate)}\n                  enableReset={true}\n                  filter={folderFilter}\n                  dissalowSlashes={true}\n                />\n              )}\n              name=\"folder\"\n              rules={{\n                required: { value: true, message: 'Please select a folder' },\n                validate: {\n                  pathSeparator: (folder: Folder) => checkForPathSeparator(folder.title),\n                },\n              }}\n            />\n          </Field>\n          <Field\n            label=\"Group\"\n            data-testid=\"group-picker\"\n            description=\"Rules within the same group are evaluated after the same time interval.\"\n            className={styles.formInput}\n            error={errors.group?.message}\n            invalid={!!errors.group?.message}\n          >\n            <Input\n              id=\"group\"\n              {...register('group', {\n                required: { value: true, message: 'Must enter a group name' },\n                validate: {\n                  pathSeparator: (group_: string) => checkForPathSeparator(group_),\n                },\n              })}\n            />\n          </Field>\n        </div>\n      )}\n      {type !== RuleFormType.cloudRecording && <AnnotationsField />}\n    </RuleEditorSection>\n  );\n};\n\nconst useRuleFolderFilter = (existingRuleForm: RuleForm | null) => {\n  const isSearchHitAvailable = useCallback(\n    (hit: DashboardSearchHit) => {\n      const rbacDisabledFallback = contextSrv.hasEditPermissionInFolders;\n\n      const canCreateRuleInFolder = contextSrv.hasAccessInMetadata(\n        AccessControlAction.AlertingRuleCreate,\n        hit,\n        rbacDisabledFallback\n      );\n\n      const canUpdateInCurrentFolder =\n        existingRuleForm &&\n        hit.folderId === existingRuleForm.id &&\n        contextSrv.hasAccessInMetadata(AccessControlAction.AlertingRuleUpdate, hit, rbacDisabledFallback);\n      return canCreateRuleInFolder || canUpdateInCurrentFolder;\n    },\n    [existingRuleForm]\n  );\n\n  return useCallback<FolderPickerFilter>(\n    (folderHits) =>\n      folderHits\n        .filter(isSearchHitAvailable)\n        .filter((value: DashboardSearchHit) => !containsSlashes(value.title ?? '')),\n    [isSearchHitAvailable]\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  alignBaseline: css`\n    align-items: baseline;\n    margin-bottom: ${theme.spacing(3)};\n  `,\n  formInput: css`\n    width: 275px;\n\n    & + & {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: end;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Link, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { RuleFormValues } from '../../types/rule-form';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../utils/datasource';\n\nimport LabelsField from './LabelsField';\nimport { RuleEditorSection } from './RuleEditorSection';\n\nexport const NotificationsStep = () => {\n  const [hideFlowChart, setHideFlowChart] = useState(false);\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const { watch } = useFormContext<RuleFormValues>();\n\n  const dataSourceName = watch('dataSourceName') ?? GRAFANA_RULES_SOURCE_NAME;\n\n  return (\n    <RuleEditorSection\n      stepNo={4}\n      title=\"Notifications\"\n      description=\"Grafana handles the notifications for alerts by assigning labels to alerts. These labels connect alerts to contact points and silence alert instances that have matching labels.\"\n    >\n      <div>\n        <div className={styles.hideButton} onClick={() => setHideFlowChart(!hideFlowChart)}>\n          {`${!hideFlowChart ? 'Hide' : 'Show'} flow chart`}\n        </div>\n      </div>\n      <div className={styles.contentWrapper}>\n        {!hideFlowChart && (\n          <img\n            className={styles.flowChart}\n            src={`public/img/alerting/notification_policy_${theme.name.toLowerCase()}.svg`}\n            alt=\"notification policy flow chart\"\n          />\n        )}\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <LabelsField dataSourceName={dataSourceName} />\n          <Card className={styles.card}>\n            <Card.Heading>Root route – default for all alerts</Card.Heading>\n            <Card.Description>\n              Without custom labels, your alert will be routed through the root route. To view and edit the root route,\n              go to <Link href=\"/alerting/routes\">notification policies</Link> or contact your admin in case you are\n              using non-Grafana alert management.\n            </Card.Description>\n          </Card>\n        </div>\n      </div>\n    </RuleEditorSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  contentWrapper: css`\n    display: flex;\n    align-items: center;\n  `,\n  hideButton: css`\n    color: ${theme.colors.text.secondary};\n    cursor: pointer;\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  card: css`\n    max-width: 500px;\n  `,\n  flowChart: css`\n    margin-right: ${theme.spacing(3)};\n  `,\n});\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import { css } from '@emotion/css';\nimport { dump, load } from 'js-yaml';\nimport React, { FC, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, CodeEditor, Drawer, Icon, Tab, TabsBar, useStyles2, Tooltip } from '@grafana/ui';\n\nimport { RulerRuleDTO } from '../../../../../types/unified-alerting-dto';\nimport { RuleFormValues } from '../../types/rule-form';\nimport {\n  alertingRulerRuleToRuleForm,\n  formValuesToRulerRuleDTO,\n  recordingRulerRuleToRuleForm,\n} from '../../utils/rule-form';\nimport { isAlertingRulerRule, isRecordingRulerRule } from '../../utils/rules';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst tabs = [{ label: 'Yaml', value: 'yaml' }];\n\nexport const RuleInspector: FC<Props> = ({ onClose }) => {\n  const [activeTab, setActiveTab] = useState('yaml');\n  const { setValue } = useFormContext<RuleFormValues>();\n  const styles = useStyles2(drawerStyles);\n\n  const onApply = (formValues: RuleFormValues) => {\n    // Need to loop through all values and set them individually\n    // TODO this is not type-safe :(\n    for (const key in formValues) {\n      // @ts-ignore\n      setValue(key, formValues[key]);\n    }\n    onClose();\n  };\n\n  return (\n    <Drawer\n      title=\"Inspect Alert rule\"\n      subtitle={\n        <div className={styles.subtitle}>\n          <RuleInspectorSubtitle setActiveTab={setActiveTab} activeTab={activeTab} />\n        </div>\n      }\n      onClose={onClose}\n    >\n      {activeTab === 'yaml' && <InspectorYamlTab onSubmit={onApply} />}\n    </Drawer>\n  );\n};\n\ninterface SubtitleProps {\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n}\n\nconst RuleInspectorSubtitle: FC<SubtitleProps> = ({ activeTab, setActiveTab }) => {\n  return (\n    <TabsBar>\n      {tabs.map((tab, index) => {\n        return (\n          <Tab\n            key={`${tab.value}-${index}`}\n            label={tab.label}\n            value={tab.value}\n            onChangeTab={() => setActiveTab(tab.value)}\n            active={activeTab === tab.value}\n          />\n        );\n      })}\n    </TabsBar>\n  );\n};\n\ninterface YamlTabProps {\n  onSubmit: (newModel: RuleFormValues) => void;\n}\n\nconst InspectorYamlTab: FC<YamlTabProps> = ({ onSubmit }) => {\n  const styles = useStyles2(yamlTabStyle);\n  const { getValues } = useFormContext<RuleFormValues>();\n\n  const yamlValues = formValuesToRulerRuleDTO(getValues());\n  const [alertRuleAsYaml, setAlertRuleAsYaml] = useState(dump(yamlValues));\n\n  const onApply = () => {\n    const rulerRule = load(alertRuleAsYaml) as RulerRuleDTO;\n    const currentFormValues = getValues();\n\n    const yamlFormValues = rulerRuleToRuleFormValues(rulerRule);\n    onSubmit({ ...currentFormValues, ...yamlFormValues });\n  };\n\n  return (\n    <>\n      <div className={styles.applyButton}>\n        <Button type=\"button\" onClick={onApply}>\n          Apply\n        </Button>\n        <Tooltip content={<YamlContentInfo />} theme=\"info\" placement=\"left-start\" interactive={true}>\n          <Icon name=\"exclamation-triangle\" size=\"xl\" />\n        </Tooltip>\n      </div>\n\n      <div className={styles.content}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CodeEditor\n              width=\"100%\"\n              height={height}\n              language=\"yaml\"\n              value={alertRuleAsYaml}\n              onBlur={setAlertRuleAsYaml}\n              monacoOptions={{\n                minimap: {\n                  enabled: false,\n                },\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </>\n  );\n};\n\nfunction YamlContentInfo() {\n  return (\n    <div>\n      The YAML content in the editor only contains alert rule configuration <br />\n      To configure Prometheus, you need to provide the rest of the{' '}\n      <a\n        href=\"https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        configuration file content.\n      </a>\n    </div>\n  );\n}\n\nfunction rulerRuleToRuleFormValues(rulerRule: RulerRuleDTO): Partial<RuleFormValues> {\n  if (isAlertingRulerRule(rulerRule)) {\n    return alertingRulerRuleToRuleForm(rulerRule);\n  } else if (isRecordingRulerRule(rulerRule)) {\n    return recordingRulerRuleToRuleForm(rulerRule);\n  }\n\n  return {};\n}\n\nconst yamlTabStyle = (theme: GrafanaTheme2) => ({\n  content: css`\n    flex-grow: 1;\n    height: 100%;\n    padding-bottom: 16px;\n    margin-bottom: ${theme.spacing(2)};\n  `,\n  applyButton: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-grow: 0;\n    margin-bottom: ${theme.spacing(2)};\n  `,\n});\n\nconst drawerStyles = () => ({\n  subtitle: css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2 } from '@grafana/data/src';\nimport { Icon, TagList, Tooltip, useStyles2 } from '@grafana/ui/src';\n\nimport { labelsToTags } from '../../utils/labels';\nimport { AlertStateTag } from '../rules/AlertStateTag';\n\nimport { mapDataFrameToAlertPreview } from './preview';\n\ninterface CloudAlertPreviewProps {\n  preview: DataFrame;\n}\n\nexport function CloudAlertPreview({ preview }: CloudAlertPreviewProps) {\n  const styles = useStyles2(getStyles);\n  const alertPreview = mapDataFrameToAlertPreview(preview);\n\n  return (\n    <table className={styles.table}>\n      <caption>\n        <div>Alerts preview</div>\n        <span>Preview based on the result of running the query for this moment.</span>\n      </caption>\n      <thead>\n        <tr>\n          <th>State</th>\n          <th>Labels</th>\n          <th>Info</th>\n        </tr>\n      </thead>\n      <tbody>\n        {alertPreview.instances.map(({ state, info, labels }, index) => {\n          const instanceTags = labelsToTags(labels);\n\n          return (\n            <tr key={index}>\n              <td>{<AlertStateTag state={state} />}</td>\n              <td>\n                <TagList tags={instanceTags} className={styles.tagList} />\n              </td>\n              <td>\n                {info && (\n                  <Tooltip content={info}>\n                    <Icon name=\"info-circle\" />\n                  </Tooltip>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    width: 100%;\n    margin: ${theme.spacing(2, 0)};\n\n    caption {\n      caption-side: top;\n      color: ${theme.colors.text.primary};\n\n      & > span {\n        font-size: ${theme.typography.bodySmall.fontSize};\n        color: ${theme.colors.text.secondary};\n      }\n    }\n\n    td,\n    th {\n      padding: ${theme.spacing(1, 1)};\n    }\n\n    td + td,\n    th + th {\n      padding-left: ${theme.spacing(3)};\n    }\n\n    thead th {\n      &:nth-child(1) {\n        width: 80px;\n      }\n\n      &:nth-child(2) {\n        width: auto;\n      }\n\n      &:nth-child(3) {\n        width: 40px;\n      }\n    }\n\n    td:nth-child(3) {\n      text-align: center;\n    }\n\n    tbody tr:nth-child(2n + 1) {\n      background-color: ${theme.colors.background.secondary};\n    }\n  `,\n  tagList: css`\n    justify-content: flex-start;\n  `,\n});\n","import { DataFrame } from '@grafana/data';\n\nimport { GrafanaAlertState, isGrafanaAlertState, Labels } from '../../../../../types/unified-alerting-dto';\n\ninterface AlertPreviewInstance {\n  state: GrafanaAlertState;\n  info?: string;\n  labels: Labels;\n}\n\ninterface AlertPreview {\n  instances: AlertPreviewInstance[];\n}\n\n// Alerts previews come in a DataFrame format which is more suited for displaying time series data\n// In order to display a list of tags we need to transform DataFrame into set of labels\nexport function mapDataFrameToAlertPreview({ fields }: DataFrame): AlertPreview {\n  const labelFields = fields.filter((field) => !['State', 'Info'].includes(field.name));\n  const stateFieldIndex = fields.findIndex((field) => field.name === 'State');\n  const infoFieldIndex = fields.findIndex((field) => field.name === 'Info');\n\n  const labelIndexes = labelFields.map((labelField) => fields.indexOf(labelField));\n\n  const instanceStatusCount = fields[stateFieldIndex]?.values.length ?? 0;\n\n  const instances: AlertPreviewInstance[] = [];\n\n  for (let index = 0; index < instanceStatusCount; index++) {\n    const labelValues = labelIndexes.map((labelIndex) => [\n      fields[labelIndex].name,\n      fields[labelIndex].values.get(index),\n    ]);\n    const state = fields[stateFieldIndex]?.values?.get(index);\n    const info = fields[infoFieldIndex]?.values?.get(index);\n\n    if (isGrafanaAlertState(state)) {\n      instances.push({\n        state: state,\n        info: info,\n        labels: Object.fromEntries(labelValues),\n      });\n    }\n  }\n\n  return { instances };\n}\n","import { Labels } from '../../../../types/unified-alerting-dto';\n\nexport function labelsToTags(labels: Labels) {\n  return Object.entries(labels)\n    .map(([label, value]) => `${label}=${value}`)\n    .sort();\n}\n","import { css } from '@emotion/css';\nimport { noop } from 'lodash';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { CoreApp, DataQuery, DataSourcePluginContextProvider, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Alert, Button, useStyles2 } from '@grafana/ui';\nimport { LokiQuery } from 'app/plugins/datasource/loki/types';\nimport { PromQuery } from 'app/plugins/datasource/prometheus/types';\n\nimport { CloudAlertPreview } from './CloudAlertPreview';\nimport { usePreview } from './PreviewRule';\n\nexport interface ExpressionEditorProps {\n  value?: string;\n  onChange: (value: string) => void;\n  dataSourceName: string; // will be a prometheus or loki datasource\n}\n\nexport const ExpressionEditor: FC<ExpressionEditorProps> = ({ value, onChange, dataSourceName }) => {\n  const styles = useStyles2(getStyles);\n\n  const { mapToValue, mapToQuery } = useQueryMappers(dataSourceName);\n  const dataQuery = mapToQuery({ refId: 'A', hide: false }, value);\n\n  const {\n    error,\n    loading,\n    value: dataSource,\n  } = useAsync(() => {\n    return getDataSourceSrv().get(dataSourceName);\n  }, [dataSourceName]);\n\n  const onChangeQuery = useCallback(\n    (query: DataQuery) => {\n      onChange(mapToValue(query));\n    },\n    [onChange, mapToValue]\n  );\n\n  const [alertPreview, onPreview] = usePreview();\n\n  const onRunQueriesClick = async () => {\n    onPreview();\n  };\n\n  if (loading || dataSource?.name !== dataSourceName) {\n    return null;\n  }\n\n  const dsi = getDataSourceSrv().getInstanceSettings(dataSourceName);\n\n  if (error || !dataSource || !dataSource?.components?.QueryEditor || !dsi) {\n    const errorMessage = error?.message || 'Data source plugin does not export any Query Editor component';\n    return <div>Could not load query editor due to: {errorMessage}</div>;\n  }\n\n  const previewLoaded = alertPreview?.data.state === LoadingState.Done;\n\n  const QueryEditor = dataSource?.components?.QueryEditor;\n\n  // The Preview endpoint returns the preview as a single-element array of data frames\n  const previewDataFrame = alertPreview?.data?.series?.find((s) => s.name === 'evaluation results');\n  // The preview API returns arrays with empty elements when there are no firing alerts\n  const previewHasAlerts = previewDataFrame && previewDataFrame.fields.some((field) => field.values.length > 0);\n\n  return (\n    <>\n      <DataSourcePluginContextProvider instanceSettings={dsi}>\n        <QueryEditor\n          query={dataQuery}\n          queries={[dataQuery]}\n          app={CoreApp.CloudAlerting}\n          onChange={onChangeQuery}\n          onRunQuery={noop}\n          datasource={dataSource}\n        />\n      </DataSourcePluginContextProvider>\n      <div className={styles.preview}>\n        <Button type=\"button\" onClick={onRunQueriesClick} disabled={alertPreview?.data.state === LoadingState.Loading}>\n          Preview alerts\n        </Button>\n        {previewLoaded && !previewHasAlerts && (\n          <Alert title=\"Alerts preview\" severity=\"info\" className={styles.previewAlert}>\n            There are no firing alerts for your query.\n          </Alert>\n        )}\n        {previewHasAlerts && <CloudAlertPreview preview={previewDataFrame} />}\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  preview: css`\n    padding: ${theme.spacing(2, 0)};\n    max-width: ${theme.breakpoints.values.xl}px;\n  `,\n  previewAlert: css`\n    margin: ${theme.spacing(1, 0)};\n  `,\n});\n\ntype QueryMappers<T extends DataQuery = DataQuery> = {\n  mapToValue: (query: T) => string;\n  mapToQuery: (existing: T, value: string | undefined) => T;\n};\n\nfunction useQueryMappers(dataSourceName: string): QueryMappers {\n  return useMemo(() => {\n    const settings = getDataSourceSrv().getInstanceSettings(dataSourceName);\n\n    switch (settings?.type) {\n      case 'loki':\n      case 'prometheus':\n        return {\n          mapToValue: (query: DataQuery) => (query as PromQuery | LokiQuery).expr,\n          mapToQuery: (existing: DataQuery, value: string | undefined) => ({ ...existing, expr: value }),\n        };\n      default:\n        throw new Error(`${dataSourceName} is not supported as an expression editor`);\n    }\n  }, [dataSourceName]);\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\n/**\n * A simple \"flex: 1;\" component you can use in combination with the Stack component(s), like so\n *\n *  <Stack direction=\"row\">\n *    <span>hello</span>\n *    <Spacer />\n *    <span>world</span>\n *  </Stack>\n */\n\nexport const Spacer = () => (\n  <span\n    className={css`\n      flex: 1;\n    `}\n  />\n);\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Badge, useStyles2 } from '@grafana/ui';\n\ninterface AlertConditionProps {\n  enabled?: boolean;\n  error?: Error;\n  warning?: Error;\n  onSetCondition: () => void;\n}\n\nexport const AlertConditionIndicator: FC<AlertConditionProps> = ({\n  enabled = false,\n  error,\n  warning,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  if (enabled && error) {\n    return <Badge color=\"red\" icon=\"exclamation-circle\" text=\"Alert condition\" tooltip={error.message} />;\n  }\n\n  if (enabled && warning) {\n    return <Badge color=\"orange\" icon=\"exclamation-triangle\" text=\"Alert condition\" tooltip={warning.message} />;\n  }\n\n  if (enabled && !error && !warning) {\n    return <Badge color=\"green\" icon=\"check\" text=\"Alert condition\" />;\n  }\n\n  if (!enabled) {\n    return (\n      <div className={styles.actionLink} onClick={() => onSetCondition()}>\n        Make this the alert condition\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionLink: css`\n    color: ${theme.colors.text.link};\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  `,\n});\n","import { DataFrame, Labels, roundDecimals } from '@grafana/data';\n\nconst getSeriesName = (frame: DataFrame): string => {\n  return frame.name ?? formatLabels(frame.fields[0].labels ?? {});\n};\n\nconst getSeriesValue = (frame: DataFrame) => {\n  const value = frame.fields[0].values.get(0);\n\n  if (Number.isFinite(value)) {\n    return roundDecimals(value, 5);\n  }\n\n  return value;\n};\n\nconst formatLabels = (labels: Labels): string => {\n  return Object.entries(labels)\n    .map(([key, value]) => key + '=' + value)\n    .join(', ');\n};\n\nconst isEmptySeries = (series: DataFrame[]): boolean => {\n  const isEmpty = series.every((serie) =>\n    serie.fields.every((field) => field.values.toArray().every((value) => value == null))\n  );\n\n  return isEmpty;\n};\n\nexport { getSeriesName, getSeriesValue, formatLabels, isEmptySeries };\n","import { css, cx } from '@emotion/css';\nimport { capitalize, uniqueId } from 'lodash';\nimport React, { FC, useCallback, useState } from 'react';\n\nimport { DataFrame, dateTimeFormat, GrafanaTheme2, LoadingState, PanelData } from '@grafana/data';\nimport { isTimeSeries } from '@grafana/data/src/dataframe/utils';\nimport { Stack } from '@grafana/experimental';\nimport { AutoSizeInput, Icon, IconButton, Select, useStyles2 } from '@grafana/ui';\nimport { ClassicConditions } from 'app/features/expressions/components/ClassicConditions';\nimport { Math } from 'app/features/expressions/components/Math';\nimport { Reduce } from 'app/features/expressions/components/Reduce';\nimport { Resample } from 'app/features/expressions/components/Resample';\nimport { Threshold } from 'app/features/expressions/components/Threshold';\nimport { ExpressionQuery, ExpressionQueryType, gelTypes } from 'app/features/expressions/types';\nimport { AlertQuery, PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { HoverCard } from '../HoverCard';\nimport { Spacer } from '../Spacer';\nimport { AlertStateTag } from '../rules/AlertStateTag';\n\nimport { AlertConditionIndicator } from './AlertConditionIndicator';\nimport { formatLabels, getSeriesName, getSeriesValue, isEmptySeries } from './util';\n\ninterface ExpressionProps {\n  isAlertCondition?: boolean;\n  data?: PanelData;\n  error?: Error;\n  warning?: Error;\n  queries: AlertQuery[];\n  query: ExpressionQuery;\n  onSetCondition: (refId: string) => void;\n  onUpdateRefId: (oldRefId: string, newRefId: string) => void;\n  onRemoveExpression: (refId: string) => void;\n  onUpdateExpressionType: (refId: string, type: ExpressionQueryType) => void;\n  onChangeQuery: (query: ExpressionQuery) => void;\n}\n\nexport const Expression: FC<ExpressionProps> = ({\n  queries = [],\n  query,\n  data,\n  error,\n  warning,\n  isAlertCondition,\n  onSetCondition,\n  onUpdateRefId,\n  onRemoveExpression,\n  onUpdateExpressionType,\n  onChangeQuery,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const queryType = query?.type;\n\n  const isLoading = data && Object.values(data).some((d) => Boolean(d) && d.state === LoadingState.Loading);\n  const hasResults = Array.isArray(data?.series) && !isLoading;\n  const series = data?.series ?? [];\n\n  // sometime we receive results where every value is just \"null\" when noData occurs\n  const emptyResults = hasResults && isEmptySeries(series);\n  const isTimeSeriesResults = !emptyResults && isTimeSeries(series);\n\n  const alertCondition = isAlertCondition ?? false;\n  const showSummary = isAlertCondition && hasResults;\n\n  const groupedByState = {\n    [PromAlertingRuleState.Firing]: series.filter((serie) => getSeriesValue(serie) >= 1),\n    [PromAlertingRuleState.Inactive]: series.filter((serie) => getSeriesValue(serie) < 1),\n  };\n\n  const renderExpressionType = useCallback(\n    (query: ExpressionQuery) => {\n      // these are the refs we can choose from that don't include the current one\n      const availableRefIds = queries\n        .filter((q) => query.refId !== q.refId)\n        .map((q) => ({ value: q.refId, label: q.refId }));\n\n      switch (query.type) {\n        case ExpressionQueryType.math:\n          return <Math onChange={onChangeQuery} query={query} labelWidth={'auto'} onRunQuery={() => {}} />;\n\n        case ExpressionQueryType.reduce:\n          return <Reduce onChange={onChangeQuery} refIds={availableRefIds} labelWidth={'auto'} query={query} />;\n\n        case ExpressionQueryType.resample:\n          return <Resample onChange={onChangeQuery} query={query} labelWidth={'auto'} refIds={availableRefIds} />;\n\n        case ExpressionQueryType.classic:\n          return <ClassicConditions onChange={onChangeQuery} query={query} refIds={availableRefIds} />;\n\n        case ExpressionQueryType.threshold:\n          return <Threshold onChange={onChangeQuery} query={query} labelWidth={'auto'} refIds={availableRefIds} />;\n\n        default:\n          return <>Expression not supported: {query.type}</>;\n      }\n    },\n    [onChangeQuery, queries]\n  );\n\n  return (\n    <div className={cx(styles.expression.wrapper, alertCondition && styles.expression.alertCondition)}>\n      <div className={styles.expression.stack}>\n        <Header\n          refId={query.refId}\n          queryType={queryType}\n          onRemoveExpression={() => onRemoveExpression(query.refId)}\n          onUpdateRefId={(newRefId) => onUpdateRefId(query.refId, newRefId)}\n          onUpdateExpressionType={(type) => onUpdateExpressionType(query.refId, type)}\n        />\n        <div className={styles.expression.body}>{renderExpressionType(query)}</div>\n        {hasResults && (\n          <div className={styles.expression.results}>\n            {!emptyResults && isTimeSeriesResults && (\n              <div>\n                {series.map((frame, index) => (\n                  <TimeseriesRow key={uniqueId()} frame={frame} index={index} isAlertCondition={isAlertCondition} />\n                ))}\n              </div>\n            )}\n            {!emptyResults &&\n              !isTimeSeriesResults &&\n              series.map((frame, index) => (\n                // There's no way to uniquely identify a frame that doesn't cause render bugs :/ (Gilles)\n                <FrameRow key={uniqueId()} frame={frame} index={index} isAlertCondition={alertCondition} />\n              ))}\n            {emptyResults && <div className={cx(styles.expression.noData, styles.mutedText)}>No data</div>}\n          </div>\n        )}\n        <div className={styles.footer}>\n          <Stack direction=\"row\" alignItems=\"center\">\n            <AlertConditionIndicator\n              onSetCondition={() => onSetCondition(query.refId)}\n              enabled={alertCondition}\n              error={error}\n              warning={warning}\n            />\n            <Spacer />\n            {showSummary && (\n              <PreviewSummary\n                firing={groupedByState[PromAlertingRuleState.Firing].length}\n                normal={groupedByState[PromAlertingRuleState.Inactive].length}\n              />\n            )}\n          </Stack>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PreviewSummary: FC<{ firing: number; normal: number }> = ({ firing, normal }) => {\n  const { mutedText } = useStyles2(getStyles);\n  return <span className={mutedText}>{`${firing} firing, ${normal} normal`}</span>;\n};\n\ninterface HeaderProps {\n  refId: string;\n  queryType: ExpressionQueryType;\n  onUpdateRefId: (refId: string) => void;\n  onRemoveExpression: () => void;\n  onUpdateExpressionType: (type: ExpressionQueryType) => void;\n}\n\nconst Header: FC<HeaderProps> = ({ refId, queryType, onUpdateRefId, onUpdateExpressionType, onRemoveExpression }) => {\n  const styles = useStyles2(getStyles);\n  /**\n   * There are 3 edit modes:\n   *\n   * 1. \"refId\": Editing the refId (ie. A -> B)\n   * 2. \"epressionType\": Editing the type of the expression (ie. Reduce -> Math)\n   * 3. \"false\": This means we're not editing either of those\n   */\n  const [editMode, setEditMode] = useState<'refId' | 'expressionType' | false>(false);\n\n  const editing = editMode !== false;\n  const editingRefId = editing && editMode === 'refId';\n  const editingType = editing && editMode === 'expressionType';\n\n  const selectedExpressionType = gelTypes.find((o) => o.value === queryType);\n\n  return (\n    <header className={styles.header.wrapper}>\n      <Stack direction=\"row\" gap={0.5} alignItems=\"center\">\n        <Stack direction=\"row\" gap={1} alignItems=\"center\" wrap={false}>\n          {!editingRefId && (\n            <div className={styles.editable} onClick={() => setEditMode('refId')}>\n              <div className={styles.expression.refId}>{refId}</div>\n            </div>\n          )}\n          {editingRefId && (\n            <AutoSizeInput\n              autoFocus\n              defaultValue={refId}\n              minWidth={5}\n              onChange={(event) => {\n                onUpdateRefId(event.currentTarget.value);\n                setEditMode(false);\n              }}\n              onFocus={(event) => event.target.select()}\n              onBlur={(event) => {\n                onUpdateRefId(event.currentTarget.value);\n                setEditMode(false);\n              }}\n            />\n          )}\n          {!editingType && (\n            <div className={styles.editable} onClick={() => setEditMode('expressionType')}>\n              <div className={styles.mutedText}>{capitalize(queryType)}</div>\n              <Icon size=\"xs\" name=\"pen\" className={styles.mutedIcon} onClick={() => setEditMode('expressionType')} />\n            </div>\n          )}\n          {editingType && (\n            <Select\n              isOpen\n              autoFocus\n              onChange={(selection) => {\n                onUpdateExpressionType(selection.value ?? ExpressionQueryType.classic);\n                setEditMode(false);\n              }}\n              onBlur={() => {\n                setEditMode(false);\n              }}\n              options={gelTypes}\n              value={selectedExpressionType}\n              width={25}\n            />\n          )}\n        </Stack>\n        <Spacer />\n        <IconButton\n          type=\"button\"\n          name=\"trash-alt\"\n          variant=\"secondary\"\n          className={styles.mutedIcon}\n          onClick={onRemoveExpression}\n        />\n      </Stack>\n    </header>\n  );\n};\n\ninterface FrameProps extends Pick<ExpressionProps, 'isAlertCondition'> {\n  frame: DataFrame;\n  index: number;\n}\n\nconst FrameRow: FC<FrameProps> = ({ frame, index, isAlertCondition }) => {\n  const styles = useStyles2(getStyles);\n\n  const name = getSeriesName(frame) || 'Series ' + index;\n  const value = getSeriesValue(frame);\n\n  const showFiring = isAlertCondition && value !== 0;\n  const showNormal = isAlertCondition && value === 0;\n\n  return (\n    <div className={styles.expression.resultsRow}>\n      <Stack direction=\"row\" gap={1} alignItems=\"center\">\n        <span className={cx(styles.mutedText, styles.expression.resultLabel)} title={name}>\n          {name}\n        </span>\n        <div className={styles.expression.resultValue}>{value}</div>\n        {showFiring && <AlertStateTag state={PromAlertingRuleState.Firing} size=\"sm\" />}\n        {showNormal && <AlertStateTag state={PromAlertingRuleState.Inactive} size=\"sm\" />}\n      </Stack>\n    </div>\n  );\n};\n\nconst TimeseriesRow: FC<FrameProps & { index: number }> = ({ frame, index }) => {\n  const styles = useStyles2(getStyles);\n\n  const hasLabels = frame.fields[1].labels;\n  const name = hasLabels ? formatLabels(frame.fields[1].labels ?? {}) : 'Series ' + index;\n\n  const timestamps = frame.fields[0].values.toArray();\n\n  const getTimestampFromIndex = (index: number) => frame.fields[0].values.get(index);\n  const getValueFromIndex = (index: number) => frame.fields[1].values.get(index);\n\n  return (\n    <div className={styles.expression.resultsRow}>\n      <Stack direction=\"row\" gap={1} alignItems=\"center\">\n        <span className={cx(styles.mutedText, styles.expression.resultLabel)} title={name}>\n          {name}\n        </span>\n        <div className={styles.expression.resultValue}>\n          <HoverCard\n            placement=\"right\"\n            wrapperClassName={styles.timeseriesTableWrapper}\n            content={\n              <table className={styles.timeseriesTable}>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {timestamps.map((_, index) => (\n                    <tr key={index}>\n                      <td className={styles.mutedText}>{dateTimeFormat(getTimestampFromIndex(index))}</td>\n                      <td className={styles.expression.resultValue}>{getValueFromIndex(index)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            }\n          >\n            <span>Time series data</span>\n          </HoverCard>\n        </div>\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  expression: {\n    wrapper: css`\n      display: flex;\n      border: solid 1px ${theme.colors.border.medium};\n\n      border-radius: ${theme.shape.borderRadius()};\n      max-width: 640px;\n    `,\n    stack: css`\n      display: flex;\n      flex-direction: column;\n      flex-wrap: nowrap;\n      gap: 0;\n      min-width: 0; // this one is important to prevent text overflow\n    `,\n    alertCondition: css``,\n    body: css`\n      padding: ${theme.spacing(1)};\n      flex: 1;\n    `,\n    refId: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      color: ${theme.colors.primary.text};\n    `,\n    results: css`\n      border-top: solid 1px ${theme.colors.border.medium};\n    `,\n    noResults: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n    resultsRow: css`\n      padding: ${theme.spacing(0.75)} ${theme.spacing(1)};\n\n      &:nth-child(odd) {\n        background-color: ${theme.colors.background.secondary};\n      }\n\n      &:hover {\n        background-color: ${theme.colors.background.canvas};\n      }\n    `,\n    resultValue: css`\n      color: ${theme.colors.text.maxContrast};\n      text-align: right;\n    `,\n    resultLabel: css`\n      flex: 1;\n    `,\n    noData: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: ${theme.spacing()};\n    `,\n  },\n  mutedText: css`\n    color: ${theme.colors.text.secondary};\n    font-size: 0.9em;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n  header: {\n    wrapper: css`\n      background: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      border-bottom: solid 1px ${theme.colors.border.medium};\n    `,\n  },\n  footer: css`\n    background: ${theme.colors.background.secondary};\n    padding: ${theme.spacing(1)};\n    border-top: solid 1px ${theme.colors.border.medium};\n  `,\n  draggableIcon: css`\n    cursor: grab;\n  `,\n  mutedIcon: css`\n    color: ${theme.colors.text.secondary};\n  `,\n  editable: css`\n    padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n    border: solid 1px ${theme.colors.border.weak};\n    border-radius: ${theme.shape.borderRadius()};\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: ${theme.spacing(1)};\n\n    cursor: pointer;\n  `,\n  timeseriesTableWrapper: css`\n    max-height: 500px;\n    max-width: 300px;\n\n    overflow-y: scroll;\n\n    padding: 0 !important; // not sure why but style override doesn't work otherwise :( (Gilles)\n  `,\n  timeseriesTable: css`\n    table-layout: auto;\n\n    width: 100%;\n    height: 100%;\n\n    td,\n    th {\n      padding: ${theme.spacing(1)};\n    }\n\n    td {\n      background: ${theme.colors.background.primary};\n    }\n\n    th {\n      background: ${theme.colors.background.secondary};\n    }\n\n    tr {\n      border-bottom: 1px solid ${theme.colors.border.medium};\n\n      &:last-of-type {\n        border-bottom: none;\n      }\n    }\n  `,\n});\n","import React, { FC, useMemo } from 'react';\n\nimport { PanelData } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { ExpressionQuery, ExpressionQueryType } from 'app/features/expressions/types';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { Expression } from '../expressions/Expression';\n\nimport { errorFromSeries, warningFromSeries } from './util';\n\ninterface Props {\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n  panelData: Record<string, PanelData | undefined>;\n  queries: AlertQuery[];\n  onRemoveExpression: (refId: string) => void;\n  onUpdateRefId: (oldRefId: string, newRefId: string) => void;\n  onUpdateExpressionType: (refId: string, type: ExpressionQueryType) => void;\n  onUpdateQueryExpression: (query: ExpressionQuery) => void;\n}\n\nexport const ExpressionsEditor: FC<Props> = ({\n  condition,\n  onSetCondition,\n  queries,\n  panelData,\n  onUpdateRefId,\n  onRemoveExpression,\n  onUpdateExpressionType,\n  onUpdateQueryExpression,\n}) => {\n  const expressionQueries = useMemo(() => {\n    return queries.reduce((acc: ExpressionQuery[], query) => {\n      return isExpressionQuery(query.model) ? acc.concat(query.model) : acc;\n    }, []);\n  }, [queries]);\n\n  return (\n    <Stack direction=\"row\" alignItems=\"stretch\">\n      {expressionQueries.map((query) => {\n        const data = panelData[query.refId];\n\n        const isAlertCondition = condition === query.refId;\n        const error = isAlertCondition && data ? errorFromSeries(data.series) : undefined;\n        const warning = isAlertCondition && data ? warningFromSeries(data.series) : undefined;\n\n        return (\n          <Expression\n            key={query.refId}\n            isAlertCondition={isAlertCondition}\n            data={data}\n            error={error}\n            warning={warning}\n            queries={queries}\n            query={query}\n            onSetCondition={onSetCondition}\n            onRemoveExpression={onRemoveExpression}\n            onUpdateRefId={onUpdateRefId}\n            onUpdateExpressionType={onUpdateExpressionType}\n            onChangeQuery={onUpdateQueryExpression}\n          />\n        );\n      })}\n    </Stack>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { FieldConfigSource, GrafanaTheme2, PanelData, ThresholdsConfig } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphFieldConfig, GraphTresholdsStyleMode } from '@grafana/schema';\nimport { PanelContext, PanelContextProvider, useStyles2 } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { PanelOptions } from 'app/plugins/panel/table/models.gen';\n\nimport { useVizHeight } from '../../hooks/useVizHeight';\nimport { SupportedPanelPlugins, PanelPluginsButtonGroup } from '../PanelPluginsButtonGroup';\n\ninterface Props {\n  data: PanelData;\n  currentPanel: SupportedPanelPlugins;\n  changePanel: (panel: SupportedPanelPlugins) => void;\n  thresholds: ThresholdsConfig;\n  onThresholdsChange: (thresholds: ThresholdsConfig) => void;\n}\n\ntype PanelFieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport const VizWrapper: FC<Props> = ({ data, currentPanel, changePanel, onThresholdsChange, thresholds }) => {\n  const [options, setOptions] = useState<PanelOptions>({\n    frameIndex: 0,\n    showHeader: true,\n  });\n  const vizHeight = useVizHeight(data, currentPanel, options.frameIndex);\n  const styles = useStyles2(getStyles(vizHeight));\n\n  const [fieldConfig, setFieldConfig] = useState<PanelFieldConfig>(defaultFieldConfig(thresholds, data));\n\n  useEffect(() => {\n    setFieldConfig((fieldConfig) => ({\n      ...fieldConfig,\n      defaults: {\n        ...fieldConfig.defaults,\n        thresholds: thresholds,\n        unit: defaultUnit(data),\n        custom: {\n          ...fieldConfig.defaults.custom,\n          thresholdsStyle: {\n            mode: GraphTresholdsStyleMode.Line,\n          },\n        },\n      },\n    }));\n  }, [thresholds, setFieldConfig, data]);\n\n  const context: PanelContext = useMemo(\n    () => ({\n      eventBus: appEvents,\n      canEditThresholds: true,\n      onThresholdsChange: onThresholdsChange,\n    }),\n    [onThresholdsChange]\n  );\n\n  if (!options || !data) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.buttonGroup}>\n        <PanelPluginsButtonGroup onChange={changePanel} value={currentPanel} />\n      </div>\n      <AutoSizer>\n        {({ width }) => {\n          if (width === 0) {\n            return null;\n          }\n          return (\n            <div style={{ height: `${vizHeight}px`, width: `${width}px` }}>\n              <PanelContextProvider value={context}>\n                <PanelRenderer\n                  height={vizHeight}\n                  width={width}\n                  data={data}\n                  pluginId={currentPanel}\n                  title=\"title\"\n                  onOptionsChange={setOptions}\n                  options={options}\n                  fieldConfig={fieldConfig}\n                />\n              </PanelContextProvider>\n            </div>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n};\n\nconst getStyles = (visHeight: number) => (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    padding: 0 ${theme.spacing(2)};\n    height: ${visHeight + theme.spacing.gridSize * 4}px;\n  `,\n  buttonGroup: css`\n    display: flex;\n    justify-content: flex-end;\n  `,\n});\n\nfunction defaultUnit(data: PanelData): string | undefined {\n  return data.series[0]?.fields.find((field) => field.type === 'number')?.config.unit;\n}\n\nfunction defaultFieldConfig(thresholds: ThresholdsConfig, data: PanelData): PanelFieldConfig {\n  if (!thresholds) {\n    return { defaults: {}, overrides: [] };\n  }\n\n  return {\n    defaults: {\n      thresholds: thresholds,\n      unit: defaultUnit(data),\n      custom: {\n        thresholdsStyle: {\n          mode: GraphTresholdsStyleMode.Line,\n        },\n      },\n    },\n    overrides: [],\n  };\n}\n","import { PanelData } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nimport { STAT, TIMESERIES } from '../utils/constants';\n\nexport function useVizHeight(data: PanelData, pluginId: string, frameIndex: number) {\n  const theme = useTheme2();\n  if (pluginId === TIMESERIES || pluginId === STAT || dataIsEmpty(data)) {\n    return 200;\n  }\n\n  const values = data.series[frameIndex].fields[0].values.length;\n  const rowHeight = theme.spacing.gridSize * 5;\n\n  /*\n   Calculate how if we can make  the table smaller than 200px\n   for when we only have 1-2 values\n   The extra rowHeight is to accommodate the header.\n  */\n  const tableHeight = values * rowHeight + rowHeight;\n\n  return tableHeight >= 200 ? 200 : tableHeight;\n}\n\nfunction dataIsEmpty(data: PanelData) {\n  return !data || !data.series[0] || !data.series[0].fields[0] || !data.series[0].fields[0].values;\n}\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { FC, useState } from 'react';\n\nimport {\n  CoreApp,\n  DataQuery,\n  DataSourceInstanceSettings,\n  getDefaultRelativeTimeRange,\n  GrafanaTheme2,\n  LoadingState,\n  PanelData,\n  RelativeTimeRange,\n  ThresholdsConfig,\n} from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { RelativeTimeRangePicker, useStyles2, Tooltip, Icon } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { QueryEditorRow } from 'app/features/query/components/QueryEditorRow';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { TABLE, TIMESERIES } from '../../utils/constants';\nimport { SupportedPanelPlugins } from '../PanelPluginsButtonGroup';\nimport { AlertConditionIndicator } from '../expressions/AlertConditionIndicator';\n\nimport { VizWrapper } from './VizWrapper';\n\ninterface Props {\n  data: PanelData;\n  error?: Error;\n  query: AlertQuery;\n  queries: AlertQuery[];\n  dsSettings: DataSourceInstanceSettings;\n  onChangeDataSource: (settings: DataSourceInstanceSettings, index: number) => void;\n  onChangeQuery: (query: DataQuery, index: number) => void;\n  onChangeTimeRange?: (timeRange: RelativeTimeRange, index: number) => void;\n  onRemoveQuery: (query: DataQuery) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  onRunQueries: () => void;\n  index: number;\n  thresholds: ThresholdsConfig;\n  onChangeThreshold: (thresholds: ThresholdsConfig, index: number) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport const QueryWrapper: FC<Props> = ({\n  data,\n  error,\n  dsSettings,\n  index,\n  onChangeDataSource,\n  onChangeQuery,\n  onChangeTimeRange,\n  onRunQueries,\n  onRemoveQuery,\n  onDuplicateQuery,\n  query,\n  queries,\n  thresholds,\n  onChangeThreshold,\n  condition,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n  const isExpression = isExpressionQuery(query.model);\n  const [pluginId, changePluginId] = useState<SupportedPanelPlugins>(isExpression ? TABLE : TIMESERIES);\n\n  function SelectingDataSourceTooltip() {\n    const styles = useStyles2(getStyles);\n    return (\n      <div className={styles.dsTooltip}>\n        <Tooltip\n          content={\n            <>\n              Not finding the data source you want? Some data sources are not supported for alerting. Click on the icon\n              for more information.\n            </>\n          }\n        >\n          <Icon\n            name=\"info-circle\"\n            onClick={() =>\n              window.open(\n                ' https://grafana.com/docs/grafana/latest/alerting/fundamentals/data-source-alerting/',\n                '_blank'\n              )\n            }\n          />\n        </Tooltip>\n      </div>\n    );\n  }\n\n  // TODO add a warning label here too when the data looks like time series data and is used as an alert condition\n  function HeaderExtras({ query, error, index }: { query: AlertQuery; error?: Error; index: number }) {\n    if (isExpressionQuery(query.model)) {\n      return null;\n    } else {\n      return (\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <SelectingDataSourceTooltip />\n          {onChangeTimeRange && (\n            <RelativeTimeRangePicker\n              timeRange={query.relativeTimeRange ?? getDefaultRelativeTimeRange()}\n              onChange={(range) => onChangeTimeRange(range, index)}\n            />\n          )}\n          <AlertConditionIndicator\n            onSetCondition={() => onSetCondition(query.refId)}\n            enabled={condition === query.refId}\n            error={error}\n          />\n        </Stack>\n      );\n    }\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <QueryEditorRow<DataQuery>\n        alerting\n        dataSource={dsSettings}\n        onChangeDataSource={!isExpression ? (settings) => onChangeDataSource(settings, index) : undefined}\n        id={query.refId}\n        index={index}\n        key={query.refId}\n        data={data}\n        query={cloneDeep(query.model)}\n        onChange={(query) => onChangeQuery(query, index)}\n        onRemoveQuery={onRemoveQuery}\n        onAddQuery={() => onDuplicateQuery(cloneDeep(query))}\n        onRunQuery={onRunQueries}\n        queries={queries}\n        renderHeaderExtras={() => <HeaderExtras query={query} index={index} error={error} />}\n        app={CoreApp.UnifiedAlerting}\n        visualization={\n          data.state !== LoadingState.NotStarted ? (\n            <VizWrapper\n              data={data}\n              changePanel={changePluginId}\n              currentPanel={pluginId}\n              thresholds={thresholds}\n              onThresholdsChange={(thresholds) => onChangeThreshold(thresholds, index)}\n            />\n          ) : null\n        }\n        hideDisableQuery={true}\n      />\n    </div>\n  );\n};\n\nexport const EmptyQueryWrapper = ({ children }: React.PropsWithChildren<{}>) => {\n  const styles = useStyles2(getStyles);\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: AlertingQueryWrapper;\n    margin-bottom: ${theme.spacing(1)};\n    border: 1px solid ${theme.colors.border.medium};\n    border-radius: ${theme.shape.borderRadius(1)};\n  `,\n  dsTooltip: css`\n    display: flex;\n    align-items: center;\n    &:hover {\n      opacity: 0.85;\n      cursor: pointer;\n    }\n  `,\n});\n","import { omit } from 'lodash';\nimport React, { PureComponent, useState } from 'react';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\n\nimport {\n  DataQuery,\n  DataSourceInstanceSettings,\n  LoadingState,\n  PanelData,\n  RelativeTimeRange,\n  ThresholdsConfig,\n  ThresholdsMode,\n} from '@grafana/data';\nimport { config, getDataSourceSrv } from '@grafana/runtime';\nimport { Button, Card, Icon } from '@grafana/ui';\nimport { QueryOperationRow } from 'app/core/components/QueryOperationRow/QueryOperationRow';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { AlertDataQuery, AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { EmptyQueryWrapper, QueryWrapper } from './QueryWrapper';\nimport { errorFromSeries } from './util';\n\ninterface Props {\n  // The query configuration\n  queries: AlertQuery[];\n  data: Record<string, PanelData>;\n  onRunQueries: () => void;\n\n  // Query editing\n  onQueriesChange: (queries: AlertQuery[]) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport class QueryRows extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onRemoveQuery = (query: DataQuery) => {\n    const { queries, onQueriesChange } = this.props;\n    onQueriesChange(queries.filter((q) => q.refId !== query.refId));\n  };\n\n  onChangeTimeRange = (timeRange: RelativeTimeRange, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n    onQueriesChange(\n      queries.map((item, itemIndex) => {\n        if (itemIndex !== index) {\n          return item;\n        }\n        return {\n          ...item,\n          relativeTimeRange: timeRange,\n        };\n      })\n    );\n  };\n\n  onChangeThreshold = (thresholds: ThresholdsConfig, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n\n    const referencedRefId = queries[index].refId;\n\n    onQueriesChange(\n      queries.map((query) => {\n        if (!isExpressionQuery(query.model)) {\n          return query;\n        }\n\n        if (query.model.conditions && query.model.conditions[0].query.params[0] === referencedRefId) {\n          return {\n            ...query,\n            model: {\n              ...query.model,\n              conditions: query.model.conditions.map((condition, conditionIndex) => {\n                // Only update the first condition for a given refId.\n                if (condition.query.params[0] === referencedRefId && conditionIndex === 0) {\n                  return {\n                    ...condition,\n                    evaluator: {\n                      ...condition.evaluator,\n                      params: [parseFloat(thresholds.steps[1].value.toPrecision(3))],\n                    },\n                  };\n                }\n                return condition;\n              }),\n            },\n          };\n        }\n        return query;\n      })\n    );\n  };\n\n  onChangeDataSource = (settings: DataSourceInstanceSettings, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n\n    const updatedQueries = queries.map((item, itemIndex) => {\n      if (itemIndex !== index) {\n        return item;\n      }\n\n      return copyModel(item, settings.uid);\n    });\n    onQueriesChange(updatedQueries);\n  };\n\n  onChangeQuery = (query: DataQuery, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n\n    onQueriesChange(\n      queries.map((item, itemIndex) => {\n        if (itemIndex !== index) {\n          return item;\n        }\n\n        return {\n          ...item,\n          refId: query.refId,\n          queryType: item.model.queryType ?? '',\n          model: {\n            ...item.model,\n            ...query,\n            datasource: query.datasource!,\n          },\n        };\n      })\n    );\n  };\n\n  onDragEnd = (result: DropResult) => {\n    const { queries, onQueriesChange } = this.props;\n\n    if (!result || !result.destination) {\n      return;\n    }\n\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n    if (startIndex === endIndex) {\n      return;\n    }\n\n    const update = Array.from(queries);\n    const [removed] = update.splice(startIndex, 1);\n    update.splice(endIndex, 0, removed);\n    onQueriesChange(update);\n  };\n\n  getDataSourceSettings = (query: AlertQuery): DataSourceInstanceSettings | undefined => {\n    return getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n  };\n\n  getThresholdsForQueries = (queries: AlertQuery[]): Record<string, ThresholdsConfig> => {\n    const record: Record<string, ThresholdsConfig> = {};\n\n    for (const query of queries) {\n      if (!isExpressionQuery(query.model)) {\n        continue;\n      }\n\n      if (!Array.isArray(query.model.conditions)) {\n        continue;\n      }\n\n      query.model.conditions.forEach((condition, index) => {\n        if (index > 0) {\n          return;\n        }\n        const threshold = condition.evaluator.params[0];\n        const refId = condition.query.params[0];\n\n        if (condition.evaluator.type === 'outside_range' || condition.evaluator.type === 'within_range') {\n          return;\n        }\n        if (!record[refId]) {\n          record[refId] = {\n            mode: ThresholdsMode.Absolute,\n            steps: [\n              {\n                value: -Infinity,\n                color: config.theme2.colors.success.main,\n              },\n            ],\n          };\n        }\n\n        record[refId].steps.push({\n          value: threshold,\n          color: config.theme2.colors.error.main,\n        });\n      });\n    }\n\n    return record;\n  };\n\n  render() {\n    const { queries } = this.props;\n    const thresholdByRefId = this.getThresholdsForQueries(queries);\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"alerting-queries\" direction=\"vertical\">\n          {(provided) => {\n            return (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {queries.map((query, index) => {\n                  const data: PanelData = this.props.data?.[query.refId] ?? {\n                    series: [],\n                    state: LoadingState.NotStarted,\n                  };\n                  const dsSettings = this.getDataSourceSettings(query);\n\n                  const isAlertCondition = this.props.condition === query.refId;\n                  const error = isAlertCondition ? errorFromSeries(data.series) : undefined;\n\n                  if (!dsSettings) {\n                    return (\n                      <DatasourceNotFound\n                        key={`${query.refId}-${index}`}\n                        index={index}\n                        model={query.model}\n                        onUpdateDatasource={() => {\n                          const defaultDataSource = getDatasourceSrv().getInstanceSettings(null);\n                          if (defaultDataSource) {\n                            this.onChangeDataSource(defaultDataSource, index);\n                          }\n                        }}\n                        onRemoveQuery={() => {\n                          this.onRemoveQuery(query);\n                        }}\n                      />\n                    );\n                  }\n\n                  return (\n                    <QueryWrapper\n                      index={index}\n                      key={query.refId}\n                      dsSettings={dsSettings}\n                      data={data}\n                      error={error}\n                      query={query}\n                      onChangeQuery={this.onChangeQuery}\n                      onRemoveQuery={this.onRemoveQuery}\n                      queries={queries}\n                      onChangeDataSource={this.onChangeDataSource}\n                      onDuplicateQuery={this.props.onDuplicateQuery}\n                      onChangeTimeRange={this.onChangeTimeRange}\n                      thresholds={thresholdByRefId[query.refId]}\n                      onChangeThreshold={this.onChangeThreshold}\n                      onRunQueries={this.props.onRunQueries}\n                      condition={this.props.condition}\n                      onSetCondition={this.props.onSetCondition}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nfunction copyModel(item: AlertQuery, uid: string): Omit<AlertQuery, 'datasource'> {\n  return {\n    ...item,\n    model: omit(item.model, 'datasource'),\n    datasourceUid: uid,\n  };\n}\n\ninterface DatasourceNotFoundProps {\n  index: number;\n  model: AlertDataQuery;\n  onUpdateDatasource: () => void;\n  onRemoveQuery: () => void;\n}\n\nconst DatasourceNotFound = ({ index, onUpdateDatasource, onRemoveQuery, model }: DatasourceNotFoundProps) => {\n  const refId = model.refId;\n\n  const [showDetails, setShowDetails] = useState<boolean>(false);\n\n  const toggleDetails = () => {\n    setShowDetails((show) => !show);\n  };\n\n  const handleUpdateDatasource = () => {\n    onUpdateDatasource();\n  };\n\n  return (\n    <EmptyQueryWrapper>\n      <QueryOperationRow title={refId} draggable index={index} id={refId} isOpen>\n        <Card>\n          <Card.Heading>This datasource has been removed</Card.Heading>\n          <Card.Description>\n            The datasource for this query was not found, it was either removed or is not installed correctly.\n          </Card.Description>\n          <Card.Figure>\n            <Icon name=\"question-circle\" />\n          </Card.Figure>\n          <Card.Actions>\n            <Button key=\"update\" variant=\"secondary\" onClick={handleUpdateDatasource}>\n              Update datasource\n            </Button>\n            <Button key=\"remove\" variant=\"destructive\" onClick={onRemoveQuery}>\n              Remove query\n            </Button>\n          </Card.Actions>\n          <Card.SecondaryActions>\n            <Button\n              key=\"details\"\n              onClick={toggleDetails}\n              icon={showDetails ? 'angle-up' : 'angle-down'}\n              fill=\"text\"\n              size=\"sm\"\n            >\n              Show details\n            </Button>\n          </Card.SecondaryActions>\n        </Card>\n        {showDetails && (\n          <div>\n            <pre>\n              <code>{JSON.stringify(model, null, 2)}</code>\n            </pre>\n          </div>\n        )}\n      </QueryOperationRow>\n    </EmptyQueryWrapper>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2, PanelData } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { QueryRows } from './QueryRows';\n\ninterface Props {\n  panelData: Record<string, PanelData>;\n  queries: AlertQuery[];\n  onRunQueries: () => void;\n  onChangeQueries: (queries: AlertQuery[]) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport const QueryEditor: FC<Props> = ({\n  queries,\n  panelData,\n  onRunQueries,\n  onChangeQueries,\n  onDuplicateQuery,\n  condition,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <QueryRows\n        data={panelData}\n        queries={queries}\n        onRunQueries={onRunQueries}\n        onQueriesChange={onChangeQueries}\n        onDuplicateQuery={onDuplicateQuery}\n        condition={condition}\n        onSetCondition={onSetCondition}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    background-color: ${theme.colors.background.primary};\n    height: 100%;\n    max-width: ${theme.breakpoints.values.xxl}px;\n  `,\n});\n","import { DataSourceInstanceSettings } from '@grafana/data';\nimport { PromBasedDataSource } from 'app/types/unified-alerting';\n\nimport { getDataSourceByName } from '../utils/datasource';\n\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\nexport function useRulesSourcesWithRuler(): DataSourceInstanceSettings[] {\n  const dataSources = useUnifiedAlertingSelector((state) => state.dataSources);\n\n  const dataSourcesWithRuler = Object.values(dataSources)\n    .map((ds) => ds.result)\n    .filter((ds): ds is PromBasedDataSource => Boolean(ds?.rulerConfig));\n  // try fetching rules for each prometheus to see if it has ruler\n\n  return dataSourcesWithRuler\n    .map((ds) => getDataSourceByName(ds.name))\n    .filter((dsConfig): dsConfig is DataSourceInstanceSettings => Boolean(dsConfig));\n}\n","import React, { useCallback } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { dispatch } from 'app/store/store';\n\nimport { useRulesSourcesWithRuler } from '../../hooks/useRuleSourcesWithRuler';\nimport { fetchAllPromBuildInfoAction } from '../../state/actions';\n\ninterface Props {\n  onChange: (ds: DataSourceInstanceSettings) => void;\n  value: string | null;\n  onBlur?: () => void;\n  name?: string;\n}\n\nexport function CloudRulesSourcePicker({ value, ...props }: Props): JSX.Element {\n  const rulesSourcesWithRuler = useRulesSourcesWithRuler();\n\n  const { loading = true } = useAsync(() => dispatch(fetchAllPromBuildInfoAction()), [dispatch]);\n\n  const dataSourceFilter = useCallback(\n    (ds: DataSourceInstanceSettings): boolean => {\n      return !!rulesSourcesWithRuler.find(({ id }) => id === ds.id);\n    },\n    [rulesSourcesWithRuler]\n  );\n\n  return (\n    <DataSourcePicker\n      disabled={loading}\n      isLoading={loading}\n      noDefault\n      alerting\n      filter={dataSourceFilter}\n      current={value}\n      {...props}\n    />\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport React, { FC, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, useStyles2 } from '@grafana/ui';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\ninterface Props extends SharedProps {\n  image: string;\n  name: string;\n  description: ReactNode;\n  value: RuleFormType;\n}\n\n// these properties are shared between all Rule Types\nexport interface SharedProps {\n  selected?: boolean;\n  disabled?: boolean;\n  onClick: (value: RuleFormType) => void;\n}\n\nconst RuleType: FC<Props> = (props) => {\n  const { name, description, image, selected = false, value, onClick, disabled = false } = props;\n  const styles = useStyles2(getStyles);\n\n  const cardStyles = cx({\n    [styles.wrapper]: true,\n    [styles.disabled]: disabled,\n  });\n\n  return (\n    <Card className={cardStyles} isSelected={selected} onClick={() => onClick(value)} disabled={disabled}>\n      <Card.Figure>\n        <img src={image} alt=\"\" />\n      </Card.Figure>\n      <Card.Heading>{name}</Card.Heading>\n      <Card.Description>{description}</Card.Description>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    width: 380px;\n    cursor: pointer;\n    user-select: none;\n  `,\n  disabled: css`\n    opacity: 0.5;\n  `,\n});\n\nexport { RuleType };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { RuleType, SharedProps } from './RuleType';\n\nconst GrafanaManagedRuleType: FC<SharedProps> = ({ selected = false, disabled, onClick }) => {\n  return (\n    <RuleType\n      name=\"Grafana managed alert\"\n      description={\n        <span>\n          Supports multiple data sources of any kind.\n          <br />\n          Transform data with expressions.\n        </span>\n      }\n      image=\"public/img/grafana_icon.svg\"\n      selected={selected}\n      disabled={disabled}\n      value={RuleFormType.grafana}\n      onClick={onClick}\n    />\n  );\n};\n\nexport { GrafanaManagedRuleType };\n","import React from 'react';\n\nimport { Tooltip } from '@grafana/ui';\n\ntype Props = {\n  visible: boolean;\n};\n\nconst DisabledTooltip = ({ children, visible = false }: React.PropsWithChildren<Props>) => {\n  if (!visible) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Tooltip content=\"You do not appear to have any compatible datasources.\" placement=\"top\">\n      <div>{children}</div>\n    </Tooltip>\n  );\n};\n\nexport { DisabledTooltip };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { DisabledTooltip } from './DisabledTooltip';\nimport { RuleType, SharedProps } from './RuleType';\n\ninterface Props extends SharedProps {\n  onClick: (value: RuleFormType) => void;\n}\n\nconst MimirFlavoredType: FC<Props> = ({ selected = false, disabled = false, onClick }) => {\n  return (\n    <DisabledTooltip visible={disabled}>\n      <RuleType\n        name=\"Mimir or Loki alert\"\n        description={\n          <span>\n            Use a Mimir, Loki or Cortex datasource.\n            <br />\n            Expressions are not supported.\n          </span>\n        }\n        image=\"public/img/alerting/mimir_logo.svg\"\n        selected={selected}\n        disabled={disabled}\n        value={RuleFormType.cloudAlerting}\n        onClick={onClick}\n      />\n    </DisabledTooltip>\n  );\n};\n\nexport { MimirFlavoredType };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { DisabledTooltip } from './DisabledTooltip';\nimport { RuleType, SharedProps } from './RuleType';\n\nconst RecordingRuleType: FC<SharedProps> = ({ selected = false, disabled = false, onClick }) => {\n  return (\n    <DisabledTooltip visible={disabled}>\n      <RuleType\n        name=\"Mimir or Loki recording rule\"\n        description={\n          <span>\n            Precompute expressions.\n            <br />\n            Should be combined with an alert rule.\n          </span>\n        }\n        image=\"public/img/alerting/mimir_logo_recording.svg\"\n        selected={selected}\n        disabled={disabled}\n        value={RuleFormType.cloudRecording}\n        onClick={onClick}\n      />\n    </DisabledTooltip>\n  );\n};\n\nexport { RecordingRuleType };\n","import { css } from '@emotion/css';\nimport { isEmpty } from 'lodash';\nimport React, { FC, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { Stack } from '@grafana/experimental';\nimport { useStyles2 } from '@grafana/ui';\nimport { dispatch } from 'app/store/store';\n\nimport { useRulesSourcesWithRuler } from '../../../hooks/useRuleSourcesWithRuler';\nimport { fetchAllPromBuildInfoAction } from '../../../state/actions';\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { GrafanaManagedRuleType } from './GrafanaManagedAlert';\nimport { MimirFlavoredType } from './MimirOrLokiAlert';\nimport { RecordingRuleType } from './MimirOrLokiRecordingRule';\n\ninterface RuleTypePickerProps {\n  onChange: (value: RuleFormType) => void;\n  selected: RuleFormType;\n  enabledTypes: RuleFormType[];\n}\n\nconst RuleTypePicker: FC<RuleTypePickerProps> = ({ selected, onChange, enabledTypes }) => {\n  const rulesSourcesWithRuler = useRulesSourcesWithRuler();\n  const hasLotexDatasources = !isEmpty(rulesSourcesWithRuler);\n\n  useEffect(() => {\n    dispatch(fetchAllPromBuildInfoAction());\n  }, []);\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <Stack direction=\"row\" gap={2}>\n        {enabledTypes.includes(RuleFormType.grafana) && (\n          <GrafanaManagedRuleType selected={selected === RuleFormType.grafana} onClick={onChange} />\n        )}\n        {enabledTypes.includes(RuleFormType.cloudAlerting) && (\n          <MimirFlavoredType\n            selected={selected === RuleFormType.cloudAlerting}\n            onClick={onChange}\n            disabled={!hasLotexDatasources}\n          />\n        )}\n        {enabledTypes.includes(RuleFormType.cloudRecording) && (\n          <RecordingRuleType\n            selected={selected === RuleFormType.cloudRecording}\n            onClick={onChange}\n            disabled={!hasLotexDatasources}\n          />\n        )}\n      </Stack>\n      {enabledTypes.includes(RuleFormType.grafana) && (\n        <small className={styles.meta}>\n          Select &ldquo;Grafana managed&rdquo; unless you have a Mimir, Loki or Cortex data source with the Ruler API\n          enabled.\n        </small>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  meta: css`\n    color: ${theme.colors.text.disabled};\n  `,\n});\n\nexport { RuleTypePicker };\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { DataSourceInstanceSettings, GrafanaTheme2 } from '@grafana/data';\nimport { Field, InputControl, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\nimport { RuleFormType, RuleFormValues } from '../../../types/rule-form';\nimport { CloudRulesSourcePicker } from '../CloudRulesSourcePicker';\nimport { RuleTypePicker } from '../rule-types/RuleTypePicker';\n\ninterface Props {\n  editingExistingRule: boolean;\n}\n\nexport const AlertType: FC<Props> = ({ editingExistingRule }) => {\n  const { enabledRuleTypes, defaultRuleType } = getAvailableRuleTypes();\n\n  const {\n    control,\n    formState: { errors },\n    getValues,\n    setValue,\n    watch,\n  } = useFormContext<RuleFormValues & { location?: string }>();\n\n  const styles = useStyles2(getStyles);\n  const ruleFormType = watch('type');\n\n  return (\n    <>\n      {!editingExistingRule && (\n        <Field error={errors.type?.message} invalid={!!errors.type?.message} data-testid=\"alert-type-picker\">\n          <InputControl\n            render={({ field: { onChange } }) => (\n              <RuleTypePicker\n                aria-label=\"Rule type\"\n                selected={getValues('type') ?? defaultRuleType}\n                onChange={onChange}\n                enabledTypes={enabledRuleTypes}\n              />\n            )}\n            name=\"type\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Please select alert type' },\n            }}\n          />\n        </Field>\n      )}\n\n      <div className={styles.flexRow}>\n        {(ruleFormType === RuleFormType.cloudRecording || ruleFormType === RuleFormType.cloudAlerting) && (\n          <Field\n            className={styles.formInput}\n            label=\"Select data source\"\n            error={errors.dataSourceName?.message}\n            invalid={!!errors.dataSourceName?.message}\n            data-testid=\"datasource-picker\"\n          >\n            <InputControl\n              render={({ field: { onChange, ref, ...field } }) => (\n                <CloudRulesSourcePicker\n                  {...field}\n                  onChange={(ds: DataSourceInstanceSettings) => {\n                    // reset location if switching data sources, as different rules source will have different groups and namespaces\n                    setValue('location', undefined);\n                    onChange(ds?.name ?? null);\n                  }}\n                />\n              )}\n              name=\"dataSourceName\"\n              control={control}\n              rules={{\n                required: { value: true, message: 'Please select a data source' },\n              }}\n            />\n          </Field>\n        )}\n      </div>\n    </>\n  );\n};\n\nfunction getAvailableRuleTypes() {\n  const canCreateGrafanaRules = contextSrv.hasAccess(\n    AccessControlAction.AlertingRuleCreate,\n    contextSrv.hasEditPermissionInFolders\n  );\n  const canCreateCloudRules = contextSrv.hasAccess(AccessControlAction.AlertingRuleExternalWrite, contextSrv.isEditor);\n  const defaultRuleType = canCreateGrafanaRules ? RuleFormType.grafana : RuleFormType.cloudAlerting;\n\n  const enabledRuleTypes: RuleFormType[] = [];\n  if (canCreateGrafanaRules) {\n    enabledRuleTypes.push(RuleFormType.grafana);\n  }\n  if (canCreateCloudRules) {\n    enabledRuleTypes.push(RuleFormType.cloudAlerting, RuleFormType.cloudRecording);\n  }\n\n  return { enabledRuleTypes, defaultRuleType };\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  formInput: css`\n    width: 330px;\n    & + & {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n  `,\n});\n","import { ExpressionDatasourceUID } from 'app/features/expressions/ExpressionDatasource';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nexport const hasCyclicalReferences = (queries: AlertQuery[]) => {\n  try {\n    JSON.stringify(queries);\n    return false;\n  } catch (e) {\n    return true;\n  }\n};\n\nexport const findDataSourceFromExpressionRecursive = (\n  queries: AlertQuery[],\n  alertQuery: AlertQuery\n): AlertQuery | null | undefined => {\n  //Check if this is not cyclical structre\n  if (hasCyclicalReferences(queries)) {\n    return null;\n  }\n  // We have the data source in this dataQuery\n  if (alertQuery.datasourceUid !== ExpressionDatasourceUID) {\n    return alertQuery;\n  }\n  // alertQuery it's an expression, we have to traverse all the tree up to the data source\n  else {\n    const alertQueryReferenced = queries.find((alertQuery_) => alertQuery_.refId === alertQuery.model.expression);\n    if (alertQueryReferenced) {\n      return findDataSourceFromExpressionRecursive(queries, alertQueryReferenced);\n    } else {\n      return null;\n    }\n  }\n};\n","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { DataQuery, RelativeTimeRange, getDefaultRelativeTimeRange } from '@grafana/data';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { findDataSourceFromExpressionRecursive } from 'app/features/alerting/utils/dataSourceFromExpression';\nimport {\n  dataSource as expressionDatasource,\n  ExpressionDatasourceUID,\n} from 'app/features/expressions/ExpressionDatasource';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { ExpressionQuery, ExpressionQueryType } from 'app/features/expressions/types';\nimport { defaultCondition } from 'app/features/expressions/utils/expressionTypes';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { getDefaultOrFirstCompatibleDataSource } from '../../../utils/datasource';\nimport { queriesWithUpdatedReferences, refIdExists } from '../util';\n\nexport interface QueriesAndExpressionsState {\n  queries: AlertQuery[];\n}\n\nconst findDataSourceFromExpression = (\n  queries: AlertQuery[],\n  expression: string | undefined\n): AlertQuery | null | undefined => {\n  const firstReference = queries.find((alertQuery) => alertQuery.refId === expression);\n  const dataSource = firstReference && findDataSourceFromExpressionRecursive(queries, firstReference);\n  return dataSource;\n};\n\nconst initialState: QueriesAndExpressionsState = {\n  queries: [],\n};\n\nexport const duplicateQuery = createAction<AlertQuery>('duplicateQuery');\nexport const addNewDataQuery = createAction('addNewDataQuery');\nexport const setDataQueries = createAction<AlertQuery[]>('setDataQueries');\n\nexport const addNewExpression = createAction('addNewExpression');\nexport const removeExpression = createAction<string>('removeExpression');\nexport const updateExpression = createAction<ExpressionQuery>('updateExpression');\nexport const updateExpressionRefId = createAction<{ oldRefId: string; newRefId: string }>('updateExpressionRefId');\nexport const rewireExpressions = createAction<{ oldRefId: string; newRefId: string }>('rewireExpressions');\nexport const updateExpressionType = createAction<{ refId: string; type: ExpressionQueryType }>('updateExpressionType');\nexport const updateExpressionTimeRange = createAction('updateExpressionTimeRange');\n\nexport const queriesAndExpressionsReducer = createReducer(initialState, (builder) => {\n  // data queries actions\n  builder\n    .addCase(duplicateQuery, (state, { payload }) => {\n      state.queries = addQuery(state.queries, payload);\n    })\n    .addCase(addNewDataQuery, (state) => {\n      const datasource = getDefaultOrFirstCompatibleDataSource();\n      if (!datasource) {\n        return;\n      }\n\n      state.queries = addQuery(state.queries, {\n        datasourceUid: datasource.uid,\n        model: {\n          refId: '',\n          datasource: {\n            type: datasource.type,\n            uid: datasource.uid,\n          },\n        },\n      });\n    })\n    .addCase(setDataQueries, (state, { payload }) => {\n      const expressionQueries = state.queries.filter((query) => isExpressionQuery(query.model));\n      state.queries = [...payload, ...expressionQueries];\n    });\n\n  // expressions actions\n  builder\n    .addCase(addNewExpression, (state) => {\n      state.queries = addQuery(state.queries, {\n        datasourceUid: ExpressionDatasourceUID,\n        model: expressionDatasource.newQuery({\n          type: ExpressionQueryType.math,\n          conditions: [{ ...defaultCondition, query: { params: [] } }],\n          expression: '',\n        }),\n      });\n    })\n    .addCase(removeExpression, (state, { payload }) => {\n      state.queries = state.queries.filter((query) => query.refId !== payload);\n    })\n    .addCase(updateExpression, (state, { payload }) => {\n      state.queries = state.queries.map((query) => {\n        const dataSourceAlertQuery = findDataSourceFromExpression(state.queries, payload.expression);\n\n        const relativeTimeRange = dataSourceAlertQuery\n          ? dataSourceAlertQuery.relativeTimeRange\n          : getDefaultRelativeTimeRange();\n\n        if (query.refId === payload.refId) {\n          query.model = payload;\n          if (payload.type === ExpressionQueryType.resample) {\n            query.relativeTimeRange = relativeTimeRange;\n          }\n        }\n        return query;\n      });\n    })\n    .addCase(updateExpressionTimeRange, (state) => {\n      const newState = state.queries.map((query) => {\n        // It's an expression , let's update the relativeTimeRange with its dataSource relativeTimeRange\n        if (query.datasourceUid === ExpressionDatasourceUID) {\n          const dataSource = findDataSourceFromExpression(state.queries, query.model.expression);\n          const relativeTimeRange = dataSource ? dataSource.relativeTimeRange : getDefaultRelativeTimeRange();\n          query.relativeTimeRange = relativeTimeRange;\n        }\n        return query;\n      });\n      state.queries = newState;\n    })\n    .addCase(updateExpressionRefId, (state, { payload }) => {\n      const { newRefId, oldRefId } = payload;\n\n      // if the new refId already exists we just refuse to update the state\n      const newRefIdExists = refIdExists(state.queries, newRefId);\n      if (newRefIdExists) {\n        return;\n      }\n\n      const updatedQueries = queriesWithUpdatedReferences(state.queries, oldRefId, newRefId);\n      state.queries = updatedQueries.map((query) => {\n        if (query.refId === oldRefId) {\n          return {\n            ...query,\n            refId: newRefId,\n            model: {\n              ...query.model,\n              refId: newRefId,\n            },\n          };\n        }\n\n        return query;\n      });\n    })\n    .addCase(rewireExpressions, (state, { payload }) => {\n      state.queries = queriesWithUpdatedReferences(state.queries, payload.oldRefId, payload.newRefId);\n    })\n    .addCase(updateExpressionType, (state, action) => {\n      state.queries = state.queries.map((query) => {\n        return query.refId === action.payload.refId\n          ? {\n              ...query,\n              model: {\n                ...expressionDatasource.newQuery({\n                  type: action.payload.type,\n                  conditions: [{ ...defaultCondition, query: { params: [] } }],\n                  expression: '',\n                }),\n                refId: action.payload.refId,\n              },\n            }\n          : query;\n      });\n    });\n});\n\nconst addQuery = (\n  queries: AlertQuery[],\n  queryToAdd: Pick<AlertQuery, 'model' | 'datasourceUid' | 'relativeTimeRange'>\n): AlertQuery[] => {\n  const refId = getNextRefIdChar(queries);\n  const query: AlertQuery = {\n    ...queryToAdd,\n    refId,\n    queryType: '',\n    model: {\n      ...queryToAdd.model,\n      hide: false,\n      refId,\n    },\n    relativeTimeRange: queryToAdd.relativeTimeRange ?? defaultTimeRange(queryToAdd.model),\n  };\n\n  return [...queries, query];\n};\n\nconst defaultTimeRange = (model: DataQuery): RelativeTimeRange | undefined => {\n  if (isExpressionQuery(model)) {\n    return;\n  }\n\n  return getDefaultRelativeTimeRange();\n};\n","import React, { FC, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { LoadingState, PanelData } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Stack } from '@grafana/experimental';\nimport { config } from '@grafana/runtime';\nimport { Alert, Button, Field, InputControl, Tooltip } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { AlertingQueryRunner } from '../../../state/AlertingQueryRunner';\nimport { RuleFormType, RuleFormValues } from '../../../types/rule-form';\nimport { getDefaultOrFirstCompatibleDataSource } from '../../../utils/datasource';\nimport { ExpressionEditor } from '../ExpressionEditor';\nimport { ExpressionsEditor } from '../ExpressionsEditor';\nimport { QueryEditor } from '../QueryEditor';\nimport { RuleEditorSection } from '../RuleEditorSection';\nimport { refIdExists } from '../util';\n\nimport { AlertType } from './AlertType';\nimport {\n  duplicateQuery,\n  addNewDataQuery,\n  addNewExpression,\n  queriesAndExpressionsReducer,\n  removeExpression,\n  rewireExpressions,\n  setDataQueries,\n  updateExpression,\n  updateExpressionRefId,\n  updateExpressionType,\n  updateExpressionTimeRange,\n} from './reducer';\n\ninterface Props {\n  editingExistingRule: boolean;\n}\n\nexport const QueryAndExpressionsStep: FC<Props> = ({ editingExistingRule }) => {\n  const runner = useRef(new AlertingQueryRunner());\n  const {\n    setValue,\n    getValues,\n    watch,\n    formState: { errors },\n    control,\n  } = useFormContext<RuleFormValues>();\n  const [panelData, setPanelData] = useState<Record<string, PanelData>>({});\n\n  const initialState = {\n    queries: getValues('queries'),\n    panelData: {},\n  };\n  const [{ queries }, dispatch] = useReducer(queriesAndExpressionsReducer, initialState);\n\n  const [type, condition, dataSourceName] = watch(['type', 'condition', 'dataSourceName']);\n\n  const isGrafanaManagedType = type === RuleFormType.grafana;\n  const isCloudAlertRuleType = type === RuleFormType.cloudAlerting;\n  const isRecordingRuleType = type === RuleFormType.cloudRecording;\n\n  const showCloudExpressionEditor = (isRecordingRuleType || isCloudAlertRuleType) && dataSourceName;\n\n  const cancelQueries = useCallback(() => {\n    runner.current.cancel();\n  }, []);\n\n  const runQueries = useCallback(() => {\n    runner.current.run(queries);\n  }, [queries]);\n\n  // whenever we update the queries we have to update the form too\n  useEffect(() => {\n    setValue('queries', queries, { shouldValidate: false });\n  }, [queries, runQueries, setValue]);\n\n  // set up the AlertQueryRunner\n  useEffect(() => {\n    const currentRunner = runner.current;\n\n    runner.current.get().subscribe((data) => {\n      setPanelData(data);\n    });\n\n    return () => currentRunner.destroy();\n  }, []);\n\n  const noCompatibleDataSources = getDefaultOrFirstCompatibleDataSource() === undefined;\n\n  const isDataLoading = useMemo(() => {\n    return Object.values(panelData).some((d) => d.state === LoadingState.Loading);\n  }, [panelData]);\n\n  // data queries only\n  const dataQueries = useMemo(() => {\n    return queries.filter((query) => !isExpressionQuery(query.model));\n  }, [queries]);\n\n  const emptyQueries = queries.length === 0;\n\n  const onUpdateRefId = useCallback(\n    (oldRefId: string, newRefId: string) => {\n      const newRefIdExists = refIdExists(queries, newRefId);\n      // TODO we should set an error and explain what went wrong instead of just refusing to update\n      if (newRefIdExists) {\n        return;\n      }\n\n      dispatch(updateExpressionRefId({ oldRefId, newRefId }));\n\n      // update condition too if refId was updated\n      if (condition === oldRefId) {\n        setValue('condition', newRefId);\n      }\n    },\n    [condition, queries, setValue]\n  );\n\n  const onChangeQueries = useCallback(\n    (updatedQueries: AlertQuery[]) => {\n      dispatch(setDataQueries(updatedQueries));\n      dispatch(updateExpressionTimeRange());\n      // check if we need to rewire expressions\n      updatedQueries.forEach((query, index) => {\n        const oldRefId = queries[index].refId;\n        const newRefId = query.refId;\n\n        if (oldRefId !== newRefId) {\n          dispatch(rewireExpressions({ oldRefId, newRefId }));\n        }\n      });\n    },\n    [queries]\n  );\n\n  const onDuplicateQuery = useCallback((query: AlertQuery) => {\n    dispatch(duplicateQuery(query));\n  }, []);\n\n  // update the condition if it's been removed\n  useEffect(() => {\n    if (!refIdExists(queries, condition)) {\n      const lastRefId = queries.at(-1)?.refId ?? null;\n      setValue('condition', lastRefId);\n    }\n  }, [condition, queries, setValue]);\n\n  return (\n    <RuleEditorSection stepNo={1} title=\"Set a query and alert condition\">\n      <AlertType editingExistingRule={editingExistingRule} />\n\n      {/* This is the PromQL Editor for Cloud rules and recording rules */}\n      {showCloudExpressionEditor && (\n        <Field error={errors.expression?.message} invalid={!!errors.expression?.message}>\n          <InputControl\n            name=\"expression\"\n            render={({ field: { ref, ...field } }) => {\n              return <ExpressionEditor {...field} dataSourceName={dataSourceName} />;\n            }}\n            control={control}\n            rules={{\n              required: { value: true, message: 'A valid expression is required' },\n            }}\n          />\n        </Field>\n      )}\n\n      {/* This is the editor for Grafana managed rules */}\n      {isGrafanaManagedType && (\n        <Stack direction=\"column\">\n          {/* Data Queries */}\n          <QueryEditor\n            queries={dataQueries}\n            onRunQueries={runQueries}\n            onChangeQueries={onChangeQueries}\n            onDuplicateQuery={onDuplicateQuery}\n            panelData={panelData}\n            condition={condition}\n            onSetCondition={(refId) => {\n              setValue('condition', refId);\n            }}\n          />\n          {/* Expression Queries */}\n          <ExpressionsEditor\n            queries={queries}\n            panelData={panelData}\n            condition={condition}\n            onSetCondition={(refId) => {\n              setValue('condition', refId);\n            }}\n            onRemoveExpression={(refId) => {\n              dispatch(removeExpression(refId));\n            }}\n            onUpdateRefId={onUpdateRefId}\n            onUpdateExpressionType={(refId, type) => {\n              dispatch(updateExpressionType({ refId, type }));\n            }}\n            onUpdateQueryExpression={(model) => {\n              dispatch(updateExpression(model));\n            }}\n          />\n          {/* action buttons */}\n          <Stack direction=\"row\">\n            <Tooltip content={'You appear to have no compatible data sources'} show={noCompatibleDataSources}>\n              <Button\n                type=\"button\"\n                icon=\"plus\"\n                onClick={() => {\n                  dispatch(addNewDataQuery());\n                }}\n                variant=\"secondary\"\n                aria-label={selectors.components.QueryTab.addQuery}\n                disabled={noCompatibleDataSources}\n              >\n                Add query\n              </Button>\n            </Tooltip>\n\n            {config.expressionsEnabled && (\n              <Button\n                type=\"button\"\n                icon=\"plus\"\n                onClick={() => {\n                  dispatch(addNewExpression());\n                }}\n                variant=\"secondary\"\n              >\n                Add expression\n              </Button>\n            )}\n\n            {isDataLoading && (\n              <Button icon=\"fa fa-spinner\" type=\"button\" variant=\"destructive\" onClick={cancelQueries}>\n                Cancel\n              </Button>\n            )}\n            {!isDataLoading && (\n              <Button icon=\"sync\" type=\"button\" onClick={() => runQueries()} disabled={emptyQueries}>\n                Preview\n              </Button>\n            )}\n          </Stack>\n\n          {/* No Queries */}\n          {emptyQueries && (\n            <Alert title=\"No queries or expressions have been configured\" severity=\"warning\">\n              Create at least one query or expression to be alerted on\n            </Alert>\n          )}\n        </Stack>\n      )}\n    </RuleEditorSection>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC, useMemo, useState } from 'react';\nimport { FormProvider, useForm, UseFormWatch } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { logInfo } from '@grafana/runtime';\nimport { Button, ConfirmModal, CustomScrollbar, Spinner, useStyles2, HorizontalGroup } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { useDispatch } from 'app/types';\nimport { RuleWithLocation } from 'app/types/unified-alerting';\n\nimport { LogMessages } from '../../Analytics';\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { deleteRuleAction, saveRuleFormAction } from '../../state/actions';\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\nimport { initialAsyncRequestState } from '../../utils/redux';\nimport { getDefaultFormValues, getDefaultQueries, rulerRuleToFormValues } from '../../utils/rule-form';\nimport * as ruleId from '../../utils/rule-id';\n\nimport { CloudEvaluationBehavior } from './CloudEvaluationBehavior';\nimport { DetailsStep } from './DetailsStep';\nimport { GrafanaEvaluationBehavior } from './GrafanaEvaluationBehavior';\nimport { NotificationsStep } from './NotificationsStep';\nimport { RuleInspector } from './RuleInspector';\nimport { QueryAndExpressionsStep } from './query-and-alert-condition/QueryAndExpressionsStep';\n\ntype Props = {\n  existing?: RuleWithLocation;\n};\n\nexport const AlertRuleForm: FC<Props> = ({ existing }) => {\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n  const notifyApp = useAppNotification();\n  const [queryParams] = useQueryParams();\n  const [showEditYaml, setShowEditYaml] = useState(false);\n\n  const returnTo: string = (queryParams['returnTo'] as string | undefined) ?? '/alerting/list';\n  const [showDeleteModal, setShowDeleteModal] = useState<boolean>(false);\n\n  const defaultValues: RuleFormValues = useMemo(() => {\n    if (existing) {\n      return rulerRuleToFormValues(existing);\n    }\n    return {\n      ...getDefaultFormValues(),\n      queries: getDefaultQueries(),\n      condition: 'C',\n      ...(queryParams['defaults'] ? JSON.parse(queryParams['defaults'] as string) : {}),\n      type: RuleFormType.grafana,\n    };\n  }, [existing, queryParams]);\n\n  const formAPI = useForm<RuleFormValues>({\n    mode: 'onSubmit',\n    defaultValues,\n    shouldFocusError: true,\n  });\n\n  const { handleSubmit, watch } = formAPI;\n\n  const type = watch('type');\n  const dataSourceName = watch('dataSourceName');\n\n  const showStep2 = Boolean(type && (type === RuleFormType.grafana || !!dataSourceName));\n\n  const submitState = useUnifiedAlertingSelector((state) => state.ruleForm.saveRule) || initialAsyncRequestState;\n  useCleanup((state) => (state.unifiedAlerting.ruleForm.saveRule = initialAsyncRequestState));\n\n  const submit = (values: RuleFormValues, exitOnSave: boolean) => {\n    dispatch(\n      saveRuleFormAction({\n        values: {\n          ...defaultValues,\n          ...values,\n          annotations:\n            values.annotations\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key, value }) => !!key && !!value) ?? [],\n          labels:\n            values.labels\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key }) => !!key) ?? [],\n        },\n        existing,\n        redirectOnSave: exitOnSave ? returnTo : undefined,\n      })\n    );\n  };\n\n  const deleteRule = () => {\n    if (existing) {\n      const identifier = ruleId.fromRulerRule(\n        existing.ruleSourceName,\n        existing.namespace,\n        existing.group.name,\n        existing.rule\n      );\n\n      dispatch(deleteRuleAction(identifier, { navigateTo: '/alerting/list' }));\n    }\n  };\n\n  const onInvalid = () => {\n    notifyApp.error('There are errors in the form. Please correct them and try again!');\n  };\n\n  return (\n    <FormProvider {...formAPI}>\n      <form onSubmit={(e) => e.preventDefault()} className={styles.form}>\n        <HorizontalGroup height=\"auto\" justify=\"flex-end\">\n          <Link to={returnTo}>\n            <Button\n              variant=\"secondary\"\n              disabled={submitState.loading}\n              type=\"button\"\n              fill=\"outline\"\n              onClick={() => logInfo(LogMessages.cancelSavingAlertRule)}\n            >\n              Cancel\n            </Button>\n          </Link>\n          {existing ? (\n            <Button variant=\"destructive\" type=\"button\" onClick={() => setShowDeleteModal(true)}>\n              Delete\n            </Button>\n          ) : null}\n          {isCortexLokiOrRecordingRule(watch) && (\n            <Button\n              variant=\"secondary\"\n              type=\"button\"\n              onClick={() => setShowEditYaml(true)}\n              disabled={submitState.loading}\n            >\n              Edit yaml\n            </Button>\n          )}\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, false), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, true), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save and exit\n          </Button>\n        </HorizontalGroup>\n        <div className={styles.contentOuter}>\n          <CustomScrollbar autoHeightMin=\"100%\" hideHorizontalTrack={true}>\n            <div className={styles.contentInner}>\n              <QueryAndExpressionsStep editingExistingRule={!!existing} />\n              {showStep2 && (\n                <>\n                  {type === RuleFormType.grafana ? <GrafanaEvaluationBehavior /> : <CloudEvaluationBehavior />}\n                  <DetailsStep initialFolder={defaultValues.folder} />\n                  <NotificationsStep />\n                </>\n              )}\n            </div>\n          </CustomScrollbar>\n        </div>\n      </form>\n      {showDeleteModal ? (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Delete rule\"\n          body=\"Deleting this rule will permanently remove it. Are you sure you want to delete this rule?\"\n          confirmText=\"Yes, delete\"\n          icon=\"exclamation-triangle\"\n          onConfirm={deleteRule}\n          onDismiss={() => setShowDeleteModal(false)}\n        />\n      ) : null}\n      {showEditYaml ? <RuleInspector onClose={() => setShowEditYaml(false)} /> : null}\n    </FormProvider>\n  );\n};\n\nconst isCortexLokiOrRecordingRule = (watch: UseFormWatch<RuleFormValues>) => {\n  const [ruleType, dataSourceName] = watch(['type', 'dataSourceName']);\n\n  return (ruleType === RuleFormType.cloudAlerting || ruleType === RuleFormType.cloudRecording) && dataSourceName !== '';\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    buttonSpinner: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    form: css`\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    `,\n    contentInner: css`\n      flex: 1;\n      padding: ${theme.spacing(2)};\n    `,\n    contentOuter: css`\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: ${theme.shape.borderRadius()};\n      overflow: hidden;\n      flex: 1;\n      margin-top: ${theme.spacing(1)};\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    `,\n  };\n};\n","import React, { useEffect } from 'react';\n\nimport { Alert, LoadingPlaceholder } from '@grafana/ui';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useDispatch } from 'app/types';\nimport { RuleIdentifier } from 'app/types/unified-alerting';\n\nimport { AlertWarning } from './AlertWarning';\nimport { AlertRuleForm } from './components/rule-editor/AlertRuleForm';\nimport { useIsRuleEditable } from './hooks/useIsRuleEditable';\nimport { useUnifiedAlertingSelector } from './hooks/useUnifiedAlertingSelector';\nimport { fetchEditableRuleAction } from './state/actions';\nimport { initialAsyncRequestState } from './utils/redux';\nimport * as ruleId from './utils/rule-id';\n\ninterface ExistingRuleEditorProps {\n  identifier: RuleIdentifier;\n}\n\nexport function ExistingRuleEditor({ identifier }: ExistingRuleEditorProps) {\n  useCleanup((state) => (state.unifiedAlerting.ruleForm.existingRule = initialAsyncRequestState));\n\n  const {\n    loading: loadingAlertRule,\n    result,\n    error,\n    dispatched,\n  } = useUnifiedAlertingSelector((state) => state.ruleForm.existingRule);\n\n  const dispatch = useDispatch();\n  const { isEditable, loading: loadingEditable } = useIsRuleEditable(\n    ruleId.ruleIdentifierToRuleSourceName(identifier),\n    result?.rule\n  );\n\n  const loading = loadingAlertRule || loadingEditable;\n\n  useEffect(() => {\n    if (!dispatched) {\n      dispatch(fetchEditableRuleAction(identifier));\n    }\n  }, [dispatched, dispatch, identifier]);\n\n  if (loading || isEditable === undefined) {\n    return <LoadingPlaceholder text=\"Loading rule...\" />;\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" title=\"Failed to load rule\">\n        {error.message}\n      </Alert>\n    );\n  }\n\n  if (!result) {\n    return <AlertWarning title=\"Rule not found\">Sorry! This rule does not exist.</AlertWarning>;\n  }\n\n  if (isEditable === false) {\n    return <AlertWarning title=\"Cannot edit rule\">Sorry! You do not have permission to edit this rule.</AlertWarning>;\n  }\n\n  return <AlertRuleForm existing={result} />;\n}\n","import React, { useCallback } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { NavModelItem } from '@grafana/data';\nimport { withErrorBoundary } from '@grafana/ui';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useDispatch } from 'app/types';\n\nimport { AlertWarning } from './AlertWarning';\nimport { ExistingRuleEditor } from './ExistingRuleEditor';\nimport { AlertingPageWrapper } from './components/AlertingPageWrapper';\nimport { AlertRuleForm } from './components/rule-editor/AlertRuleForm';\nimport { fetchRulesSourceBuildInfoAction } from './state/actions';\nimport { useRulesAccess } from './utils/accessControlHooks';\nimport * as ruleId from './utils/rule-id';\n\ntype RuleEditorProps = GrafanaRouteComponentProps<{ id?: string }>;\n\nconst defaultPageNav: Partial<NavModelItem> = {\n  icon: 'bell',\n  id: 'alert-rule-view',\n  breadcrumbs: [{ title: 'Alert rules', url: 'alerting/list' }],\n};\n\nconst getPageNav = (state: 'edit' | 'add') => {\n  if (state === 'edit') {\n    return { ...defaultPageNav, id: 'alert-rule-edit', text: 'Edit rule' };\n  } else if (state === 'add') {\n    return { ...defaultPageNav, id: 'alert-rule-add', text: 'Add rule' };\n  }\n  return undefined;\n};\n\nconst RuleEditor = ({ match }: RuleEditorProps) => {\n  const dispatch = useDispatch();\n  const { id } = match.params;\n  const identifier = ruleId.tryParse(id, true);\n\n  const { loading = true } = useAsync(async () => {\n    if (identifier) {\n      await dispatch(fetchRulesSourceBuildInfoAction({ rulesSourceName: identifier.ruleSourceName }));\n    }\n  }, [dispatch]);\n\n  const { canCreateGrafanaRules, canCreateCloudRules, canEditRules } = useRulesAccess();\n\n  const getContent = useCallback(() => {\n    if (loading) {\n      return;\n    }\n\n    if (!identifier && !canCreateGrafanaRules && !canCreateCloudRules) {\n      return <AlertWarning title=\"Cannot create rules\">Sorry! You are not allowed to create rules.</AlertWarning>;\n    }\n\n    if (identifier && !canEditRules(identifier.ruleSourceName)) {\n      return <AlertWarning title=\"Cannot edit rules\">Sorry! You are not allowed to edit rules.</AlertWarning>;\n    }\n\n    if (identifier) {\n      return <ExistingRuleEditor key={id} identifier={identifier} />;\n    }\n\n    return <AlertRuleForm />;\n  }, [canCreateCloudRules, canCreateGrafanaRules, canEditRules, id, identifier, loading]);\n\n  return (\n    <AlertingPageWrapper isLoading={loading} pageId=\"alert-list\" pageNav={getPageNav(identifier ? 'edit' : 'add')}>\n      {getContent()}\n    </AlertingPageWrapper>\n  );\n};\n\nexport default withErrorBoundary(RuleEditor, { style: 'page' });\n","import React, { useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { STAT, TABLE, TIMESERIES } from '../utils/constants';\n\nexport type SupportedPanelPlugins = 'timeseries' | 'table' | 'stat';\n\ntype Props = {\n  value: SupportedPanelPlugins;\n  onChange: (value: SupportedPanelPlugins) => void;\n  size?: 'sm' | 'md';\n};\n\nexport function PanelPluginsButtonGroup(props: Props): JSX.Element | null {\n  const { value, onChange, size = 'md' } = props;\n  const panels = useMemo(() => getSupportedPanels(), []);\n\n  return <RadioButtonGroup options={panels} value={value} onChange={onChange} size={size} />;\n}\n\nfunction getSupportedPanels(): Array<SelectableValue<SupportedPanelPlugins>> {\n  return Object.values(config.panels).reduce((panels: Array<SelectableValue<SupportedPanelPlugins>>, panel) => {\n    if (isSupportedPanelPlugin(panel.id)) {\n      panels.push({\n        value: panel.id,\n        label: panel.name,\n        imgUrl: panel.info.logos.small,\n      });\n    }\n    return panels;\n  }, []);\n}\n\nfunction isSupportedPanelPlugin(id: string): id is SupportedPanelPlugins {\n  switch (id) {\n    case TIMESERIES:\n    case TABLE:\n    case STAT:\n      return true;\n    default:\n      return false;\n  }\n}\n","import { useMemo } from 'react';\n\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nexport function useAlertQueriesStatus(queries: AlertQuery[]) {\n  const allDataSourcesAvailable = useMemo(\n    () => queries.every((query) => Boolean(getDataSourceSrv().getInstanceSettings(query.datasourceUid))),\n    [queries]\n  );\n\n  return { allDataSourcesAvailable };\n}\n","import { useEffect } from 'react';\n\nimport { FolderDTO, useDispatch } from 'app/types';\n\nimport { fetchFolderIfNotFetchedAction } from '../state/actions';\nimport { initialAsyncRequestState } from '../utils/redux';\n\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\ninterface ReturnBag {\n  folder?: FolderDTO;\n  loading: boolean;\n}\n\nexport function useFolder(uid?: string): ReturnBag {\n  const dispatch = useDispatch();\n  const folderRequests = useUnifiedAlertingSelector((state) => state.folders);\n  useEffect(() => {\n    if (uid) {\n      dispatch(fetchFolderIfNotFetchedAction(uid));\n    }\n  }, [dispatch, uid]);\n\n  if (uid) {\n    const request = folderRequests[uid] || initialAsyncRequestState;\n    return {\n      folder: request.result,\n      loading: request.loading,\n    };\n  }\n  return {\n    loading: false,\n  };\n}\n","import { contextSrv } from 'app/core/services/context_srv';\nimport { RulerRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { getRulesPermissions } from '../utils/access-control';\nimport { isGrafanaRulerRule } from '../utils/rules';\n\nimport { useFolder } from './useFolder';\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\ninterface ResultBag {\n  isEditable?: boolean;\n  isRemovable?: boolean;\n  loading: boolean;\n}\n\nexport function useIsRuleEditable(rulesSourceName: string, rule?: RulerRuleDTO): ResultBag {\n  const dataSources = useUnifiedAlertingSelector((state) => state.dataSources);\n  const folderUID = rule && isGrafanaRulerRule(rule) ? rule.grafana_alert.namespace_uid : undefined;\n\n  const rulePermission = getRulesPermissions(rulesSourceName);\n  const { folder, loading } = useFolder(folderUID);\n\n  if (!rule) {\n    return { isEditable: false, isRemovable: false, loading: false };\n  }\n\n  // Grafana rules can be edited if user can edit the folder they're in\n  // When RBAC is disabled access to a folder is the only requirement for managing rules\n  // When RBAC is enabled the appropriate alerting permissions need to be met\n  if (isGrafanaRulerRule(rule)) {\n    if (!folderUID) {\n      throw new Error(\n        `Rule ${rule.grafana_alert.title} does not have a folder uid, cannot determine if it is editable.`\n      );\n    }\n\n    if (!folder) {\n      // Loading or invalid folder UID\n      return {\n        isEditable: false,\n        isRemovable: false,\n        loading,\n      };\n    }\n    const rbacDisabledFallback = folder.canSave;\n\n    const canEditGrafanaRules = contextSrv.hasAccessInMetadata(rulePermission.update, folder, rbacDisabledFallback);\n    const canRemoveGrafanaRules = contextSrv.hasAccessInMetadata(rulePermission.delete, folder, rbacDisabledFallback);\n\n    return {\n      isEditable: canEditGrafanaRules,\n      isRemovable: canRemoveGrafanaRules,\n      loading,\n    };\n  }\n\n  // prom rules are only editable by users with Editor role and only if rules source supports editing\n  const isRulerAvailable = Boolean(dataSources[rulesSourceName]?.result?.rulerConfig);\n  const canEditCloudRules = contextSrv.hasAccess(rulePermission.update, contextSrv.isEditor);\n  const canRemoveCloudRules = contextSrv.hasAccess(rulePermission.delete, contextSrv.isEditor);\n\n  return {\n    isEditable: canEditCloudRules && isRulerAvailable,\n    isRemovable: canRemoveCloudRules && isRulerAvailable,\n    loading: dataSources[rulesSourceName]?.loading,\n  };\n}\n","import { RelativeTimeRange } from '@grafana/data';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { ExpressionQuery, ExpressionQueryType } from '../../../expressions/types';\n\nconst FALL_BACK_TIME_RANGE = { from: 21600, to: 0 };\n\nexport const getTimeRangeForExpression = (query: ExpressionQuery, queries: AlertQuery[]): RelativeTimeRange => {\n  const referencedRefIds: string[] | undefined = getReferencedIds(query, queries);\n\n  if (!referencedRefIds) {\n    return FALL_BACK_TIME_RANGE;\n  }\n\n  const { from, to } = getTimeRanges(referencedRefIds, queries);\n\n  if (!from.length && !to.length) {\n    return FALL_BACK_TIME_RANGE;\n  }\n\n  return {\n    from: Math.max(...from),\n    to: Math.min(...to),\n  };\n};\n\nconst getReferencedIds = (model: ExpressionQuery, queries: AlertQuery[]): string[] | undefined => {\n  switch (model.type) {\n    case ExpressionQueryType.classic:\n      return getReferencedIdsForClassicCondition(model);\n    case ExpressionQueryType.math:\n      return getReferencedIdsForMath(model, queries);\n    case ExpressionQueryType.resample:\n    case ExpressionQueryType.reduce:\n    case ExpressionQueryType.threshold:\n      return getReferencedIdsForReduce(model);\n  }\n};\n\nconst getReferencedIdsForClassicCondition = (model: ExpressionQuery) => {\n  return model.conditions?.map((condition) => {\n    return condition.query.params[0];\n  });\n};\n\nconst getTimeRanges = (referencedRefIds: string[], queries: AlertQuery[]) => {\n  let from: number[] = [];\n  let to = [FALL_BACK_TIME_RANGE.to];\n  for (const referencedRefIdsKey of referencedRefIds) {\n    const query = queries.find((query) => query.refId === referencedRefIdsKey);\n\n    if (!query || !query.relativeTimeRange) {\n      continue;\n    }\n    from.push(query.relativeTimeRange.from);\n    to.push(query.relativeTimeRange.to);\n  }\n\n  return {\n    from,\n    to,\n  };\n};\n\nconst getReferencedIdsForMath = (model: ExpressionQuery, queries: AlertQuery[]) => {\n  return (\n    queries\n      // filter queries of type query and filter expression on if it includes any refIds\n      .filter((q) => q.queryType === 'query' && model.expression?.includes(q.refId))\n      .map((q) => {\n        return q.refId;\n      })\n  );\n};\n\nconst getReferencedIdsForReduce = (model: ExpressionQuery) => {\n  return model.expression ? [model.expression] : undefined;\n};\n","import { Observable, of, OperatorFunction, ReplaySubject, Unsubscribable } from 'rxjs';\nimport { catchError, map, share } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  dataFrameFromJSON,\n  DataFrameJSON,\n  getDefaultTimeRange,\n  LoadingState,\n  PanelData,\n  rangeUtil,\n  TimeRange,\n  withLoadingIndicator,\n} from '@grafana/data';\nimport { FetchResponse, getDataSourceSrv, toDataQueryError } from '@grafana/runtime';\nimport { BackendSrv, getBackendSrv } from 'app/core/services/backend_srv';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { cancelNetworkRequestsOnUnsubscribe } from 'app/features/query/state/processing/canceler';\nimport { setStructureRevision } from 'app/features/query/state/processing/revision';\nimport { preProcessPanelData } from 'app/features/query/state/runRequest';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { getTimeRangeForExpression } from '../utils/timeRange';\n\nexport interface AlertingQueryResult {\n  frames: DataFrameJSON[];\n}\n\nexport interface AlertingQueryResponse {\n  results: Record<string, AlertingQueryResult>;\n}\nexport class AlertingQueryRunner {\n  private subject: ReplaySubject<Record<string, PanelData>>;\n  private subscription?: Unsubscribable;\n  private lastResult: Record<string, PanelData>;\n\n  constructor(private backendSrv = getBackendSrv(), private dataSourceSrv = getDataSourceSrv()) {\n    this.subject = new ReplaySubject(1);\n    this.lastResult = {};\n  }\n\n  get(): Observable<Record<string, PanelData>> {\n    return this.subject.asObservable();\n  }\n\n  async run(queries: AlertQuery[]) {\n    if (queries.length === 0) {\n      const empty = initialState(queries, LoadingState.Done);\n      return this.subject.next(empty);\n    }\n\n    // do not execute if one more of the queries are not runnable,\n    // for example not completely configured\n    for (const query of queries) {\n      if (!isExpressionQuery(query.model)) {\n        const ds = await this.dataSourceSrv.get(query.datasourceUid);\n        if (ds.filterQuery && !ds.filterQuery(query.model)) {\n          const empty = initialState(queries, LoadingState.Done);\n          return this.subject.next(empty);\n        }\n      }\n    }\n\n    this.subscription = runRequest(this.backendSrv, queries).subscribe({\n      next: (dataPerQuery) => {\n        const nextResult = applyChange(dataPerQuery, (refId, data) => {\n          const previous = this.lastResult[refId];\n          const preProcessed = preProcessPanelData(data, previous);\n          return setStructureRevision(preProcessed, previous);\n        });\n\n        this.lastResult = nextResult;\n        this.subject.next(this.lastResult);\n      },\n\n      error: (error: Error) => {\n        this.lastResult = mapErrorToPanelData(this.lastResult, error);\n        this.subject.next(this.lastResult);\n      },\n    });\n  }\n\n  cancel() {\n    if (!this.subscription) {\n      return;\n    }\n    this.subscription.unsubscribe();\n\n    let requestIsRunning = false;\n\n    const nextResult = applyChange(this.lastResult, (refId, data) => {\n      if (data.state === LoadingState.Loading) {\n        requestIsRunning = true;\n      }\n\n      return {\n        ...data,\n        state: LoadingState.Done,\n      };\n    });\n\n    if (requestIsRunning) {\n      this.subject.next(nextResult);\n    }\n  }\n\n  destroy() {\n    if (this.subject) {\n      this.subject.complete();\n    }\n\n    this.cancel();\n  }\n}\n\nconst runRequest = (backendSrv: BackendSrv, queries: AlertQuery[]): Observable<Record<string, PanelData>> => {\n  const initial = initialState(queries, LoadingState.Loading);\n  const request = {\n    data: { data: queries },\n    url: '/api/v1/eval',\n    method: 'POST',\n    requestId: uuidv4(),\n  };\n\n  return withLoadingIndicator({\n    whileLoading: initial,\n    source: backendSrv.fetch<AlertingQueryResponse>(request).pipe(\n      mapToPanelData(initial),\n      catchError((error) => of(mapErrorToPanelData(initial, error))),\n      cancelNetworkRequestsOnUnsubscribe(backendSrv, request.requestId),\n      share()\n    ),\n  });\n};\n\nconst initialState = (queries: AlertQuery[], state: LoadingState): Record<string, PanelData> => {\n  return queries.reduce((dataByQuery: Record<string, PanelData>, query) => {\n    dataByQuery[query.refId] = {\n      state,\n      series: [],\n      timeRange: getTimeRange(query, queries),\n    };\n\n    return dataByQuery;\n  }, {});\n};\n\nconst getTimeRange = (query: AlertQuery, queries: AlertQuery[]): TimeRange => {\n  if (isExpressionQuery(query.model)) {\n    const relative = getTimeRangeForExpression(query.model, queries);\n    return rangeUtil.relativeToTimeRange(relative);\n  }\n\n  if (!query.relativeTimeRange) {\n    console.warn(`Query with refId: ${query.refId} did not have any relative time range, using default.`);\n    return getDefaultTimeRange();\n  }\n\n  return rangeUtil.relativeToTimeRange(query.relativeTimeRange);\n};\n\nconst mapToPanelData = (\n  dataByQuery: Record<string, PanelData>\n): OperatorFunction<FetchResponse<AlertingQueryResponse>, Record<string, PanelData>> => {\n  return map((response) => {\n    const { data } = response;\n    const results: Record<string, PanelData> = {};\n\n    for (const [refId, result] of Object.entries(data.results)) {\n      results[refId] = {\n        timeRange: dataByQuery[refId].timeRange,\n        state: LoadingState.Done,\n        series: result.frames.map(dataFrameFromJSON),\n      };\n    }\n\n    return results;\n  });\n};\n\nconst mapErrorToPanelData = (lastResult: Record<string, PanelData>, error: Error): Record<string, PanelData> => {\n  const queryError = toDataQueryError(error);\n\n  return applyChange(lastResult, (refId, data) => {\n    return {\n      ...data,\n      state: LoadingState.Error,\n      error: queryError,\n    };\n  });\n};\n\nconst applyChange = (\n  initial: Record<string, PanelData>,\n  change: (refId: string, data: PanelData) => PanelData\n): Record<string, PanelData> => {\n  const nextResult: Record<string, PanelData> = {};\n\n  for (const [refId, data] of Object.entries(initial)) {\n    nextResult[refId] = change(refId, data);\n  }\n\n  return nextResult;\n};\n","import { useMemo } from 'react';\n\nimport { getRulesAccess } from './access-control';\n\nexport function useRulesAccess() {\n  return useMemo(() => getRulesAccess(), []);\n}\n","import { DataQuery } from '@grafana/data';\nimport { isExpressionReference } from '@grafana/runtime/src/utils/DataSourceWithBackend';\n\nimport { ExpressionQuery, ExpressionQueryType } from './types';\n\nexport const isExpressionQuery = (dataQuery?: DataQuery): dataQuery is ExpressionQuery => {\n  if (!dataQuery) {\n    return false;\n  }\n\n  if (isExpressionReference(dataQuery.datasource)) {\n    return true;\n  }\n\n  const expression = dataQuery as ExpressionQuery;\n\n  if (typeof expression.type !== 'string') {\n    return false;\n  }\n  return Object.values(ExpressionQueryType).includes(expression.type);\n};\n"],"names":["AlertWarning","title","children","Alert","className","useStyles2","warningStyles","warning","severity","href","theme","css","spacing","fetchAlertRulePreview","request","dataSourceUid","ruleType","withLoadingIndicator","whileLoading","createResponse","source","getBackendSrv","fetch","method","url","data","pipe","map","state","LoadingState","series","instances","dataFrameFromJSON","catchError","error","of","toDataQueryError","share","timeRange","getDefaultTimeRange","PreviewRuleResult","props","preview","styles","getStyles","fieldConfig","defaults","overrides","matcher","id","FieldMatcherID","options","properties","value","TableCellDisplayMode","container","messageFromError","RuleFormType","table","width","height","style","PanelRenderer","pluginId","colors","border","medium","shape","borderRadius","fields","PreviewRule","onPreview","usePreview","watch","useFormContext","type","condition","queries","allDataSourcesAvailable","useAlertQueriesStatus","isPreviewAvailable","Boolean","Button","disabled","variant","onClick","setPreview","useState","getValues","isMounted","useMountedState","useCallback","values","dataSourceName","expression","dsSettings","getDataSourceSrv","getInstanceSettings","Error","uid","expr","grafana_condition","now","dateTimeFormatISO","Date","createPreviewRequest","isCloudPreviewRequest","isGrafanaPreviewRequest","GRAFANA_RULES_SOURCE_NAME","previewAlertRule","takeWhile","response","isCompleted","subscribe","breakpoints","xxl","CloudEvaluationBehavior","register","control","formState","errors","RuleEditorSection","stepNo","Field","label","description","flexRow","invalid","forTime","message","inlineField","Input","I","pattern","InputControl","name","render","field","onChange","Select","timeOptions","timeUnit","queriesWithUpdatedReferences","previousRefId","newRefId","query","isExpressionQuery","model","isMathExpression","isReduceExpression","isResampleExpression","isClassicExpression","isThresholdExpression","updateMathExpressionRefs","isReferencing","conditions","params","param","oldExpression","RegExp","newExpression","replace","refIdExists","refId","undefined","find","checkForPathSeparator","includes","errorFromSeries","length","isTimeSeries","GroupAndNamespaceFields","rulesSourceName","setValue","getStyle","rulerRequests","useUnifiedAlertingSelector","rulerRules","dispatch","useDispatch","useEffect","fetchRulerRulesAction","rulesConfig","result","namespace","namespaceOptions","useMemo","Object","keys","groupOptions","group","allowCustomValue","input","rules","required","validate","pathSeparator","SlashesWarning","Stack","gap","slashNotAllowed","Tooltip","placement","content","Icon","size","infoIcon","window","open","containsSlashes","str","indexOf","RuleFolderPicker","folderWarning","warningCondition","folderName","warningComponent","customAdd","disallowValues","isAllowedValue","FolderPicker","showRoot","allowEmpty","initialTitle","initialFolderId","accessControlMetadata","permissionLevel","PermissionLevelString","main","recordingRuleNameValidationPattern","DetailsStep","initialFolder","ruleFormType","folderFilter","useRuleFolderFilter","formInput","classNames","alignBaseline","Label","htmlFor","folder","inputId","enableCreateNew","contextSrv","AccessControlAction","enableReset","filter","dissalowSlashes","group_","AnnotationsField","existingRuleForm","isSearchHitAvailable","hit","rbacDisabledFallback","canCreateRuleInFolder","canUpdateInCurrentFolder","folderId","folderHits","NotificationsStep","hideFlowChart","setHideFlowChart","useTheme2","hideButton","contentWrapper","flowChart","src","toLowerCase","alt","display","flexDirection","LabelsField","Card","card","Link","text","secondary","isNothing","subject","common","isObject","toArray","sequence","Array","isArray","repeat","string","count","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","extend","target","index","key","sourceKeys","formatError","exception","compact","where","reason","mark","line","column","snippet","YAMLException$1","call","this","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","Math","floor","slice","pos","padStart","max","maxLength","indent","linesBefore","linesAfter","match","re","lineStarts","lineEnds","foundLineNo","exec","push","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","forEach","kind","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","alias","String","compileStyleAliases","compileList","schema","currentType","newIndex","previousType","previousIndex","Schema$1","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","seq","failsafe","_null","object","canonical","lowercase","uppercase","camelcase","empty","bool","isOctCode","c","isDecCode","ch","hasDigits","charCodeAt","sign","parseInt","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","test","POSITIVE_INFINITY","NaN","parseFloat","res","isNaN","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","timestamp","year","month","day","hour","minute","second","date","fraction","delta","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","code","idx","bitlen","charAt","tailbits","bits","Uint8Array","_hasOwnProperty$3","hasOwnProperty","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","set","_default","_hasOwnProperty$1","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loader","loadAll","iterator","load","_toString","_hasOwnProperty","CHAR_BOM","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","State","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","writeBlockSequence","writeNode","detectType","block","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","renamed","from","to","tabs","RuleInspector","onClose","activeTab","setActiveTab","drawerStyles","Drawer","subtitle","RuleInspectorSubtitle","InspectorYamlTab","onSubmit","formValues","TabsBar","tab","Tab","onChangeTab","active","yamlTabStyle","yamlValues","formValuesToRulerRuleDTO","alertRuleAsYaml","setAlertRuleAsYaml","applyButton","rulerRule","currentFormValues","yamlFormValues","isAlertingRulerRule","alertingRulerRuleToRuleForm","isRecordingRulerRule","recordingRulerRuleToRuleForm","rulerRuleToRuleFormValues","YamlContentInfo","interactive","disableWidth","CodeEditor","language","onBlur","monacoOptions","minimap","enabled","rel","CloudAlertPreview","alertPreview","labelFields","stateFieldIndex","findIndex","infoFieldIndex","labelIndexes","labelField","instanceStatusCount","labelValues","labelIndex","get","info","isGrafanaAlertState","labels","fromEntries","mapDataFrameToAlertPreview","instanceTags","entries","labelsToTags","AlertStateTag","TagList","tags","tagList","primary","typography","bodySmall","fontSize","background","ExpressionEditor","mapToValue","mapToQuery","settings","existing","useQueryMappers","dataQuery","hide","loading","dataSource","useAsync","onChangeQuery","dsi","components","QueryEditor","errorMessage","previewLoaded","previewDataFrame","s","previewHasAlerts","some","DataSourcePluginContextProvider","instanceSettings","app","CoreApp","onRunQuery","noop","datasource","async","previewAlert","xl","Spacer","AlertConditionIndicator","onSetCondition","Badge","color","icon","tooltip","actionLink","link","getSeriesValue","frame","isFinite","roundDecimals","formatLabels","join","Expression","isAlertCondition","onUpdateRefId","onRemoveExpression","onUpdateExpressionType","queryType","isLoading","d","hasResults","emptyResults","every","serie","isEmptySeries","isTimeSeriesResults","alertCondition","showSummary","groupedByState","PromAlertingRuleState","renderExpressionType","availableRefIds","q","ExpressionQueryType","labelWidth","Reduce","refIds","Resample","ClassicConditions","Threshold","cx","wrapper","Header","body","results","TimeseriesRow","uniqueId","FrameRow","noData","mutedText","footer","direction","alignItems","PreviewSummary","firing","normal","editMode","setEditMode","editing","editingRefId","editingType","selectedExpressionType","gelTypes","o","header","wrap","editable","AutoSizeInput","autoFocus","defaultValue","minWidth","event","currentTarget","onFocus","select","capitalize","mutedIcon","isOpen","selection","IconButton","getSeriesName","showFiring","showNormal","resultsRow","resultLabel","resultValue","timestamps","getTimestampFromIndex","getValueFromIndex","HoverCard","wrapperClassName","timeseriesTableWrapper","timeseriesTable","_","dateTimeFormat","fontWeightBold","noResults","canvas","maxContrast","draggableIcon","weak","ExpressionsEditor","panelData","onUpdateQueryExpression","expressionQueries","reduce","acc","meta","notices","notice","warningFromSeries","VizWrapper","currentPanel","changePanel","onThresholdsChange","thresholds","setOptions","frameIndex","showHeader","vizHeight","TIMESERIES","STAT","dataIsEmpty","rowHeight","gridSize","tableHeight","useVizHeight","setFieldConfig","unit","defaultUnit","custom","thresholdsStyle","mode","GraphTresholdsStyleMode","defaultFieldConfig","context","eventBus","appEvents","canEditThresholds","buttonGroup","PanelPluginsButtonGroup","PanelContext","onOptionsChange","visHeight","config","QueryWrapper","onChangeDataSource","onChangeTimeRange","onRunQueries","onRemoveQuery","onDuplicateQuery","onChangeThreshold","isExpression","changePluginId","TABLE","SelectingDataSourceTooltip","dsTooltip","HeaderExtras","RelativeTimeRangePicker","relativeTimeRange","getDefaultRelativeTimeRange","range","QueryEditorRow","alerting","cloneDeep","onAddQuery","renderHeaderExtras","visualization","hideDisableQuery","EmptyQueryWrapper","QueryRows","PureComponent","super","onQueriesChange","item","itemIndex","referencedRefId","conditionIndex","evaluator","steps","toPrecision","omit","datasourceUid","copyModel","startIndex","endIndex","update","removed","splice","record","threshold","ThresholdsMode","Infinity","thresholdByRefId","getThresholdsForQueries","onDragEnd","droppableId","provided","ref","innerRef","droppableProps","getDataSourceSettings","DatasourceNotFound","onUpdateDatasource","defaultDataSource","getDatasourceSrv","placeholder","showDetails","setShowDetails","QueryOperationRow","draggable","show","fill","JSON","stringify","onChangeQueries","useRulesSourcesWithRuler","dataSources","ds","rulerConfig","getDataSourceByName","dsConfig","CloudRulesSourcePicker","rulesSourcesWithRuler","fetchAllPromBuildInfoAction","dataSourceFilter","DataSourcePicker","noDefault","current","RuleType","image","selected","cardStyles","isSelected","GrafanaManagedRuleType","DisabledTooltip","visible","MimirFlavoredType","RecordingRuleType","RuleTypePicker","enabledTypes","hasLotexDatasources","isEmpty","AlertType","editingExistingRule","enabledRuleTypes","defaultRuleType","canCreateGrafanaRules","canCreateCloudRules","getAvailableRuleTypes","findDataSourceFromExpressionRecursive","alertQuery","e","hasCyclicalReferences","ExpressionDatasourceUID","alertQueryReferenced","alertQuery_","findDataSourceFromExpression","firstReference","duplicateQuery","createAction","addNewDataQuery","setDataQueries","addNewExpression","removeExpression","updateExpression","updateExpressionRefId","rewireExpressions","updateExpressionType","updateExpressionTimeRange","queriesAndExpressionsReducer","createReducer","builder","addCase","payload","addQuery","getDefaultOrFirstCompatibleDataSource","expressionDatasource","defaultCondition","dataSourceAlertQuery","newState","oldRefId","updatedQueries","action","queryToAdd","getNextRefIdChar","defaultTimeRange","QueryAndExpressionsStep","runner","useRef","AlertingQueryRunner","setPanelData","initialState","useReducer","isGrafanaManagedType","isCloudAlertRuleType","showCloudExpressionEditor","cancelQueries","cancel","runQueries","run","shouldValidate","currentRunner","destroy","noCompatibleDataSources","isDataLoading","dataQueries","emptyQueries","lastRefId","at","selectors","AlertRuleForm","notifyApp","useAppNotification","queryParams","useQueryParams","showEditYaml","setShowEditYaml","returnTo","showDeleteModal","setShowDeleteModal","defaultValues","rulerRuleToFormValues","getDefaultFormValues","getDefaultQueries","parse","formAPI","useForm","shouldFocusError","handleSubmit","showStep2","submitState","ruleForm","saveRule","initialAsyncRequestState","useCleanup","unifiedAlerting","submit","exitOnSave","saveRuleFormAction","annotations","trim","redirectOnSave","onInvalid","preventDefault","form","justify","logInfo","LogMessages","isCortexLokiOrRecordingRule","Spinner","buttonSpinner","inline","contentOuter","CustomScrollbar","autoHeightMin","hideHorizontalTrack","contentInner","GrafanaEvaluationBehavior","ConfirmModal","confirmText","onConfirm","identifier","ruleId","ruleSourceName","rule","deleteRuleAction","navigateTo","onDismiss","ExistingRuleEditor","existingRule","loadingAlertRule","dispatched","isEditable","loadingEditable","useIsRuleEditable","fetchEditableRuleAction","LoadingPlaceholder","defaultPageNav","breadcrumbs","withErrorBoundary","fetchRulesSourceBuildInfoAction","canEditRules","useRulesAccess","getContent","AlertingPageWrapper","pageId","pageNav","panels","panel","isSupportedPanelPlugin","imgUrl","logos","small","useFolder","folderRequests","folders","fetchFolderIfNotFetchedAction","folderUID","isGrafanaRulerRule","grafana_alert","namespace_uid","rulePermission","getRulesPermissions","isRemovable","canSave","delete","isRulerAvailable","FALL_BACK_TIME_RANGE","getReferencedIds","getReferencedIdsForClassicCondition","getReferencedIdsForMath","getReferencedIdsForReduce","getTimeRanges","referencedRefIds","referencedRefIdsKey","backendSrv","dataSourceSrv","ReplaySubject","lastResult","asObservable","filterQuery","subscription","runRequest","dataPerQuery","nextResult","applyChange","previous","preProcessed","preProcessPanelData","setStructureRevision","mapErrorToPanelData","unsubscribe","requestIsRunning","complete","initial","requestId","uuidv4","mapToPanelData","cancelNetworkRequestsOnUnsubscribe","dataByQuery","getTimeRange","relative","getTimeRangeForExpression","rangeUtil","console","warn","frames","queryError","change","getRulesAccess","isExpressionReference"],"sourceRoot":""}