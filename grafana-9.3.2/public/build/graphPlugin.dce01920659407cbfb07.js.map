{"version":3,"file":"graphPlugin.dce01920659407cbfb07.js","mappings":"uJAIA,MAAMA,EAAwC,CAAEC,KAAM,GAAIC,MAAO,IAAKC,IAAK,IAEpE,MAAMC,EACXC,cACEC,KAAKC,OAASD,KAAKE,yBAAyBF,KAAKC,QACjDD,KAAKG,KAAOH,KAAKE,yBAAyBF,KAAKG,MAC/CH,KAAKI,KAAOJ,KAAKE,yBAAyBF,KAAKI,MAC/CJ,KAAKK,KAAOL,KAAKE,yBAAyBF,KAAKK,MAC/CL,KAAKM,KAAON,KAAKE,yBAAyBF,KAAKM,KAAM,mBACrDN,KAAKO,SAAWP,KAAKE,yBAAyBF,KAAKO,SAAU,mBAC7DP,KAAKQ,QAAUR,KAAKE,yBAAyBF,KAAKQ,SAClDR,KAAKS,OAAST,KAAKE,yBAAyBF,KAAKS,QACjDT,KAAKU,MAAQV,KAAKE,yBAAyBF,KAAKU,OAChDV,KAAKW,IAAMX,KAAKE,yBAAyBF,KAAKW,IAChD,CAEAT,yBAAyBU,EAAcC,GACrC,IAAIC,EAAOd,KAEX,OAAO,WAEL,OADAe,EAAAA,EAAAA,GAAmB,YAAaH,EAAGI,KAAMH,GAAe,mBACjDD,EAAGK,MAAMH,EAAMI,UACxB,CACF,CAEAjB,SACE,MAAQ,GAAEkB,OAAOC,SAASC,SAASrB,KAAKW,OAC1C,CAEAR,KAAKmB,GAGH,IAFAC,EAAAA,EAAAA,IAAiB,0BAA0B,EAAO,8BAE7CD,EAGH,MAAM,IAAIE,MAAM,kDAFhB,OAAOC,EAAAA,GAAAA,cAA8BtB,KAAKuB,MAAM,EAIpD,CAEAtB,OACE,OAAO,IAAIuB,IAAIR,OAAOC,SAASQ,MAAMC,QACvC,CAEAxB,KAAKyB,IACHP,EAAAA,EAAAA,IAAiB,0BAA0B,EAAO,8BAElD,MAAMH,EAAWK,EAAAA,GAAAA,cAEjB,GAAIK,QAA6C,CAC/C,IAAIC,EAAaC,OAAOF,GACxBC,EAAaA,EAAWE,WAAW,KAAOF,EAAc,IAAGA,IAC3D,MAAMpB,EAAM,IAAIgB,IAAK,GAAER,OAAOC,SAASC,SAASU,KAOhD,OALAN,EAAAA,GAAAA,KAAqB,CACnBK,SAAUnB,EAAImB,SACdrB,OAAQE,EAAIF,OAAOyB,OAAS,EAAIvB,EAAIF,OAASW,EAASX,OACtDN,KAAMQ,EAAIR,KAAK+B,OAAS,EAAIvB,EAAIR,KAAOiB,EAASjB,OAE3CH,IACT,CAEA,OAAiB,OAAb8B,GACFL,EAAAA,GAAAA,KAAqB,KACdzB,MAGFoB,EAASU,QAClB,CAEAxB,OACE,MAAMK,EAAM,IAAIgB,IAAIR,OAAOC,SAASQ,MACpC,OAAOO,SAASxB,EAAIL,KAAM,KAAOZ,EAAciB,EAAIJ,WAAa,IAClE,CAEAA,WACE,OAAO,IAAIoB,IAAIR,OAAOC,SAASQ,MAAMrB,SAASmB,MAAM,GAAI,EAC1D,CAEAlB,UACE,MAAM,IAAIgB,MAAM,iDAClB,CAEAf,OAAOA,EAAc2B,GAEnB,IADAb,EAAAA,EAAAA,IAAiB,0BAA0B,EAAO,iCAC7Cd,EACH,OAAOgB,EAAAA,GAAAA,kBAGT,GAAIhB,GAAUS,UAAUgB,OAAS,EAK/B,OAJAT,EAAAA,GAAAA,QAAwB,CACtB,CAAChB,GAAS2B,IAGLpC,KAGT,GAAIS,EAAQ,CACV,IAAI4B,EAGFA,EADoB,iBAAX5B,EACE,OAAH,UAAQA,IAEL6B,EAAAA,EAAAA,IAAuB7B,GAGpC,IAAK,MAAM8B,KAAOC,OAAOC,KAAKJ,GAEN,OAAlBA,EAASE,SAAmCG,IAAlBL,EAASE,WAC9BF,EAASE,GAIpB,MAAMI,EAAaC,EAAAA,GAAAA,UAAkBnB,EAAAA,GAAAA,cAA8BK,SAAUO,GAC7EZ,EAAAA,GAAAA,KAAqBkB,EACvB,CAEA,OAAO3C,IACT,CAEAU,MAAMA,GAEJ,MADAa,EAAAA,EAAAA,IAAiB,0BAA0B,EAAO,+BAC5C,IAAIC,MAAM,iDAClB,CAEAb,IAAIkC,GAGF,IAFAtB,EAAAA,EAAAA,IAAiB,0BAA0B,EAAO,kCAEnCmB,IAAXG,EAWF,OAVIA,EAAOZ,WAAW,KACpBR,EAAAA,GAAAA,KAAqB,OAAD,UAAMA,EAAAA,GAAAA,cAA+B,CAAAtB,KAAM0C,KACtDA,EAAOZ,WAAW,KAC3BR,EAAAA,GAAAA,KAAqB,OAAD,UAAMA,EAAAA,GAAAA,cAA+B,CAAAhB,OAAQoC,KAC/B,IAAzBA,EAAOC,OAAOZ,OACvBT,EAAAA,GAAAA,KAAqB,KAErBA,EAAAA,GAAAA,KAAqBoB,GAGhBpB,EAAAA,GAGT,MAAML,EAAWK,EAAAA,GAAAA,cACjB,MAAQ,GAAEL,EAASU,WAAWV,EAASX,SAASW,EAASjB,MAC3D,E,iOC7HF,MAAM4C,UAAyBC,EAAAA,EAkB7BjD,YAAYkD,EAAaC,GACvBC,MAAMF,EAAQC,GAAW,sPAPV,GAAK,kBACW,IAAE,2DAEnB,GAAK,sDAmGD,CAClBE,KAAOC,IASL,GARArD,KAAKsD,UAAYD,EAEbA,EAAK3C,QAAU6C,EAAAA,GAAAA,QACjBvD,KAAKwD,SAAU,EACfxD,KAAKyD,iBAAiBJ,EAAKK,QAIzBL,EAAK3C,QAAU6C,EAAAA,GAAAA,QAGjB,OAFAvD,KAAKwD,SAAU,OACfxD,KAAK2D,oBAIP,GAAIN,EAAKO,QAAS,CAChB,MAAM,SAAEC,GAAaR,EAAKO,QACtBC,IACF7D,KAAK6D,SAAWA,EAEpB,CAMA,GAJIR,EAAKS,YACP9D,KAAK+D,MAAQV,EAAKS,WAGhB9D,KAAKgE,cACPhE,KAAKiE,iBAAiBZ,EAAKa,YACtB,CAEL,MAAMC,EAASd,EAAKa,OAAOE,KAAKC,IAAMC,EAAAA,EAAAA,IAAqBD,KAC3DrE,KAAKuE,kBAAkB,CAAElB,KAAMc,GACjC,CAEAnE,KAAK2D,mBAAmB,IAhI1B3D,KAAKwE,WAAatB,EAAUuB,IAAI,cAChCzE,KAAK0E,cAAgBxB,EAAUuB,IAAI,iBACnCzE,KAAK2E,QAAUzB,EAAUuB,IAAI,WAC7BzE,KAAK4E,YAAc1B,EAAUuB,IAAI,eACjCzE,KAAK6E,MAAMC,WAAa9E,KAAK6E,MAAMC,YAAc,KAEjD9E,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,QAAqBjF,KAAKkF,sBAAsBC,KAAKnF,OACpEA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,cAA2BjF,KAAKoF,gBAAgBD,KAAKnF,OACpEA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,kBAA+BjF,KAAKqF,sBAAsBF,KAAKnF,MAChF,CAEQqF,wBACN,MAAMC,EAActF,KAAK6E,MAAMU,iBAC/BvF,KAAKwF,kBAAoBF,EACtBG,QAAQ,CAAEC,gBAAgB,EAAMC,iBAAiB,IACjDC,UAAU5F,KAAK6F,kBACpB,CAEQT,kBACFpF,KAAKwF,oBACPxF,KAAKwF,kBAAkBM,cACvB9F,KAAKwF,kBAAoB,KAE7B,CAEQN,wBAEN,IAAIlF,KAAK+F,6BAAT,CAKA,GAAI/F,KAAK6E,MAAMmB,aAAc,CAC3BhG,KAAKiG,kBACL,IAAI5C,EAAOrD,KAAK6E,MAAMmB,aActB,OAZKE,EAAAA,EAAAA,SAAQ7C,KACXA,EAAOA,EAAKA,MAGdrD,KAAKsD,UAAY,CACf5C,MAAO6C,EAAAA,GAAAA,KACPW,OAAQb,EACRS,UAAW9D,KAAK+D,OAKX/D,KAAKmG,UAAS,KACnBnG,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,iBAA8B5B,EAAK,GAExD,CAOA,cAJOrD,KAAK0D,MACZ1D,KAAKwD,SAAU,EAGRxD,KAAK0E,cACTD,IAAIzE,KAAK6E,MAAMC,WAAY9E,KAAK6E,MAAMwB,YACtCC,KAAKtG,KAAKuG,aAAapB,KAAKnF,OAC5BwG,OAAOC,IACNzG,KAAKyD,iBAAiBgD,EAAI,GAjC9B,CAmCF,CAEAhD,iBAAiBgD,GAEXA,EAAIC,UACNC,QAAQC,IAAI,0BAA2BH,IAIzCzG,KAAK0D,MAAQ+C,EAAII,SAAW,gBAExBJ,EAAIpD,OACFoD,EAAIpD,KAAKwD,QACX7G,KAAK0D,MAAQ+C,EAAIpD,KAAKwD,QACbJ,EAAIpD,KAAKK,QAClB1D,KAAK0D,MAAQ+C,EAAIpD,KAAKK,QAI1B1D,KAAK2D,oBACP,CAEAA,oBACO3D,KAAKiD,OAAO6D,MAAMC,SACrB/G,KAAKiD,OAAO+D,SAEhB,CA0CAf,gBAAgBnB,GACd9E,KAAK8E,WAAaA,GAAc9E,KAAK8E,WACrC9E,KAAK+D,MAAQ/D,KAAK2E,QAAQb,YAE1B,MAAMmD,GAAcC,EAAAA,EAAAA,IAAwBlH,KAAK6E,MAAO7E,KAAK+D,OAC7D/D,KAAK6D,SAAWoD,EAAYpD,SAC5B7D,KAAK+D,MAAQkD,EAAYnD,SAC3B,CAEAyC,aAAazB,GACX9E,KAAKiG,gBAAgBnB,GAErB9E,KAAK8E,WAAaA,EAElB,MAAMD,EAAQ7E,KAAK6E,MAGnB,OAFoBA,EAAMU,iBAEP4B,IAAI,CACrBrC,WAAYD,EAAMC,WAClBsC,QAASvC,EAAMwC,QACfC,QAASzC,EAAM0C,GACfC,YAAaxH,KAAKyH,UAAUF,GAC5BG,SAAU1H,KAAKyH,UAAUE,cACzB9D,SAAU7D,KAAK6D,SACfC,UAAW9D,KAAK+D,MAChB6D,cAAe/C,EAAM+C,eAAiB5H,KAAK6H,MAC3CC,YAAajD,EAAMkD,SACnBC,2BAA4BhI,KAAKyH,UAAUQ,KAAKD,2BAChD3B,WAAYxB,EAAMwB,WAClB6B,aAAcrD,EAAMqD,aACpBC,gBAAiBtD,EAAMsD,iBAE3B,CAEAlE,iBAAiBZ,GACfrD,KAAKwD,SAAU,EAEXxD,KAAKyH,WAAazH,KAAKyH,UAAUW,WACnCpI,KAAK6E,MAAMmB,aAAe3C,EAAKe,KAAKiE,IAAUC,EAAAA,EAAAA,IAAeD,MAG/D,IACErI,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,mBAAgC5B,EAGnD,CAFE,MAAOoD,GACPzG,KAAKyD,iBAAiBgD,EACxB,CACF,CAEAlC,kBAAkBgE,GAChBvI,KAAKwD,SAAU,EAEXxD,KAAKyH,UAAUW,WACjBpI,KAAK6E,MAAMmB,aAAeuC,EAAOlF,MAG9BkF,GAAWA,EAAOlF,OACrBsD,QAAQC,IAAI,wDAAyD2B,GACrEA,EAAS,CAAElF,KAAM,KAGnB,IACErD,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,aAA0BsD,EAAOlF,KAGpD,CAFE,MAAOoD,GACPzG,KAAKyD,iBAAiBgD,EACxB,CACF,E,iOC/NK,MAAMzD,EAmBXjD,YAAYkD,EAAaC,GAAkC,0EAf9C,IAAE,kBACJ,IAAE,qIAKO,GAAK,2EAKf,GAAK,gFAqFOsF,QAhFpBxI,KAAK6E,MAAkB,QAAb,EAAG7E,KAAK6E,aAAK,QAAI5B,EAAOwF,QAAQ5D,MAC1C7E,KAAKyH,UAA0B,QAAjB,EAAGzH,KAAKyH,iBAAS,QAAIxE,EAAOwF,QAAQhB,UAClDzH,KAAKkD,UAAYA,EACjBlD,KAAKiD,OAASA,EACdjD,KAAKmG,SAAWjD,EAAUuB,IAAI,YAC9BzE,KAAK0I,WAAa,GAClB1I,KAAK2I,UAAY,IAAI7I,EAAAA,EACrBE,KAAK+E,OAAS,IAAI6D,EAAAA,EAClB5I,KAAK6I,OAAS,CAAC,EAEf,MAAML,EAASM,EAAAA,GAAAA,OAAc9I,KAAK6E,MAAMkE,MACpCP,IACFxI,KAAKgJ,SAAWR,EAAOjB,GACvBvH,KAAKiJ,WAAaT,EAAOxH,MAG3BiC,EAAOiG,IAAIjE,EAAAA,GAAAA,kBAAAA,MAAoC,IAAMjF,KAAKmJ,iBAC5D,CAEAA,gBACEnJ,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,mBACjBjF,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,aACjBjF,KAAKyH,UAAU2B,iBAAiBpJ,KAAK6E,MACvC,CAEAwE,qBACEC,EAAAA,GAAAA,oBACF,CAEAC,UACEvJ,KAAK6E,MAAM0E,SACb,CAEAC,gBAAmBC,EAAoBC,GACrC1J,KAAKiD,OAAO6D,MAAM6C,SAASF,EAAOC,EACpC,CAEAE,eACO5J,KAAK6J,oBACR7J,KAAK6J,mBAAoB,EACzB7J,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,qBAErB,CAEA6E,aAAaC,EAAeC,EAAkBC,EAAgBC,GAC5D,MAAMC,EAAY,CAAEJ,QAAOC,cAAaE,SAEpCE,EAAAA,EAAAA,UAASJ,KACXG,EAAUH,YAAc,KACf,CAAEK,YAAaL,KAItBC,EACFjK,KAAK0I,WAAW4B,OAAOL,EAAO,EAAGE,GAEjCnK,KAAK0I,WAAW6B,KAAKJ,EAEzB,CAEAK,kBACE,MAAMC,EAA+B,GAErC,OADAzK,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,iBAA8BwF,GACxCA,CACT,CAGAC,+BACE,MAAO,EACT,CAEA3E,6BACE,OAAO/F,KAAKyH,UAAUkD,uBAAuB3K,KAAK6E,MACpD,CAEA+F,OAAOlB,GACL1J,KAAK+E,OAAOqB,KAAKnB,EAAAA,GAAAA,OAAoByE,EACvC,E,kDC/GK,MAAMmB,EAAqB,CAAC,eAAgB,oBAC5C,MAAMC,EACXC,8BAA8BlG,GAC5B,IAAKA,EAAMmG,OAASlC,EAAAA,GAAAA,uBAClB,OAAO,EAGT,IAAK,IAAImC,EAAI,EAAGA,EAAIpG,EAAMmG,MAAME,WAAWhJ,OAAQ+I,IAAK,OACtD,MAAME,EAAYtG,EAAMmG,MAAME,WAAWD,GACzC,GAAuB,UAAnBE,EAAUpC,KACZ,SAGF,MAAMqC,EAAYD,EAAUC,UACtBC,EAAqBxG,EAAMwG,WAAa,GACxCC,GAAmE,IAAzDT,EAAmBU,QAAyB,QAAlB,EAACJ,EAAUK,eAAO,aAAjB,EAAmBzC,MAE9D,OAAQqC,EAAUrC,MAChB,IAAK,KAAM,CACT,MAAM0C,EAAQL,EAAUM,OAAO,GAC/BL,EAAWd,KAAK,CAAEkB,MAAOA,EAAOE,GAAI,KAAML,YAC1C,KACF,CACA,IAAK,KAAM,CACT,MAAMG,EAAQL,EAAUM,OAAO,GAC/BL,EAAWd,KAAK,CAAEkB,MAAOA,EAAOE,GAAI,KAAML,YAC1C,KACF,CACA,IAAK,gBAAiB,CACpB,MAAMM,EAASR,EAAUM,OAAO,GAC1BG,EAAST,EAAUM,OAAO,GAE5BE,EAASC,GACXR,EAAWd,KAAK,CAAEkB,MAAOG,EAAQD,GAAI,KAAML,YAC3CD,EAAWd,KAAK,CAAEkB,MAAOI,EAAQF,GAAI,KAAML,cAE3CD,EAAWd,KAAK,CAAEkB,MAAOG,EAAQD,GAAI,KAAML,YAC3CD,EAAWd,KAAK,CAAEkB,MAAOI,EAAQF,GAAI,KAAML,aAG7C,KACF,CACA,IAAK,eAAgB,CACnB,MAAMM,EAASR,EAAUM,OAAO,GAC1BG,EAAST,EAAUM,OAAO,GAE5BE,EAASC,GACXR,EAAWd,KAAK,CAAEkB,MAAOG,EAAQD,GAAI,KAAML,YAC3CD,EAAWd,KAAK,CAAEkB,MAAOI,EAAQF,GAAI,KAAML,cAE3CD,EAAWd,KAAK,CAAEkB,MAAOG,EAAQD,GAAI,KAAML,YAC3CD,EAAWd,KAAK,CAAEkB,MAAOI,EAAQF,GAAI,KAAML,aAE7C,KACF,EAEF,KACF,CAEA,IAAK,MAAMQ,KAAKjH,EAAMwG,WACpBS,EAAEC,KAAOlH,EAAMmH,QAAQC,eACvBH,EAAEI,KAAOrH,EAAMmH,QAAQC,eACvBH,EAAEK,UAAY,WAIhB,OADgB,CAElB,E,0ICzDK,MAAMC,EACXrM,YAAoB8E,GAAY,KAAZA,MAAAA,CAAa,CAEjCwH,cAAcL,GACZ,MAAMM,EAAqB,IACrB,SAAEC,EAAQ,MAAExI,GAAUiI,EAE5B,IAAKO,IAAaA,EAASrK,OACzB,OAAOoK,EAGT,IAAK,IAAIrB,EAAI,EAAGA,EAAIsB,EAASrK,OAAQ+I,IAAK,CACxC,IAAI/G,EAASqI,EAAStB,IAClB,UAAEuB,IAAcC,EAAAA,EAAAA,IAAavI,GAEjC,GAAKsI,EAAL,CAIAtI,GAASwI,EAAAA,EAAAA,GAAyB,CAAErE,MAAOnE,EAAQyI,aAAcH,EAAUxL,OAC3EwL,GAAYC,EAAAA,EAAAA,IAAavI,GAAQsI,UAEjC,IAAK,IAAII,EAAI,EAAGA,EAAI1I,EAAO2I,OAAO3K,OAAQ0K,IAAK,CAC7C,MAAME,EAAQ5I,EAAO2I,OAAOD,GAE5B,GAAIE,EAAM/D,OAASgE,EAAAA,GAAAA,OACjB,SAEF,MAAM/L,GAAOgM,EAAAA,EAAAA,GAAoBF,EAAO5I,EAAQqI,GAC1CU,EAAa,GAEnB,IAAK,IAAIC,EAAI,EAAGA,EAAIhJ,EAAOhC,OAAQgL,IACjCD,EAAW1C,KAAK,CAACuC,EAAMK,OAAO1I,IAAIyI,IAAIE,EAAAA,EAAAA,IAASZ,EAAUW,OAAO1I,IAAIyI,IAAIG,YAG1Ef,EAAK/B,KAAKvK,KAAKsN,aAAaR,EAAO9L,EAAMiK,EAAG2B,EAAGK,EAAYX,EAAKpK,OAAQ6B,GAC1E,CAnBA,CAoBF,CAGA,GAA8B,cAA1B/D,KAAK6E,MAAM0I,MAAMC,OAAyBxN,KAAK6E,MAAM4I,OAASnB,EAAKpK,OAAS,EAAG,CACjF,MAAMwL,EAAQpB,EAAK,GACnBoB,EAAMC,MAAQD,EAAME,aAAe,QAEnC,IAAK,IAAI3C,EAAI,EAAGA,EAAIqB,EAAKpK,OAAQ+I,IAC/ByC,EAAMT,WAAaS,EAAMT,WAAWY,OAAOvB,EAAKrB,GAAGgC,YAGrD,MAAO,CAACS,EACV,CAEA,OAAOpB,CACT,CAEQgB,aACNR,EACAa,EACAG,EACAC,EACAd,EACAhD,EACAlG,GAEA,MAAMiK,EAAa/D,EAAQgE,EAAAA,GAAAA,OACrBC,EAAQlO,KAAK6E,MAAMsJ,YAAYR,IAAUM,EAAAA,GAAOD,GAEhD9J,EAAS,IAAIkK,EAAAA,EAAW,CAC5BnB,WAAYA,GAAc,GAC1BU,MAAOA,EACPO,MAAOpF,EAAAA,GAAAA,OAAAA,cAAAA,eAA2CoF,GAClDG,KAAMvB,EAAMhE,OAASgE,EAAMhE,OAAOuF,UAAO3L,EACzCoL,iBACAC,eAGF,GAAId,GAAcA,EAAW/K,OAAS,GAAK6B,EAAO,CAChD,MAAMuK,EAAOrB,EAAWA,EAAW/K,OAAS,GAAG,GACzCqM,EAAOxK,EAAMwK,KAEnB,GAAID,EAAOC,EAAKlB,WAAa,IAAO,CAEpBJ,EAAW,GAAG,GAChBsB,EAAKlB,WAAa,MAC5BnJ,EAAOsK,gBAAiB,EAE5B,CACF,CACA,OAAOtK,CACT,CAEAuK,kCACE,OAAQzO,KAAK6E,MAAM0I,MAAMC,MACvB,IAAK,OACHxN,KAAK6E,MAAM6J,MAAO,EAClB1O,KAAK6E,MAAM8J,OAAQ,EACnB3O,KAAK6E,MAAM+J,QAAS,EACpB5O,KAAK6E,MAAMgK,OAAOC,MAAO,EACzB9O,KAAK6E,MAAMkK,QAAQC,QAAS,EAC5BhP,KAAK6E,MAAM0I,MAAMJ,OAAS,GAC1B,MAEF,IAAK,SACHnN,KAAK6E,MAAM6J,MAAO,EAClB1O,KAAK6E,MAAM8J,OAAQ,EACnB3O,KAAK6E,MAAM+J,QAAS,EACpB5O,KAAK6E,MAAM4I,OAAQ,EACnBzN,KAAK6E,MAAMgK,OAAOC,MAAO,EACzB9O,KAAK6E,MAAMkK,QAAQC,QAAS,EAC5BhP,KAAK6E,MAAM0I,MAAMJ,OAAS,CAAC,SAC3B,MAEF,IAAK,YACHnN,KAAK6E,MAAM6J,MAAO,EAClB1O,KAAK6E,MAAM8J,OAAQ,EACnB3O,KAAK6E,MAAM+J,QAAS,EACpB5O,KAAK6E,MAAM4I,OAAQ,EACnBzN,KAAK6E,MAAMgK,OAAOC,MAAO,EACzB9O,KAAK6E,MAAMkK,QAAQC,QAAS,EAIlC,CAEAC,2BACE,GACO,WADCjP,KAAK6E,MAAM0I,MAAMC,UAAzB,CAEI,GAAuC,IAAnCxN,KAAK6E,MAAM0I,MAAMJ,OAAOjL,OAE1B,YADAlC,KAAK6E,MAAM0I,MAAMJ,OAAS,CAAC,UAI7B,MAAM+B,EAAelP,KAAKmP,qBAAqB,CAAC,IAC7BC,EAAAA,EAAAA,MAAKF,EAAc,CAAEzD,MAAOzL,KAAK6E,MAAM0I,MAAMJ,OAAO,OAErEnN,KAAK6E,MAAM0I,MAAMJ,OAAS,CAAC,SAG9B,CAEL,CAEAgC,qBAAqBnD,GACnB,MACO,WADChM,KAAK6E,MAAM0I,MAAMC,KAEd,CACL,CAAE6B,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,QAAS5D,MAAO,UAKvB,EACT,CAEA6D,UAAUC,EAAUC,GAClB,MAAMC,EAAgBD,EAASE,MAAM,KACrC,IAAIjE,EAAQ8D,EACZ,IAAK,IAAItE,EAAI,EAAGA,EAAIwE,EAAcvN,SAAU+I,EAAG,CAC7C,IAAIQ,EAAMgE,EAAcxE,IAGtB,OAFAQ,EAAQA,EAAMgE,EAAcxE,GAIhC,CACA,OAAOQ,CACT,E,qVC5KF,MAAMkE,EAA4C,CAACC,EAASnG,EAAOoG,KACjE,MAAMC,GAAWC,EAAAA,EAAAA,KACXC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAY,6EAEpBL,EAASM,OAAO,CACd,WACA,aACA,CAACC,EAAUC,KACT,MAAMC,EAAeV,EAAKW,aAAazL,OAAO0L,QACxCC,EAAWJ,EAAWK,MAAK,GACjCD,EAASjH,MAAQA,EACjBiH,EAASE,OAAS,KAChBL,EAAaM,UAAUpH,EAAM,EAG/B4G,EAASL,EAATK,CAAkBK,GAClBA,EAAS1J,UACT0J,EAASI,WAET,MAAMC,EAAO,IAAIC,IAAJ,CAAS,CACpBC,OAAQrB,EAAQ,GAChBI,QAASA,EACTkB,SAAU,gBACVC,QAAS,wCACTC,OAAQ,QACRC,gBAAiB,IACjBC,cAAe,CACbC,YAAa,CAAC,CAAEC,GAAI,SAAUC,KAAK,EAAMC,WAAY,YAIzDX,EAAKY,OAELZ,EAAK/L,GAAG,SAAS,KACf4M,YAAW,KACTb,EAAKc,SAAS,GACd,GACF,GAEJ,EACF,qCAEF,IAAIC,EAA+B,KAGnC,MAAMC,EAAuC,CAACnC,EAASnG,EAAOoG,KAC5D,MAAMU,EAAeV,EAAKW,aAAazL,OAAO0L,QAC1CF,EAAayB,WAGfF,EAA0BlC,GAK5BW,EAAa0B,eAEbH,EAA0BlC,EAG1BgC,YAAW,KACT,MAAM9B,GAAWC,EAAAA,EAAAA,KACXC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAY,qFAEpBL,EAASM,OAAO,CACd,WACA,aACA,CAACC,EAAUC,KACT,MAAM4B,EAAQ5B,EAAWK,MAAK,GAC9B,IAAII,EAEJmB,EAAMzI,MAAQA,EACdyI,EAAMC,UAAY5B,EAAa4B,UAC/BD,EAAME,MAAQ,KACZrB,EAAKqB,OAAO,EAGd/B,EAASL,EAATK,CAAkB6B,GAClBA,EAAMlL,UAEN+J,EAAO,IAAIC,IAAJ,CAAS,CACdC,OAAQa,EAAwB,GAChC9B,QAASA,EACTkB,SAAU,gBACVC,QAAS,kCACTC,OAAQ,QACRE,cAAe,CACbC,YAAa,CAAC,CAAEC,GAAI,SAAUC,KAAK,EAAMC,WAAY,YAIzDX,EAAKY,OACLpB,EAAa0B,eAEblB,EAAK/L,GAAG,SAAS,KAEf4M,YAAW,KACTrB,EAAa8B,eACbH,EAAMpB,WACNC,EAAKc,SAAS,GACd,GACF,GAEJ,GACD,KAAI,EACP,qCAsBK,MAAMS,EAUXvS,YACEwS,EACAC,EACAC,EACAC,EACAC,EACAC,EACA/K,EACAgL,GACA,uLACA7S,KAAK8S,QAAUP,EACfvS,KAAK+S,UAAYP,EACjBxS,KAAKgT,WAAaP,EAClBzS,KAAKiT,UAAYP,EACjB1S,KAAKkT,UAAY,CAAEP,OAAMC,OACzB5S,KAAKmT,OAAStL,EACd7H,KAAKoT,QAAUP,CACjB,CAEAhL,QACE,OAAO7H,KAAKmT,MACd,CACAN,SACE,OAAO7S,KAAKoT,OACd,CACAlC,WACE,OAAOlR,KAAKkT,SACd,CACAG,OACErT,KAAK+S,UAAU/S,KAAK8S,QACtB,CACAQ,QACEtT,KAAKgT,WAAWhT,KAAK8S,QACvB,CACAS,YACE,OAAOvT,KAAK8S,OACd,CACAU,OAAOtC,GACLlR,KAAKkT,UAAYhC,EACjBlR,KAAKiT,UAAUjT,KAAK8S,QAAS9S,KAAKkT,UACpC,EACD,qFAKM,MAAMO,EAOX1T,YAAYiM,EAAc0H,GAA8B,4GACtD1T,KAAK2T,SAAW3H,EAChBhM,KAAK4T,eAAiBF,EACtB1T,KAAK6T,SAAU,CACjB,CAEAC,SACE,OAAO9T,KAAK4T,cACd,CACApD,aACE,OAAOxQ,KAAK2T,QACd,CACAI,YACE,OAAO/T,KAAKgU,OACd,CACAC,WACE,OAAOjU,KAAK6T,OACd,CACAK,OACElU,KAAK6T,SAAU,CACjB,CACAM,SACEnU,KAAK6T,SAAU,CACjB,EACD,sCAKM,MAAMO,EAOXrU,YAAY8P,GAAW,uGACrB7P,KAAKqU,QAAU,GACfrU,KAAKsU,OAAS,GACdtU,KAAKuU,MAAQ1E,EACb7P,KAAKwU,eAAgB,CACvB,CAEAC,YACE,OAAOzU,KAAKqU,OACd,CAEAK,SAASC,GACP,OAAQ3U,KAAKsU,OAASK,CACxB,CAKAC,YAAY7P,GACV,MAAM8P,GAAQC,EAAAA,EAAAA,WAAU/P,EAAQ,YAC1BgQ,EAAUF,EAAM,GACtB9P,EAAS8P,EAAM,GAEfG,IAAAA,KAAOjQ,GAAQ,CAACkF,EAAOR,KACrB,MAAMwL,EAAK,IAAIxB,EAAYhK,EAAOzJ,KAAKkV,UAAUzL,IACjDzJ,KAAKqU,QAAQ9J,KAAK0K,EAAG,IAGvBD,IAAAA,KAAOD,GAAS,CAAC9K,EAAOR,KACtB,MAAM0L,EAAM,IAAI1B,EAAYhK,EAAOzJ,KAAKoV,aAAa3L,IACrDzJ,KAAKqU,QAAQ9J,KAAK4K,EAAI,IAGxBnV,KAAKqU,QAAQgB,MAAK,CAACC,EAAQC,KACzB,MAAMC,EAAKF,EAAE9E,aACXiF,EAAKF,EAAE/E,aACT,OAAIgF,EAAGE,IAAMD,EAAGC,IACP,EAELF,EAAGE,IAAMD,EAAGC,KACN,EAEH,CAAC,GAEZ,CAKAC,aAGEX,IAAAA,KAAOhV,KAAKqU,SAAS,CAACpK,EAAOR,KAC3B,MAAMuC,EAAUvC,EAAM+G,aAChBoF,EAAa5V,KAAK6V,YAAY7J,EAAQ0J,MAAQ1V,KAAK6V,YAAY7J,EAAQ8J,SACvEC,EAAc/V,KAAKgW,aAAahK,EAAQ0J,IAAK1J,EAAQ8J,UAEtDF,IAAcG,GAAiBtM,EAAMwK,WAGxCxK,EAAMqK,SAASP,YAAYW,OAF3BzK,EAAMqK,SAAST,MAGjB,GAEJ,CAKA4C,eACE,MAAMC,EAAIlW,KAAKuU,MAAM4B,gBACrB,IAAIxD,EACAC,EACJ,MAAMrF,EAAQvN,KAAKuU,MAAM6B,WAAWpW,KAAKuU,MAAM/D,aAAazL,OAAOwI,MAAQ,GAE3EyH,IAAAA,KAAOhV,KAAKqU,SAAS,CAACpK,EAAOR,KAC3BmJ,EAAMsD,EAAEtD,IAAM5S,KAAKuU,MAAM1B,SAAWpJ,EAAMqK,SAASjB,SACnDF,EAAOpF,EAAM8I,IAAI5M,EAAM+G,aAAakF,KAAOQ,EAAEvD,KAAOlJ,EAAMqK,SAASjM,QAAU,EAC7E4B,EAAMqK,SAASN,OAAO,CAAEZ,IAAKA,EAAKD,KAAMA,GAAO,GAEnD,CAKA2D,eACEtB,IAAAA,KAAOhV,KAAKqU,SAAS,CAACpK,EAAOsM,KAC3BA,EAAIzC,SAASR,OAAO,IAEtBtT,KAAKqU,QAAU,EACjB,CAKAa,UAAUzL,GAAqD,QAC7D,MAAM+M,EAAOxW,KAEPyW,EAAYzW,KAAKuU,MAAMmC,iBACvBR,EAAIlW,KAAKuU,MAAM4B,gBACf5I,EAAQvN,KAAKuU,MAAM6B,WAAWpW,KAAKuU,MAAM/D,aAAazL,OAAOwI,MAAQ,GAC3E,IAAIqF,EAAKD,EAAMzE,EAAOyI,EAAYC,EAAYC,EAAWC,EACrDC,EAGJ,MAAMC,EAAcvN,EAAMwN,UAKxB/I,EAHkB,OAAhBlO,KAAKsU,QAAoBtU,KAAKsU,OAAO0C,IAAiBhX,KAAKsU,OAAO0C,GAAa9I,MAGzElO,KAAKsU,OAAO0C,GAAa9I,MAFzB,OAQRyI,EAHkB,OAAhB3W,KAAKsU,QAAoBtU,KAAKsU,OAAO0C,IAAiBhX,KAAKsU,OAAO0C,GAAaL,WAGpE3W,KAAKsU,OAAO0C,GAAaL,WAFzB,EAQbC,EAHkB,OAAhB5W,KAAKsU,SAAoBtU,KAAKsU,OAAO0C,SAAwDtU,IAAxC1C,KAAKsU,OAAO0C,GAAaJ,YAGnE5W,KAAKsU,OAAO0C,GAAaJ,WAMtCG,EAHkB,OAAhB/W,KAAKsU,SAAoBtU,KAAKsU,OAAO0C,SAA2DtU,IAA3C1C,KAAKsU,OAAO0C,GAAaD,eAGhE/W,KAAKsU,OAAO0C,GAAaD,cAMzCF,EAHiB,MAAf7W,KAAKsU,QAAmBtU,KAAKsU,OAAO0C,IAAiBhX,KAAKsU,OAAO0C,GAAaH,UAGpE7W,KAAKsU,OAAO0C,GAAaH,UAAUK,cAFnC,SAQZJ,EAHiB,MAAf9W,KAAKsU,QAAmBtU,KAAKsU,OAAO0C,SAAuDtU,IAAvC1C,KAAKsU,OAAO0C,GAAaF,UAGnE9W,KAAKsU,OAAO0C,GAAaF,UAFzB,EAKd,IAAIK,EAAY5J,EAAMvB,QAAQoL,oBAAsB,EACpDD,GAAwB,EAExBvE,EAAMsD,EAAEtD,IAAM5S,KAAKuU,MAAM1B,SAAWsE,EACpCxE,EAAOpF,EAAM8I,IAAI5M,EAAMiM,KAAOQ,EAAEvD,KAEhC,MAAMzG,EAAO8I,IAAE,kDACZqC,IAAI,CACHnG,SAAU,WACVoG,QAAS,GACT3E,KAAMA,EAAO,KACbC,IAAK,EACL/K,MAAOiP,EAAY,KACnBjE,OAAQ7S,KAAKuU,MAAM1B,SAAuB,GAAZsE,EAC9B,oBAAqBL,EAAY,KACjC,oBAAqBD,EACrB,oBAAqB3I,EACrBA,MAAOA,IAERqJ,SAASd,GAEZ,GAAIG,EAAY,CACd,MAAMY,EAASxC,IAAE,qCAAqCqC,IAAI,CACxDnG,SAAU,WACVyB,MAAOgE,EAAac,KAAKC,MAAMZ,EAAY,GAAK,KAChD,YAAa,EACb,cAAe,EACfjP,MAAO,EACPgL,OAAQ,EACR,cAAe8D,EAAa,uBAC5B,eAAgBA,EAAa,yBAG/Ba,EAAOD,SAASrL,GAGdlM,KAAKsU,OAAO0C,IACZhX,KAAKsU,OAAO0C,GAAa9F,UAC2B,WAApDlR,KAAKsU,OAAO0C,GAAa9F,SAASyG,cAElCH,EAAOH,IAAI,CACTzE,IAAKA,EAAM+D,EAAa,EAAI,KAC5B,aAAc,OACd,gBAAiBA,EAAa,YAAczI,IAG9CsJ,EAAOH,IAAI,CACTzE,IAAK,MACL,aAAc+D,EAAa,YAAczI,EACzC,gBAAiB,SAIrBsJ,EAAOnU,KAAK,CACVoG,MAAOA,IAGT,MAAMmO,EAAa,WACjBjI,EAAuB6H,EAAQxC,IAAEhV,MAAMqD,KAAK,SAAUmT,EAAKjC,MAC7D,EAEI9K,EAAMoO,WACR9F,EAAkByF,EAAQ/N,EAAMoO,UAAWrB,EAAKjC,OAGlD,MAAMuD,EAAa,KACjBtB,EAAKjC,MAAMwD,gBAAgB,EAGzBhB,IACFS,EAAOH,IAAI,CAAEW,OAAQ,SACrBR,EAAOS,MAAML,EAAYE,GAE7B,CAsBA,OApBsB,IAAIxF,EACxBpG,GACA,SAAkBqD,GAChBA,EAAIT,MACN,IACCS,IACCA,EAAI2I,QAAQ,IAEd,CAAC3I,EAAU2B,KACT3B,EAAI8H,IAAI,CACNzE,IAAK1B,EAAS0B,IACdD,KAAMzB,EAASyB,MACf,GAEJA,EACAC,EACY,QADT,EACH1G,EAAKrE,eAAO,QAAI,EACH,QADI,EACjBqE,EAAK2G,gBAAQ,QAAI,EAIrB,CAKAuC,aAAa3L,GAAyE,QACpF,MAAM+M,EAAOxW,KAEPyW,EAAYzW,KAAKuU,MAAMmC,iBACvBR,EAAIlW,KAAKuU,MAAM4B,gBACf5I,EAAQvN,KAAKuU,MAAM6B,WAAWpW,KAAKuU,MAAM/D,aAAazL,OAAOwI,MAAQ,GAC3E,IAAIqF,EACFD,EACAmE,EACAqB,EACAtB,EACA3I,EACA6I,EAGF,MAAMC,EAAcvN,EAAMwN,UAKxB/I,EAHkB,OAAhBlO,KAAKsU,QAAoBtU,KAAKsU,OAAO0C,IAAiBhX,KAAKsU,OAAO0C,GAAa9I,MAGzElO,KAAKsU,OAAO0C,GAAa9I,MAFzB,OAQR6I,EAHkB,OAAhB/W,KAAKsU,SAAoBtU,KAAKsU,OAAO0C,SAA2DtU,IAA3C1C,KAAKsU,OAAO0C,GAAaD,eAGhE/W,KAAKsU,OAAO0C,GAAaD,cAMzCD,EAHiB,MAAf9W,KAAKsU,QAAmBtU,KAAKsU,OAAO0C,SAAuDtU,IAAvC1C,KAAKsU,OAAO0C,GAAaF,UAGnE9W,KAAKsU,OAAO0C,GAAaF,UAFzB,EAQZD,EAHiB,MAAf7W,KAAKsU,QAAmBtU,KAAKsU,OAAO0C,IAAiBhX,KAAKsU,OAAO0C,GAAaH,UAGpE7W,KAAKsU,OAAO0C,GAAaH,UAAUK,cAFnC,SAMdtE,EAAMsD,EAAEtD,IAAM5S,KAAKuU,MAAM1B,SADP,EAGlB,MAAMuF,EAAWX,KAAK/B,IAAIjM,EAAMiM,IAAKjM,EAAMqM,SACrCuC,EAASZ,KAAKa,IAAI7O,EAAMiM,IAAKjM,EAAMqM,SACzCnD,EAAOpF,EAAM8I,IAAI+B,GAAYlC,EAAEvD,KAC/B,MAAM4F,EAAQhL,EAAM8I,IAAIgC,GAAUnC,EAAEvD,MAE7B6F,EAAMC,GAAQ,CAACvC,EAAEvD,KAAMuD,EAAEvD,KAAO3S,KAAKuU,MAAM1M,SAC5C6Q,EAAcjB,KAAKa,IAAI3F,EAAM6F,GAGnCL,EAFkBV,KAAK/B,IAAI6C,EAAOE,GAERC,GADLH,EAAQE,EAAO,EAAI3B,IAGxC6B,EAAAA,EAAAA,MAAK,CAAChG,EAAM4F,IAASrH,IAEnB,GAAIsH,GAAQtH,GAAYA,EAAWuH,EAAM,CAC1BzD,IAAE,kDAAkDqC,IAAI,CACnEnG,SAAU,WACVoG,QAAS,GACT3E,KAAMzB,EAAW,KACjB0B,IAAK,EACL/K,MAAOiP,EAAY,KACnBjE,OAAQ7S,KAAKuU,MAAM1B,SAvBP,EAwBZ,oBAAqBiE,EAAY,KACjC,oBAAqBD,EACrB,oBAAqB3I,EACrBA,MAAOA,IAEJqJ,SAASd,EAChB,KAGF,MAAMmC,EAAS5D,IAAE,kEAAkEqC,IAAI,CACrFnG,SAAU,WACVoG,QAAS,GACT3E,KAAM+F,EAAc,KACpB9F,IAAKA,EACL/K,MAAOsQ,EAAc,KACrBtF,OAAQ,SACR,oBAAqB3E,EACrBA,MAAOA,EACP,mBAAoBA,IAEtB0K,EAAOrB,SAASd,GAEhBmC,EAAOvV,KAAK,CACVoG,MAAOA,IAGT,MAAMmO,EAAa,WACjBjI,EAAuBiJ,EAAQ5D,IAAEhV,MAAMqD,KAAK,SAAUmT,EAAKjC,MAC7D,EAEI9K,EAAMoO,WACR9F,EAAkB6G,EAAQnP,EAAMoO,UAAWrB,EAAKjC,OAGlD,MAAMuD,EAAa,KACjBtB,EAAKjC,MAAMwD,gBAAgB,EAGzBhB,IACF6B,EAAOvB,IAAI,CAAEW,OAAQ,SACrBY,EAAOX,MAAML,EAAYE,IAuB3B,OApBsB,IAAIxF,EACxBsG,GACA,SAAkBrJ,GAChBA,EAAIT,MACN,IACCS,IACCA,EAAI2I,QAAQ,IAEd,CAAC3I,EAAuD2B,KACtD3B,EAAI8H,IAAI,CACNzE,IAAK1B,EAAS0B,IACdD,KAAMzB,EAASyB,MACf,GAEJA,EACAC,EACc,QADX,EACHgG,EAAO/Q,eAAO,QAAI,EACH,QADI,EACnB+Q,EAAO/F,gBAAQ,QAAI,EAIvB,CAKAgD,YAAYgD,GACV,MAAMtL,EAAQvN,KAAKuU,MAAM6B,WAAWpW,KAAKuU,MAAM/D,aAAazL,OAAOwI,MAAQ,GACrEuL,EAAKvL,EAAM8I,IAAIwC,GACrB,OAAOC,EAAK,GAAKA,EAAKvL,EAAM8I,IAAI9I,EAAM+K,IACxC,CAKAtC,aAAa+C,EAAgBC,GAC3B,MAAMzL,EAAQvN,KAAKuU,MAAM6B,WAAWpW,KAAKuU,MAAM/D,aAAazL,OAAOwI,MAAQ,IACpE0L,EAAQC,GAAU,CAAC3L,EAAM8I,IAAI0C,GAASxL,EAAM8I,IAAI2C,KAChDG,EAAUC,GAAY,CAAC,EAAG7L,EAAM8I,IAAI9I,EAAM+K,MACjD,OAAOa,EAAWF,GAAUC,EAASE,CACvC,EAQK,SAASC,EAAgBxJ,GAC9B,MAAM2G,EAAOxW,KACPsZ,EAAe,IAAIlF,EAAavE,GAEtCA,EAAK4E,UAAY,IACR6E,EAAajF,QAGtBxE,EAAK0J,WAAa,KAChBvE,IAAAA,KAAOsE,EAAajF,SAAS,CAACpK,EAAOR,KACnCA,EAAMqK,SAASP,YAAYW,MAAM,GACjC,EAGJrE,EAAK2J,WAAa,KAChB3J,EAAK0J,aACLvE,IAAAA,KAAOsE,EAAajF,SAAS,CAACpK,EAAOR,KACnCA,EAAMyK,MAAM,IAGdsC,EAAK8C,aAAa3D,YAAY,EAIhC9F,EAAK4J,UAAa1U,IACZuU,EAAa9E,eACf8E,EAAa1E,YAAY7P,EAC3B,EAGF8K,EAAK6J,MAAMC,eAAepP,MAAK,CAACsF,EAAW7D,KAEd,MAAvBA,EAAQjH,OAAO1B,OACjBiW,EAAa9E,eAAgB,EAC/B,IAGF3E,EAAK6J,MAAMrG,KAAK9I,MAAMsF,IACpB,MAAM7D,EAAU6D,EAAKW,aAEjB8I,EAAa9E,gBAEX8E,EAAa7E,YAAYvS,OAAS,GACpCoX,EAAa5E,SAAS1I,EAAQjH,OAAO4P,OACrC2E,EAAa1E,YAAY5I,EAAQjH,OAAO1B,OAExCiW,EAAarD,gBAIjBqD,EAAa3D,YAAY,GAE7B,CA3DC,mBAsEDX,IAAAA,KAAAA,QAAAA,KAAoB,CAClBqE,KAAMA,EACNrN,QAX0B,CAC1BjH,OAAQ,CACN1B,KAAM,KACNsR,MAAO,KACPpH,MAAO,EACP2D,SAAU,WAOZlQ,KAAM,SACN4Y,QAAS,U,kaCxrBJ,MAAMC,EAAe,CAAC,MAAO,MAAO,MAAO,UAAW,SA2BtD,MAAMC,UAAmBC,EAAAA,cAS9Bha,YAAYia,GACV7W,MAAM6W,GAAO,uBAMCC,GAAWja,KAAKga,MAAME,aAAala,KAAKga,MAAM9V,OAAQ+V,KAAE,uBAEzD,KACb,MAAME,EAA6B,IAArBna,KAAKU,MAAMyZ,MAAc,EAAI,EACrCC,EAAO,CAAEzM,MAAO3N,KAAKga,MAAM9V,OAAOyJ,MAAOwM,MAAOA,GACtDna,KAAKqa,SAAS,CAAEF,MAAOA,IACvBna,KAAKga,MAAMM,aAAaF,EAAK,IAC9B,wBAEgBlM,IACflO,KAAKga,MAAMO,cAAcva,KAAKga,MAAM9V,OAAQgK,GAI5ClO,KAAKwa,aAAa,IAnBlBxa,KAAKU,MAAQ,CACXyZ,MAAOna,KAAKga,MAAM9V,OAAOiW,MAE7B,CAmBAM,qBACE,MAAM,OAAEvW,EAAM,QAAEwW,GAAY1a,KAAKga,MAC3BW,EAAmB,GACzB,IAAK,MAAMC,KAAaf,EAEtB,GAAI7Z,KAAKga,MAAMY,GAAY,CACzB,MAAMC,EAAiB3W,EAAO4W,YAAY5W,EAAO6W,MAAMH,IACvDD,EAAiBpQ,MACf,SAACyQ,EAAW,CAEVJ,UAAWA,EACXnP,MAAOoP,EACPH,QAASA,EACTO,aAAcjb,KAAKka,cAJdU,GAOX,CAEF,OAAOD,CACT,CAEA/P,SACE,MAAM,OAAE1G,EAAM,OAAEiJ,EAAM,QAAEuN,EAAO,OAAEQ,GAAWlb,KAAKga,MAC3CmB,EAAsBC,IAAW,CACrC,6BAA8BF,EAC9B,+BAAiD,IAAjBhX,EAAOiW,QAEnCkB,EAAalO,EAASnN,KAAKya,qBAAuB,GAClDa,GACJ,SAACC,EAAiB,CAChBC,MAAOtX,EAAOyJ,MACdO,MAAOhK,EAAOgK,MACdiM,MAAOna,KAAKU,MAAMyZ,MAClBD,aAAcla,KAAKka,aACnBK,cAAeva,KAAKua,cACpBD,aAActa,KAAKsa,eAIvB,OAAII,GAEA,gBAAIe,UAAY,uBAAsBN,IAAsB,WAC1D,eAAIO,KAAK,WAAU,UACjB,gBAAKD,UAAU,kCAAiC,SAAEH,MAEnDD,MAKH,iBAAKI,UAAY,uBAAsBN,IAAsB,UAC1DG,EACAD,IAIT,EACD,EA1FYvB,EAAU,eACC,CACpBY,SAAS,EACTQ,QAAQ,EACRhB,aAAc,OACdK,cAAe,OACfD,aAAc,SA6FlB,MAAMiB,UAA0BxB,EAAAA,cAM9BnP,SACE,MAAM,MAAE4Q,EAAK,MAAEtN,EAAK,MAAEiM,GAAUna,KAAKga,OAC/B,cAAEO,EAAa,aAAED,GAAiBta,KAAKga,MACvCE,EAAela,KAAKga,MAAME,aAAela,KAAKga,MAAME,aAAe,OAEzE,MAAO,EACL,SAACyB,EAAgB,CAEfzN,MAAOA,EACPiM,MAAOA,EACPI,cAAeA,EACfD,aAAcA,GAJV,SAMN,mBACEvR,KAAK,SACL0S,UAAU,6BACV1R,MAAOyR,EAEPI,QAAS1B,EACT,aAAY2B,EAAAA,GAAAA,WAAAA,OAAAA,cAAAA,MAAAA,OAAAA,gBAAuEL,GAAO,SAEzFA,GAJG,SAOV,EACD,EA/BKD,EAAiB,eACkC,CACrDpB,WAAOzX,EACPwX,aAAc,SAyClB,MAAMyB,UAAyB5B,EAAAA,cAA4D,0DAOxE7L,IACf,MAAM,cAAEqM,GAAkBva,KAAKga,MAC3BO,GACFA,EAAcrM,EAChB,GACD,CACDtD,SACE,OACE,SAAC,KAAiB,CAChBuP,MAAOna,KAAKga,MAAMG,MAClBjM,MAAOlO,KAAKga,MAAM9L,MAClB4N,SAAU9b,KAAKua,cACfD,aAActa,KAAKga,MAAMM,aACzByB,mBAAiB,WAEhB,QAAC,IAAEC,EAAG,gBAAEC,EAAe,gBAAEC,GAAiB,SACzC,SAACC,EAAA,EAAU,CACTjO,MAAOlO,KAAKga,MAAM9L,MAClB8N,IAAKA,EACLJ,QAASK,EACTG,aAAcF,EACdT,UAAU,qBACV,GAIV,EAUF,SAAST,EAAY,GAA+D,IAA/D,MAAEvP,EAAK,UAAEmP,EAAS,QAAEF,EAAO,aAAEO,GAAgC,EAChF,OAAIP,GAEA,eAAIgB,KAAK,WAAWD,UAAY,sBAAqBb,IAAagB,QAASX,EAAa,SACrFxP,KAKL,gBAAKgQ,UAAY,sBAAqBb,IAAagB,QAASX,EAAa,SACtExP,GAGP,C,wHAtBC,EAlCKkQ,EAAgB,eACkC,CACpDxB,WAAOzX,EACP6X,cAAe,OACfD,aAAc,SCpHX,MAAM+B,UAAoBtC,EAAAA,cAmB/Bha,YAAYia,GACV7W,MAAM6W,GAAO,yBAwBE,CAAC9V,EAAoBuF,KACpC,IAAKzJ,KAAKga,MAAMsC,eACd,OAGF,IAAIC,EAAe,OAAH,UAAQvc,KAAKU,MAAM6b,cAC/B9S,EAAM+S,SAAW/S,EAAMgT,SAAWhT,EAAMiT,SACtCH,EAAarY,EAAOyJ,cACf4O,EAAarY,EAAOyJ,OAE3B4O,EAAarY,EAAOyJ,QAAS,EAG/B4O,EAAevc,KAAK2c,0BAA0BzY,GAEhDlE,KAAKqa,SAAS,CAAEkC,aAAcA,IAC9Bvc,KAAKga,MAAMsC,eAAeC,EAAa,IAvCvCvc,KAAKU,MAAQ,CACX6b,aAAcvc,KAAKga,MAAMuC,aAE7B,CAEAK,aACE,IAAIC,EAA2B,IAAI7c,KAAKga,MAAM6C,aAAe,GAC7D,MAAMC,EAAS9c,KAAKga,MAAM3E,KAa1B,OAZIyH,GAAU9c,KAAKga,MAAM8C,IAAW9c,KAAKga,MAAM+C,eAC7CF,GAAaG,EAAAA,EAAAA,QAAQH,GAAa3Y,IAChC,IAAImR,EAAOnR,EAAO6W,MAAM+B,GAIxB,OAHa,OAATzH,IACFA,GAAQ4H,KAEH5H,CAAI,IAETrV,KAAKga,MAAMkD,WACbL,EAAaA,EAAWM,YAGrBN,CACT,CAqBAF,0BAA0BzY,GACxB,MAAMqY,EAAe,OAAH,UAAQvc,KAAKU,MAAM6b,cAEjCA,EAAarY,EAAOyJ,eACf4O,EAAarY,EAAOyJ,OA4B7B,OAxByB3N,KAAKga,MAAM6C,WAAWO,OAAO3R,GAChDA,EAAMkC,QAAUzJ,EAAOyJ,OAIpB4O,EAAa9Q,EAAMkC,SAK1B3N,KAAKga,MAAM6C,WAAWQ,SAAS5R,WACtB8Q,EAAa9Q,EAAMkC,MAAM,IAIlC3N,KAAKga,MAAM6C,WAAWQ,SAAS5R,IACzBA,EAAMkC,QAAUzJ,EAAOyJ,QAI3B4O,EAAa9Q,EAAMkC,QAAS,EAAI,IAI7B4O,CACT,CAEA3R,SACE,MAAM,cACJ0S,EAAa,UACbC,EAAS,UACTC,EAAS,KACTnI,EAAI,SACJ6H,EAAQ,UACRO,EAAS,SACTC,EAAQ,OACRvQ,EAAM,IACNuI,EAAG,IACH4C,EAAG,IACHqF,EAAG,QACHC,EAAO,MACPC,GACE7d,KAAKga,MACH8D,EAAoB,CAAE3Q,SAAQuI,MAAK4C,MAAKqF,MAAKC,UAASC,SACtDtB,EAAevc,KAAKU,MAAM6b,aAC1BwB,EAAkB,CAAEN,YAAWC,YAC/BM,EAAY,CAAE3I,OAAM6H,YACpBL,EAAa7c,KAAK4c,aAAaqB,QAAQ/Z,IAAYA,EAAOga,eAAeH,KACzEI,EAAe,GAAEne,KAAKga,MAAM+C,aAAe,qBAAuB,MAAMO,IAMxEc,EAAmC,CACvCC,SAHiBd,GAAaC,EAAYA,OAAY9a,EAItDmF,MAHmB0V,GAAaC,EAAYA,EAAY,OAAI9a,GAMxD4b,EAAoC,OAAH,QACrCzB,WAAYA,EACZN,aAAcA,EACdD,eAAgBtc,KAAKsc,eACrBhC,aAActa,KAAKga,MAAMM,aACzBiE,aAAcve,KAAKga,MAAMuE,aACzBhE,cAAeva,KAAKga,MAAMO,eACvBuD,EACAE,GAGL,OACE,gBAAKvC,UAAY,wBAAuB0C,IAAeK,MAAOJ,EAAY,SACvEpe,KAAKga,MAAM+C,cAAe,SAAC0B,EAAW,iBAAKH,KAAkB,SAACI,EAAgB,iBAAKJ,KAG1F,EACD,EAnJYjC,EAAW,eAC2B,CAC/ClP,QAAQ,EACRuI,KAAK,EACL4C,KAAK,EACLqF,KAAK,EACLC,SAAS,EACTC,OAAO,EACPd,cAAc,EACdQ,WAAW,EACXlI,UAAM3S,EACNwa,UAAU,EACVI,cAAe,GACfhB,eAAgB,OAChBiC,aAAc,OACdjE,aAAc,OACdC,cAAe,SAqInB,MAAMmE,UAAyB3E,EAAAA,cAC7BnP,SACE,MAAM,WAAEiS,EAAU,aAAEN,EAAY,OAAEpP,EAAM,IAAEuI,EAAG,IAAE4C,EAAG,IAAEqF,EAAG,QAAEC,EAAO,MAAEC,GAAU7d,KAAKga,MAC3E8D,EAAoB,CAAE3Q,SAAQuI,MAAK4C,MAAKqF,MAAKC,UAASC,SAC5D,OAAOhB,EAAWzY,KAAI,CAACF,EAAQ+G,KAC7B,SAAC6O,EAEC,eAEA5V,OAAQA,EACRgX,OAAQqB,EAAarY,EAAOyJ,QACxBmQ,EAAiB,CACrB5D,aAAcla,KAAKga,MAAMsC,eACzB/B,cAAeva,KAAKga,MAAMO,cAC1BD,aAActa,KAAKga,MAAMM,eANnB,GAAEpW,EAAOqD,MAAM0D,MAS3B,EAGF,MAAMwT,UAAoB1E,EAAAA,cAA6C,yDACrD4E,IACd,IAAK3e,KAAKga,MAAMuE,aACd,OAGF,IAAIrB,EAAWld,KAAKga,MAAMkD,SACtBJ,EAAS9c,KAAKga,MAAM3E,KACpBsJ,IAAS7B,IACXI,OAAWxa,IAII,IAAbwa,GACFJ,OAASpa,EACTwa,OAAWxa,IAEXwa,GAAYA,EACZJ,EAAS6B,GAEX3e,KAAKga,MAAMuE,aAAazB,EAAQI,EAAS,GAC1C,CAEDtS,SACE,MAAMiS,EAAa7c,KAAKga,MAAM6C,YACxB,OAAE1P,EAAM,IAAEuI,EAAG,IAAE4C,EAAG,IAAEqF,EAAG,QAAEC,EAAO,MAAEC,EAAK,KAAExI,EAAI,SAAE6H,EAAQ,aAAEX,GAAiBvc,KAAKga,MAC/E8D,EAAyB,CAAE3Q,SAAQuI,MAAK4C,MAAKqF,MAAKC,UAASC,SAEjE,OAAKhB,GAKH,mBAAOnB,KAAK,OAAM,WAChB,+BACE,gBAAK8C,MAAO,CAAE3W,MAAO,aAEvB,4BACE,2BACE,eAAI2W,MAAO,CAAEI,UAAW,UACvB/E,EAAazV,KACXya,GACCf,EAAkBe,KAChB,SAACC,GAAqB,CAEpBD,SAAUA,EACVxJ,KAAMA,EACN6H,SAAUA,EACVtB,QAAS5b,KAAKue,cAJTM,WAUjB,2BACGhC,GACCA,EAAWzY,KAAI,CAACF,EAAQ+G,KACtB,SAAC6O,EAAU,eAETY,SAAS,EACTxW,OAAQA,EACRgX,OAAQqB,EAAarY,EAAOyJ,OAC5BuM,aAAcla,KAAKga,MAAMsC,eACzB/B,cAAeva,KAAKga,MAAMO,cAC1BD,aAActa,KAAKga,MAAMM,cACrBwD,GAPE,GAAE5Z,EAAOqD,MAAM0D,YA7BxB,IA0CX,EAQF,MAAM6T,WAA8B/E,EAAAA,cAAwD,oDAChF,KACJ/Z,KAAKga,MAAM4B,SACb5b,KAAKga,MAAM4B,QAAQ5b,KAAKga,MAAM6E,SAChC,GACD,CAEDjU,SACE,MAAM,SAAEiU,EAAQ,KAAExJ,EAAI,SAAE6H,GAAald,KAAKga,MAC1C,OACE,gBAAIyB,UAAU,UAAUG,QAAS5b,KAAK4b,QAAQ,UAC3CiD,EACAxJ,IAASwJ,IAAY,SAACE,EAAA,EAAI,CAAC/d,KAAMkc,EAAW,aAAe,eAGlE,EAGK,MAAM8B,WAAejF,EAAAA,cAC1BnP,SACE,OACE,SAACqU,EAAA,EAAe,CAACC,qBAAmB,YAClC,SAAC7C,EAAW,iBAAKrc,KAAKga,SAG5B,EC7UK,SAASmF,GAAYC,EAAYC,GACtC,GAAIC,MAAMD,KAoGa,KADCE,EAnGcH,GAoG1Bld,SAAgBsd,GAAiBD,EAAK,MAAOC,GAAiBD,EAAK,KAnG7E,OAkGJ,IAA0BA,EA/FxB,MAAOE,EAAOC,GAAUN,GAoE1B,SAAyBK,EAAqCC,EAAsCL,GACpF,IAAVA,IACFI,EAAM/J,KAAO2J,EACbI,EAAMnH,KAAO+G,EACbK,EAAOhK,KAAO2J,EACdK,EAAOpH,KAAO+G,EAElB,CA1EEM,CAAgBF,EAAOC,EAAQL,GAsDjC,SAA2BI,EAAqCC,GAE9D,MAAME,EAAa,IACfH,EAAMnH,MAAQmH,EAAM/J,MACtB+J,EAAM/J,KAAOkK,EACbH,EAAMnH,KAAOsH,GAEXF,EAAOpH,MAAQoH,EAAOhK,MACxBgK,EAAOhK,KAAOkK,EACdF,EAAOpH,KAAOsH,EAElB,CA/DEC,CAAkBJ,EAAOC,GAGzB,MAAMI,EAAqB,IAAdL,EAAM/J,KAA4B,IAAfgK,EAAOhK,KAA2B,IAAd+J,EAAMnH,KAA4B,IAAfoH,EAAOpH,IAExEyH,EAAUC,GAAaP,EAAOC,GAEpC,GAAII,GAAQC,EACVN,EAAM/J,IAAM+J,EAAMnH,IAAM,EAAI,EAAImH,EAAM/J,IACtC+J,EAAMnH,IAAMmH,EAAMnH,IAAM,EAAImH,EAAMnH,IAAM,EACxCoH,EAAOhK,IAAMgK,EAAOpH,IAAM,EAAI,EAAIoH,EAAOhK,IACzCgK,EAAOpH,IAAMoH,EAAOpH,IAAM,EAAIoH,EAAOpH,IAAM,OAE3C,GAiGJ,SAA4BmH,EAAiBC,GAE3C,OAAQD,EAAM/J,KAAO,GAAKgK,EAAOpH,KAAO,GAAOmH,EAAMnH,KAAO,GAAKoH,EAAOhK,KAAO,CACjF,CApGQuK,CAAmBR,EAAOC,GACxBD,EAAM/J,KAAO,GACf+J,EAAM/J,KAAO+J,EAAMnH,IACnBoH,EAAOpH,KAAOoH,EAAOhK,MAErB+J,EAAMnH,KAAOmH,EAAM/J,IACnBgK,EAAOhK,KAAOgK,EAAOpH,SAElB,CACL,MAAM4H,EA6FZ,SAAiBT,EAAiBC,GAChC,GAAIS,GAAcV,EAAOC,GAAS,CAChC,MAAMU,EAAWV,EAAOhK,IAAM+J,EAAM/J,IAAMgK,EAAOhK,IAAM,EACjD2K,EAAYX,EAAOpH,IAAMmH,EAAMnH,IAAMoH,EAAOpH,IAAM,EAExD,OAAO8H,EAAWC,EAAYD,EAAWC,CAC3C,CAEA,GAAIL,GAAaP,EAAOC,GAAS,CAC/B,MAAMY,EAAa7I,KAAK8I,IAAId,EAAM/J,KAC5B8K,EAAa/I,KAAK8I,IAAId,EAAMnH,KAC5BmI,EAAchJ,KAAK8I,IAAIb,EAAOhK,KAC9BgL,EAAcjJ,KAAK8I,IAAIb,EAAOpH,KAC9BqI,EAASlJ,KAAKa,IAAIgI,EAAYE,GAC9BI,EAAWnJ,KAAK/B,IAAI4K,EAAYE,GAChCK,EAAUpJ,KAAKa,IAAImI,EAAaC,GAChCI,EAAYrJ,KAAK/B,IAAI+K,EAAaC,GAElCN,EAAwB,IAAbQ,EAAiBD,EAASC,EAAWD,EAChDN,EAA0B,IAAdS,EAAkBD,EAAUC,EAAYD,EAE1D,OAAOT,EAAWC,EAAYD,EAAWC,CAC3C,CAEA,OAAIZ,EAAM/J,IAAM,GAAKgK,EAAOhK,IAAM,EACzB+J,EAAMnH,IAAMoH,EAAOpH,IAEnBmH,EAAM/J,IAAMgK,EAAOhK,GAE9B,CA1HmBqL,CAAQtB,EAAOC,GAExBK,EAEEN,EAAM/J,IAAM,GACd+J,EAAM/J,IAAM+J,EAAMnH,IAAM4H,EACxBR,EAAOhK,IAAMgK,EAAOpH,IAAM4H,IAE1BT,EAAMnH,IAAMmH,EAAM/J,IAAMwK,EACxBR,EAAOpH,IAAMoH,EAAOhK,IAAMwK,GAGxBC,GAAcV,EAAOC,IACvBD,EAAM/J,IAAMgK,EAAOhK,IAAMgK,EAAOhK,IAAMwK,EAAOT,EAAM/J,IACnDgK,EAAOhK,IAAM+J,EAAM/J,IAAM+J,EAAM/J,IAAMwK,EAAOR,EAAOhK,IACnD+J,EAAMnH,IAAMoH,EAAOpH,IAAMoH,EAAOpH,IAAM4H,EAAOT,EAAMnH,IACnDoH,EAAOpH,IAAMmH,EAAMnH,IAAMmH,EAAMnH,IAAM4H,EAAOR,EAAOpH,MAEnDmH,EAAM/J,IAAM+J,EAAM/J,IAAM,EAAIgK,EAAOhK,IAAMwK,EAAOT,EAAM/J,IACtDgK,EAAOhK,IAAMgK,EAAOhK,IAAM,EAAI+J,EAAM/J,IAAMwK,EAAOR,EAAOhK,IACxD+J,EAAMnH,IAAMmH,EAAMnH,IAAM,EAAIoH,EAAOpH,IAAM4H,EAAOT,EAAMnH,IACtDoH,EAAOpH,IAAMoH,EAAOpH,IAAM,EAAImH,EAAMnH,IAAM4H,EAAOR,EAAOpH,IAG9D,EA4BJ,SACEmH,EACAC,EACAL,GAEc,IAAVA,IACFI,EAAM/J,KAAO2J,EACbI,EAAMnH,KAAO+G,EACbK,EAAOhK,KAAO2J,EACdK,EAAOpH,KAAO+G,EAElB,CApCE2B,CAAqBvB,EAAOC,EAAQL,EACtC,CA8CA,SAASG,GAAiByB,GACxB,MAAO,QAASA,GAAQ,QAASA,CACnC,CAEA,SAASjB,GAAaP,EAAiBC,GAErC,OAAQD,EAAM/J,KAAO,GAAKgK,EAAOhK,KAAO,GAAO+J,EAAMnH,KAAO,GAAKoH,EAAOpH,KAAO,CACjF,CAEA,SAAS6H,GAAcV,EAAiBC,GAEtC,OAAOD,EAAM/J,KAAO,GAAK+J,EAAMnH,KAAO,GAAKoH,EAAOhK,KAAO,GAAKgK,EAAOpH,KAAO,CAC9E,C,gKC3GO,MAAM4I,GAIXnhB,YAAoBoS,GAA6B,gBAHjB,MAAI,sBACvB,GAAK,KAEEA,UAAAA,CAA8B,CAElDE,eACErS,KAAKyJ,MAAQ,KACbzJ,KAAKgS,YAAa,EAClBhS,KAAKmS,UAAUvH,QACjB,CAEAqH,eACEjS,KAAKgS,YAAa,CACpB,CAEAmP,WAAWpd,GACJ/D,KAAKyJ,QACRzJ,KAAKyJ,MAAQ,CAAC,EACdzJ,KAAKyJ,MAAM2X,aAAephB,KAAKmS,UAAU1K,UAAU4Z,IACnDrhB,KAAKyJ,MAAMnC,QAAUtH,KAAKmS,UAAUtN,MAAM0C,IAI5CvH,KAAKyJ,MAAM6X,KAAOvd,EAAMwK,KACxBvO,KAAKyJ,MAAM8X,UAAW,EAElBxd,EAAMyN,KACRxR,KAAKyJ,MAAMqM,QAAU/R,EAAMyN,GAC3BxR,KAAKyJ,MAAM8X,UAAW,GAGxBvhB,KAAKmS,UAAUvH,QACjB,CAEAiG,UAAUpH,EAAwB+X,GAChCxhB,KAAKyJ,MAAQA,EACbzJ,KAAKmS,UAAUvH,QACjB,CAEA6W,cAAcC,EAAkBC,GAC9B,IAAK3hB,KAAKyJ,OAAgC,IAAvBiY,EAAYxf,OAC7B,OAGF,MAAMyS,EAAa,CACjBiN,YAAa,CACX1T,MAAO2T,GAAAA,GACP3Q,SAAU,SACVyF,WAAY,GAEdmL,MAAO,CACL5T,MAAO6T,GAAAA,GACP7Q,SAAU,SACVyF,WAAY,GAEdqL,WAAY,CACV9T,MAAO+T,GAAAA,GACP/Q,SAAU,SACVyF,WAAY,GAEduL,WAAY,CACVhU,MAAOiU,GAAAA,GACPjR,SAAU,SACVyF,WAAY,GAEdyL,WAAY,CACVlU,MAAOmU,GAAAA,GACPnR,SAAU,SACVyF,WAAY,IAIhB,GAAI3W,KAAKyJ,MAELiY,EADE1hB,KAAKyJ,MAAM8X,SACC,CACZ,CACEA,UAAU,EACV7L,IAAK1V,KAAKyJ,MAAM6X,KAChBxL,QAAS9V,KAAKyJ,MAAMqM,QACpBzG,KAAMrP,KAAKyJ,MAAM4F,KACjB4H,UAAW,aACXY,UAAW7X,KAAKyJ,QAIN,CACZ,CACEiM,IAAK1V,KAAKyJ,MAAM6X,KAChBjS,KAAMrP,KAAKyJ,MAAM4F,KACjBwI,UAAW7X,KAAKyJ,MAChBwN,UAAW,oBAMjB,IAAK,IAAIhM,EAAI,EAAGA,EAAIyW,EAAYxf,OAAQ+I,IAAK,CAC3C,MAAMqX,EAAOZ,EAAYzW,GAGzBqX,EAAK5M,IAAM4M,EAAKhB,KAChBgB,EAAKhK,IAAMgK,EAAKhB,KAChBgB,EAAKrL,UAAYqL,EAAKvZ,KAElBuZ,EAAKC,SACPD,EAAKrL,UAAY,MAAQqL,EAAKC,SAI3B5N,EAAM2N,EAAKvZ,QACd4L,EAAM2N,EAAKvZ,MAAQ,CACjBmF,MAAOoU,EAAKpU,MACZgD,SAAU,SACVyF,WAAY,GAGlB,CAGF,MAAM5B,EAiBV,SAAoBhQ,GAClB,OAAOkZ,EAAAA,EAAAA,QAAOlZ,EAAQ,WACxB,CAnBoByd,CAAWd,IAqB/B,SAA0B3M,EAAgB4M,GACxC,MAAMc,EAAWd,EAAYe,KAAKD,SAC5BE,EAAeN,GAAAA,GACrB,IAAIO,GAEJjK,EAAAA,EAAAA,MAAK5D,GAAU6D,IAEXgK,EADEhK,EAAOiK,QACGjK,EAAO1K,OAEPyU,EAGdC,EAQJ,SAAuBE,EAAqBC,GAC1C,MAAM7U,EAAQ8U,KAAUF,GACxB,OAAI5U,EAAM+U,WACR/U,EAAMgV,SAASH,GACR7U,EAAMiV,eAENL,CAEX,CAhBgBM,CAAcR,EAAWS,GAAAA,IACrCZ,EAASlY,KAAK,CACZgD,MAAO,CAAEgB,KAAMqK,EAAOlD,IAAKlE,GAAIoH,EAAO9C,SACtC5H,MAAO0U,GACP,GAEN,CAtCIU,CAAiBvO,EAAS4M,GAI1BA,EAAYe,KAAKtL,mBADU,EAE3BuK,EAAYpU,MAAM6J,mBAHS,GAK3BuK,EAAY5c,OAAS,CACnBwe,QAAQ9gB,EAAAA,EAAAA,MAAKkS,GAAOzS,OAAS,EAC7BmB,KAAMqe,EACN/M,MAAOA,EACPlE,QAASzQ,KAEb,E,wCCxIa,SAASwjB,GAAwBhC,EAAW/Z,EAAgByK,EAAYuR,GACrF,MAAM3iB,EAAOd,KAEP6E,EADOqN,EAAMwR,KACA7e,MACb8e,EAAa,IAAIC,EAAAA,GAAsB,CAAEC,IAAK,CAAC,EAAGC,MAAO,CAAC,EAAGjf,MAAO7E,KAAK6E,QAEzEkf,EAAW/O,IAAE,+BAEnBhV,KAAK6R,QAAU,KACbkS,EAAS7L,QAAQ,EAGnBlY,KAAKgkB,6BAA+B,CAACC,EAAc/f,EAAaoK,KAC9D,MAAM4V,EAAKhgB,EAAO+I,WAAWkX,UACvBC,EAAU9V,EAAO4V,EACjBG,EAAMngB,EAAO+I,WAAW2B,OAAO1M,OACrC,IAAI0K,EACJ,IAAKA,EAAIwX,EAASxX,EAAIyX,EAAKzX,GAAKsX,EAE9B,IACIhgB,EAAOyK,MAAM2V,OAA8C,MAArCpgB,EAAO+I,WAAW2B,OAAOwV,IAAmD,MAA/BlgB,EAAO+I,WAAW2B,OAAOhC,IAE9F1I,EAAO+I,WAAW2B,OAAOhC,GAAKqX,EAE9B,OAAOxM,KAAKa,IAAI1L,EAAIsX,EAAI,GAAKA,EAGjC,OAAOtX,EAAIsX,EAAK,CAAC,EAGnBlkB,KAAKukB,uBAAyB,CAACN,EAAW/f,KACxC,IAEIsgB,EAFAC,EAAQ,EACRC,EAAQxgB,EAAOb,KAAKnB,OAAS,EAEjC,OAAa,CACX,GAAIuiB,EAAQC,EACV,OAAOjN,KAAKa,IAAIoM,EAAO,GAGzB,GADAF,EAAS/M,KAAKkN,OAAOF,EAAQC,GAAS,GAClCxgB,EAAOb,KAAKmhB,GAAQ,KAAOP,EAC7B,OAAOO,EACEtgB,EAAOb,KAAKmhB,GAAQ,GAAKP,EAClCQ,EAAQD,EAAS,EAEjBE,EAAQF,EAAS,CAErB,GAGFxkB,KAAK4kB,cAAgB,CAACC,EAAsBC,EAAmBjB,EAAoCkB,KACnF,SAAVA,IACFD,EAAY,mCAAqCD,EAAe,SAAWC,GAE7Ef,EAASiB,KAAKF,GAAWG,SAASpB,EAAIqB,MAAOrB,EAAIsB,MAAO,CAAEC,OAAQ,IAAK,EAGzEplB,KAAKqlB,4BAA8B,SAAUxI,EAAmBgH,GAC9D,IAAIpY,EAAOR,EAAG/G,EAAQohB,EAAYC,EAAeC,EAAWrL,EAOxDsL,EAAaC,EALbC,EAAe,CAAC,GAAI,GAAI,IAGxBC,EAAY,EAIhB,IAAK3a,EAAI,EAAGA,EAAI4R,EAAW3a,OAAQ+I,IACjC/G,EAAS2Y,EAAW5R,IAEf/G,EAAOb,KAAKnB,QAAW2C,EAAMgK,OAAO4O,WAAavZ,EAAO2hB,YAMxD3hB,EAAOb,KAAKnB,QAAW2C,EAAMgK,OAAO6O,UAAYxZ,EAAO4hB,WAMxD5hB,EAAO6hB,YAVTJ,EAAQ,GAAGpb,KAAK,CAAE2Q,QAAQ,EAAMzP,MAAO,KAezC6Z,EAAatlB,KAAKukB,uBAAuBV,EAAIhL,EAAG3U,GAChDqhB,EAAgB1B,EAAIhL,EAAI3U,EAAOb,KAAKiiB,GAAY,GAChDE,EAAYthB,EAAOb,KAAKiiB,GAAY,KAIjCG,GACAF,GAAiB,IAAMA,EAAgBE,GAAeA,EAAc,IACpEF,EAAgB,GAAKA,EAAgBE,KAEtCA,EAAcF,EACdG,EAAUF,GAGZ/Z,EAAQvH,EAAOb,KAAKiiB,GAAY,GAE5BphB,EAAOuJ,OAAmB,OAAVhC,GAA+C,eAA7B5G,EAAMkK,QAAQiX,aAClDJ,GAAana,EACbA,EAAQma,IAIN1hB,EAAOyK,MAAM2V,OAASpgB,EAAOuJ,SAI/B6X,EAAatlB,KAAKgkB,6BAA6BH,EAAIhL,EAAG3U,EAAQohB,IAIhEnL,EAAQ,EACJjW,EAAOiW,QACTA,EAAQjW,EAAOiW,MAAM8L,GAGvBN,EAAQxL,GAAO5P,KAAK,CAClBkB,MAAOA,EACP6Z,WAAYA,EACZpX,MAAOhK,EAAOgK,MACdsN,MAAOtX,EAAO0J,aACd0T,KAAMkE,EACNU,SAAUX,EACVtb,MAAOgB,KAUX,OALA0a,EAAUA,EAAQ,GAAG9X,OAAO8X,EAAQ,GAAIA,EAAQ,IAGhDA,EAAQrE,KAAOoE,EAERC,CACT,EAEAnE,EAAK1J,YAAW,KAAM,MACpB,GAAiB,QAAjB,EAAIjT,EAAMkK,eAAO,OAAb,EAAeC,OAAQ,CACzB,MAAMa,EAAO2R,EAAKne,OAAOwM,KACrBA,IACFkU,EAASoC,SACTtW,EAAKuW,cAET,CACA3e,EAAU1C,OAAOshB,QAAQ,IAAIC,EAAAA,IAC7B7e,EAAU1C,OAAOshB,QAAQ,IAAIE,EAAAA,GAAsB,IAGrD/E,EAAKrc,KAAK,aAAa,CAACsE,EAAYoa,EAA2CvB,KAC7ExhB,EAAKgO,KAAK+U,EAAKvB,GAGV7a,EAAU+e,cACb3C,EAAI4C,WAAa5C,EAAIsB,MAAQ3D,EAAK4D,SAASxS,KAAO4O,EAAK3O,SACvD8Q,EAAWja,QAAQma,IAAMA,EACzBF,EAAWja,QAAQ7E,MAAQA,EAC3B8e,EAAWja,QAAQoa,MAAY,KAAKD,EAAYhL,EAChDpR,EAAU1C,OAAOshB,QAAQ1C,GAC3B,IAGFnC,EAAKrc,KAAK,aAAa,CAACsE,EAAYoa,EAAUvB,KAC5CoE,EAAAA,GAAAA,KAAeC,GAAAA,GAAAA,GAAyB,CAAE9C,IAAKA,EAAKhf,MAAOA,EAAOyd,KAAMA,GAAO,IAGjFd,EAAKrc,KAAK,aAAa,KACrB,IAAKN,EAAMkK,QAAQC,OACjB,OAGF,MAAMa,EAAO2R,EAAKne,OAAOwM,KACrBA,IACFkU,EAASoC,SACTtW,EAAKuW,cACP,IAGFpmB,KAAKsT,MAASzD,IACZkU,EAASoC,SACTtW,EAAK+W,iBACL/W,EAAKuW,aAAa,EAGpBpmB,KAAK8O,KAAO,CAAC+U,EAAUvB,KACrB,MAAMzS,EAAO2R,EAAKne,OAAOwM,KACnBgX,EAAWhX,EAAKpK,UAEhBsf,EADQlV,EAAKuG,WACC,GAAGpK,QAAQwB,KACzBqP,EAAa4G,IACnB,IACIqD,EAAOrb,EAAOoZ,EAAckC,EAAW9b,EAAG/G,EAAQ8iB,EAAYC,EAD9DC,EAAgBriB,EAAMkK,QAAQC,OAKlC,GAAI6U,EAAI4C,UAAW,OACjB,MAAMU,EAActX,EAAKsX,YAAY,CAAEtO,EAAGgL,EAAIhL,IAC9C,GAAIuO,OAAO9H,MAAM6H,EAAYxU,OAASwU,EAAYxU,KAAO,GAAKwU,EAAYxU,KAAO6O,EAAK3Z,QAEpF,YADA/G,EAAKwS,MAAMzD,GAIbgU,EAAIqB,MAAQ1D,EAAK4D,SAASzS,KAAOwU,EAAYxU,KAC7CkR,EAAIsB,MAAQ3D,EAAK4D,SAASxS,IAAM4O,EAAK3O,SAAWgR,EAAI4C,UAEpD,MAAMY,EAAiC,QAAxB,EAAGrS,IAAE7T,QAAQkmB,mBAAW,QAAI,EAG3C,KAFkBxD,EAAIsB,OAASkC,GAAaxD,EAAIsB,OAASnQ,IAAE7T,QAAQmmB,cAAiBD,GAIlF,YADAvmB,EAAKwS,MAAMzD,GAOb,GAHAA,EAAK0X,aAAa1D,GAClBqD,GAAgB,EAEZzf,EAAU+f,0BAEZ,MAEJ,CAEA,GAA0B,IAAtB3K,EAAW3a,OAUf,GALE+kB,EADEpK,EAAW,GAAG4K,gBACAC,GAAAA,GAAAA,WAEAA,GAAAA,GAAAA,SAGdR,EAAe,CACjBrX,EAAKuW,cAEL,MAAMuB,EAAkB7mB,EAAKukB,4BAA4BwB,EAAUhD,GAkBnE,IAhBAmD,EAAa,GAEbnC,EAAepd,EAAUmgB,WAAWD,EAAgBrG,KAAM2F,GAI/B,IAAvBpiB,EAAMkK,QAAQsG,KAChBsS,EAAgBtS,MAAK,CAACC,EAAsBC,IACnCA,EAAE9J,MAAQ6J,EAAE7J,QAEW,IAAvB5G,EAAMkK,QAAQsG,MACvBsS,EAAgBtS,MAAK,CAACC,EAAsBC,IACnCD,EAAE7J,MAAQ8J,EAAE9J,QAIlBR,EAAI,EAAGA,EAAI0c,EAAgBzlB,OAAQ+I,IAAK,CAG3C,GAFA8b,EAAYY,EAAgB1c,GAExB8b,EAAU7L,OACZ,SAGF,IAAI2M,EAAiB,GACjBvF,GAAQyE,EAAU9c,QAAUqY,EAAKwF,cACnCD,EAAiB,sCAGnB3jB,EAAS2Y,EAAWkK,EAAU9c,OAC9BwB,EAAQsc,GAAAA,GAAAA,SAAkB7jB,EAAO4W,YAAYiM,EAAUtb,QAKvDub,GACE,uCAAyCa,EAAiB,4CAC5Db,GAAc,uCALAe,GAAAA,GAAAA,SAAkBhB,EAAU7Y,OAKqB,WAJjD6Z,GAAAA,GAAAA,SAAkBhB,EAAUvL,OAI0C,UACpFwL,GAAc,oCAAsCvb,EAAQ,eAC5DoE,EAAKmY,UAAUjB,EAAU9c,MAAO8c,EAAUzB,WAC5C,CAEAxkB,EAAK8jB,cAAcC,EAAcmC,EAAYnD,EAAKkB,EACpD,MAAO,GAAIzC,EAAM,CAEf,MAAMpU,EAAQ6Z,GAAAA,GAAAA,SAAkBzF,EAAKpe,OAAOgK,OAC5ChK,EAAS2Y,EAAWyF,EAAKwF,aACzBhB,EAAQ,+EACRA,GAAS,uCAAyC5Y,EAAQ,WAAahK,EAAO0J,aAAe,UAG3FnC,EADE5G,EAAM4I,OAAsC,eAA7B5I,EAAMkK,QAAQiX,WACvB1D,EAAK2F,UAAU,GAAK3F,EAAK2F,UAAU,GAEnC3F,EAAK2F,UAAU,GAGzBxc,EAAQsc,GAAAA,GAAAA,SAAkB7jB,EAAO4W,YAAYrP,IAC7CoZ,EAAepd,EAAUmgB,WAAWtF,EAAK2F,UAAU,GAAIhB,GAEvDH,GAAS,oCAAsCrb,EAAQ,SAEvD3K,EAAK8jB,cAAcC,EAAciC,EAAOjD,EAAKkB,EAC/C,MAEEhB,EAASoC,QACX,CAEJ,C,gBC7QO,SAAS+B,GACd7kB,EACA8kB,EACA5L,EACA7G,EACA4C,GAEA,OAAOjV,EAAKe,KAAKF,IACf,MAAMiJ,EAlDH,SAAyBZ,GAC9B,MACMY,EAAS,GAGf,IAAK,IAAIlC,EAAI,EAAGA,EAAIsB,EAASrK,OAAQ+I,IAAK,CACxC,MACMgC,EADSV,EAAStB,GACEgC,WAC1B,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAW/K,OAAQ0K,IACF,OAA/BK,EAAWL,GARC,IASdO,EAAO5C,KAAK0C,EAAWL,GATT,GAYpB,CAEA,OAAOO,CACT,CAkCmBib,CAAgB,CAAClkB,IAEhC,GADAA,EAAOmkB,WAAY,EACd9L,EAAarY,EAAOyJ,OAIvBzJ,EAAOb,KAAO,OAJiB,CAC/B,MAAMglB,EA7BL,SAAkClb,EAAkBgb,EAAoBzS,EAAa4C,GAC1F,MAAMgQ,EAAWC,GAAe7S,EAAKyS,GAC/BK,EAAWD,GAAejQ,EAAK6P,GAMrC,OAJsBE,EAAAA,GAAAA,aACnBI,OAAO,CAACH,EAAUE,IAClBnd,WAAWoM,KAAKC,MAAMY,EAAM5C,GAAOyS,EAE/BO,CAAcvb,GAAQ/I,KAAKukB,GACzB,CAACA,EAAIC,GAAID,EAAIzmB,SAExB,CAkBwB2mB,CAAyB1b,EAAQgb,EAAYzS,EAAK4C,GACpEpU,EAAOb,KAAOglB,CAChB,CAGA,OAAOnkB,CAAM,GAEjB,CAEA,SAASqkB,GAAe9c,EAAe0c,GACrC,OAAO1Q,KAAKkN,MAAMlZ,EAAQ0c,GAAcA,CAC1C,C,yHChEO,MAAMW,GAQX/oB,YAAoBoS,GAAsB,mIAH3B,GAAK,sCAGAA,UAAAA,CAAuB,CAE3C4W,cAAcC,EAAkBC,EAA8BC,GAC5D,IAAIC,EAAaF,EAAM9c,UAKvB,MAJwB,WAApB8c,EAAM9c,YACRgd,EAAa,YAGP,iEACkDH,+DACLG,yEAEJH,0CACjBG,iBAA0BA,qDACnBD,qEAGzC,CAEAE,aAAaC,GACX,MAAMC,EAAatU,IAAEqU,EAAIE,eAAeC,QAAQ,yBAC1CR,EAAchU,IAAEqU,EAAIE,eAAelmB,KAAK,eAE9C,IACIomB,EADAC,EAAuB,KAE3B,MAAM7Z,EAAO7P,KAAK6P,KACZsC,EAAYnS,KAAKmS,UACjB8W,EAAQjpB,KAAKqL,WAAW2d,GAE9B,SAASW,EAASN,GAChB,GAAc,OAAVK,EACFA,EAAQL,EAAIO,YACP,CACL,MAAMC,EAAOR,EAAIO,QAAUF,EAC3BD,GAAkBI,EAClBH,EAAQL,EAAIO,QACZN,EAAWjS,IAAI,CAAEzE,IAAK6W,EAASI,GACjC,CACF,CAqBAH,EAAQ,KACRD,EAASH,EAAWpY,WAAW0B,IAE/B0W,EAAWtkB,GAAG,YAAa2kB,GAC3B1Z,SAAS6Z,iBAAiB,WAvB1B,SAASC,IAEP,IAAIC,EAAana,EAAKoa,IAAI,CAAEtX,KAAM,EAAGC,IAAK6W,IAAUS,EACpDF,EAAa7nB,SAAS6nB,EAAWG,QAAQ,GAAI,IAC7ClB,EAAMxd,MAAQue,EAEdV,EAAWc,IAAI,YAAaT,GAC5B1Z,SAASoa,oBAAoB,UAAWN,GAGxC5X,EAAUlP,OAAOqnB,QAAO,KACtBnY,EAAUvH,SACVuH,EAAUpN,OAAOqB,KAAKugB,GAAAA,GAAAA,GAA6B,CACjD4D,UAAWtB,EACXD,YAAaA,GACb,GAEN,GAOF,CAEAwB,UACExqB,KAAKyqB,YAAYrb,KAAK,yBAAyB8I,SAC/ClY,KAAK0qB,cAAe,CACtB,CAEAC,aAAa3B,EAAqB4B,GAChC,MAAM3B,EAAQjpB,KAAKqL,WAAW2d,GAE9B,IAAKC,EAAM3d,SAAYtL,KAAKmS,UAAkBnH,MAC5C,OAGF,MAAMS,EAAQwd,EAAMxd,MACpB,IAAIyd,EAAWzd,EACXof,EAAe,EAGnB,IAAKC,EAAAA,EAAAA,UAASrf,GAGP,CACL,MAAMsf,EAAiB/qB,KAAK6P,KAAKwG,IAAI,CAAEwC,EAAG,EAAGqR,EAAGze,IAChDof,EAAepT,KAAKC,MAAMD,KAAK/B,IAAI+B,KAAKa,IAAIyS,EAAenY,IAAK,GAAI5S,KAAK6S,QAAU,EACrF,MALEqW,EAAW,GACX2B,EAAeD,EAMjB,MAAMtB,EAAatU,IAAEhV,KAAK+oB,cAAcC,EAAaC,EAAOC,IAC5DlpB,KAAKyqB,YAAYO,OAAO1B,GAExBA,EAAW2B,YAAY,iCAA+C,KAAb/B,GACzDI,EAAWjS,IAAI,CAAEzE,IAAKiY,GACxB,CAEAK,oBAEE,OAAQlrB,KAAKmrB,gBAAkBnrB,KAAKmS,UAAUiZ,mBAAqBprB,KAAKmS,UAAUtN,MAAMwG,WAAWnJ,OAAS,CAC9G,CAEAmpB,QAAQ7J,EAAcne,GACpBrD,KAAKmrB,gBAAiB,EACtB,IAAK,IAAIlgB,EAAI,EAAGA,EAAI5H,EAAKnB,OAAQ+I,IAC/B,GAAI5H,EAAK4H,GAAGkP,MAAQ,EAAG,CACrBna,KAAKmrB,gBAAiB,EACtB,KACF,CAGF,GAAInrB,KAAKkrB,oBAAqB,CAC5B,MAAMI,EAAkBtrB,KAAKmS,UAAUtN,MAAMwG,WAAWnJ,OAAS,EAAI,QAAU,QAC/Esf,EAAKnK,IAAI,eAAgBiU,EAC3B,MAAWtrB,KAAK0qB,cACdlJ,EAAKnK,IAAI,eAAgB,IAE7B,CAEAhE,KAAKxD,GACH7P,KAAKqL,WAAarL,KAAKmS,UAAUtN,MAAMwG,WACvCrL,KAAK6P,KAAOA,EACZ7P,KAAKyqB,YAAc5a,EAAK6G,iBAEpB1W,KAAK0qB,cACP1qB,KAAKwqB,UAGFxqB,KAAKkrB,sBAIVlrB,KAAK6S,OAAShD,EAAKgD,SAEf7S,KAAKqL,WAAWnJ,OAAS,GAC3BlC,KAAK2qB,aAAa,EAAG,IAEnB3qB,KAAKqL,WAAWnJ,OAAS,GAC3BlC,KAAK2qB,aAAa,EAAG3qB,KAAK6S,OAAS,IAGrC7S,KAAKyqB,YAAYL,IAAI,YAAa,iBAClCpqB,KAAKyqB,YAAYzlB,GAAG,YAAa,gBAAiBhF,KAAKopB,aAAajkB,KAAKnF,OACzEA,KAAK0qB,cAAe,EACtB,CAEAa,eAAevf,EAAcnH,GAC3B,IAAKA,EAAMwG,YAA0C,IAA5BxG,EAAMwG,WAAWnJ,OACxC,OAGF,IAEI+I,EAAGsf,EAAWiB,EAFdC,EAAUxO,IACVyO,GAAWzO,IAGf,IAAKhS,EAAI,EAAGA,EAAIpG,EAAMwG,WAAWnJ,OAAQ+I,IAAK,CAE5C,GADAsf,EAAY1lB,EAAMwG,WAAWJ,KACxB6f,EAAAA,EAAAA,UAASP,EAAU9e,OACtB,SAGF,IAAIkgB,EA4BA/I,EAAWgJ,EA3Bf,OAAQrB,EAAU5e,IAChB,IAAK,KACHggB,EAAQF,EAEJ5mB,EAAMwG,WAAWnJ,OAAS+I,EAAI,IAChCugB,EAAQ3mB,EAAMwG,WAAWJ,EAAI,GACzBugB,EAAM/f,MAAQ8e,EAAU9e,QAC1BkgB,EAAQH,EAAM/f,MACdigB,EAAUC,IAGd,MAEF,IAAK,KACHA,EAAQD,EAEJ7mB,EAAMwG,WAAWnJ,OAAS+I,EAAI,IAChCugB,EAAQ3mB,EAAMwG,WAAWJ,EAAI,GACzBugB,EAAM/f,MAAQ8e,EAAU9e,QAC1BkgB,EAAQH,EAAM/f,MACdggB,EAAUE,IASlB,OAAQpB,EAAUpe,WAChB,IAAK,WACHyW,EAAY,4BACZgJ,EAAY,0BACZ,MAEF,IAAK,UACHhJ,EAAY,2BACZgJ,EAAY,2BACZ,MAEF,IAAK,KACHhJ,EAAY,2BACZgJ,EAAY,uBACZ,MAEF,IAAK,SACHhJ,EAAY2H,EAAU3H,UACtBgJ,EAAYrB,EAAUqB,UAMtBrB,EAAUxe,OACY,UAApBwe,EAAUpQ,OAAqBna,KAAKmrB,eACtCnf,EAAQ0W,KAAKD,SAASlY,KAAK,CACzBshB,OAAQ,CAAEtd,KAAMgc,EAAU9e,MAAO+F,GAAIma,GACrCzd,MAAOpF,EAAAA,GAAAA,OAAAA,cAAAA,eAA2C8Z,KAGpD5W,EAAQ0W,KAAKD,SAASlY,KAAK,CACzB4P,MAAO,CAAE5L,KAAMgc,EAAU9e,MAAO+F,GAAIma,GACpCzd,MAAOpF,EAAAA,GAAAA,OAAAA,cAAAA,eAA2C8Z,MAIpD2H,EAAUre,OACY,UAApBqe,EAAUpQ,OAAqBna,KAAKmrB,eACtCnf,EAAQ0W,KAAKD,SAASlY,KAAK,CACzBshB,OAAQ,CAAEtd,KAAMgc,EAAU9e,MAAO+F,GAAI+Y,EAAU9e,OAC/CyC,MAAOpF,EAAAA,GAAAA,OAAAA,cAAAA,eAA2C8iB,KAGpD5f,EAAQ0W,KAAKD,SAASlY,KAAK,CACzB4P,MAAO,CAAE5L,KAAMgc,EAAU9e,MAAO+F,GAAI+Y,EAAU9e,OAC9CyC,MAAOpF,EAAAA,GAAAA,OAAAA,cAAAA,eAA2C8iB,KAI1D,CACF,EClPK,SAASE,GAAqBC,EAAuBC,GAC1D,KAAMD,EAAIE,eAAiBF,EAAIxd,MAAWwd,EAAIG,aAAeH,EAAIva,IAC/D,MAAO,GAIT,MAAM2a,EAAa,OAAH,UAAQJ,GAEpBI,EAAW5d,OAAS4d,EAAW3a,KACjC2a,EAAW3a,GAAK2a,EAAW5d,OAGxB4d,EAAW5d,MAAQ4d,EAAW3a,KACjC2a,EAAW5d,KAAO4d,EAAW3a,IAG/B,MAAM4a,EAAS,CACb7d,KAAM8d,GAAeF,EAAW5d,MAChCiD,GAAI6a,GAAeF,EAAW3a,KA+BhC,IA5BK2a,EAAWF,eAAiBE,EAAWD,cAC1CC,EAAWF,cAAgBE,EAAWD,cAGnCC,EAAWD,aAAeC,EAAWF,gBACxCE,EAAWD,YAAcC,EAAWF,eAGlCE,EAAWF,gBACbG,EAAO7d,KAAK+d,UAAYlF,OAAO+E,EAAWF,gBAGxCE,EAAWD,cACbE,EAAO5a,GAAG8a,UAAYlF,OAAO+E,EAAWD,cAGtCE,EAAO7d,KAAK+d,WAA8B,MAAjBF,EAAO7d,KAAKge,GAA8B,MAAjBH,EAAO7d,KAAKie,IAChEJ,EAAO7d,KAAKge,EAAI,EAChBH,EAAO7d,KAAKie,EAAI,EAChBJ,EAAO7d,KAAKke,EAAI,GAGdL,EAAO5a,GAAG8a,WAA4B,MAAfF,EAAO5a,GAAG+a,GAA4B,MAAfH,EAAO5a,GAAGgb,IAC1DJ,EAAO5a,GAAG+a,EAAI,GACdH,EAAO5a,GAAGgb,EAAI,GACdJ,EAAO5a,GAAGib,EAAI,KAGXL,EAAO7d,OAAS6d,EAAO5a,GAC1B,MAAO,GAGY,MAAjB4a,EAAO7d,KAAKge,IACdH,EAAO7d,KAAKge,EAAI,GAGC,MAAfH,EAAO5a,GAAG+a,IACZH,EAAO5a,GAAG+a,EAAI,IAGhB,MAAMxX,EAA+B,GAE/B2X,GAAYtf,EAAAA,EAAAA,IAAS4e,EAAOzd,MAQlC,IAPAme,EAAUC,IAAI,OAAQ,GACtBD,EAAUC,IAAI,SAAU,GACxBD,EAAUC,IAAI,SAAU,GACxBD,EAAUE,IAAIR,EAAO7d,KAAKge,EAAG,SAC7BG,EAAUE,IAAIR,EAAO7d,KAAKie,EAAG,WAC7BE,EAAUE,IAAIR,EAAO7d,KAAKke,EAAG,WAEtBC,EAAUG,QAAUb,EAAOxa,GAAGqb,QAAQ,CAC3C,IAD2C,QACpCT,EAAO7d,KAAK+d,WAAaF,EAAO7d,KAAK+d,YAAcI,EAAUI,cAClEJ,EAAUE,IAAI,GAAI,SAGpB,GAAIF,EAAUG,OAASb,EAAOxa,GAAGqb,OAC/B,MAGF,MAAME,GAAU3f,EAAAA,EAAAA,IAASsf,GAEzB,GAAIK,EAAQC,KACV,GAAIZ,EAAO7d,KAAKge,GAAKH,EAAO5a,GAAG+a,EAC7BQ,EAAQH,IAAIR,EAAO5a,GAAG+a,EAAIH,EAAO7d,KAAKge,EAAG,cACpC,GAAIH,EAAO7d,KAAKge,EAAIH,EAAO5a,GAAG+a,EACnC,KAAOQ,EAAQC,SAAWZ,EAAO5a,GAAG+a,GAClCQ,EAAQH,IAAI,EAAG,cAKjB,IAFAG,EAAQH,IAAI,GAAKR,EAAO7d,KAAKge,EAAG,SAEzBQ,EAAQC,SAAWZ,EAAO5a,GAAG+a,GAClCQ,EAAQH,IAAI,EAAG,SAQrB,IAHAG,EAAQJ,IAAI,SAAqB,QAAb,EAAEP,EAAO5a,GAAGgb,SAAC,QAAI,GACrCO,EAAQJ,IAAI,SAAqB,QAAb,EAAEP,EAAO5a,GAAGib,SAAC,QAAI,GAE9BL,EAAO5a,GAAG8a,WAAaF,EAAO5a,GAAG8a,YAAcS,EAAQD,cAC5DC,EAAQH,IAAI,GAAI,SAIfF,EAAUG,OAASb,EAAOzd,KAAKse,QAAUE,EAAQF,OAASb,EAAOzd,KAAKse,QACtEH,EAAUG,OAASb,EAAOxa,GAAGqb,QAAUE,EAAQF,OAASb,EAAOxa,GAAGqb,QAGnE9X,EAAQxK,KAAK,CAAEgE,KAAMme,EAAUrf,UAAWmE,GAAIub,EAAQ1f,YAGxDqf,EAAUE,IAAI,GAAI,QACpB,CAEA,OAAO7X,CACT,CAEA,SAASsX,GAAeY,GACtB,MAAM1kB,EAAqB,CAAC,EAC5B,GAAK0kB,UAAAA,EAAK/qB,OACR,OAAOqG,EAGT,MACM2kB,EADY,qBACMC,KAAKF,GAE7B,OAAKC,GAIDA,EAAMhrB,OAAS,IACjBqG,EAAOgkB,EAAInF,OAAO8F,EAAM,IACxB3kB,EAAOikB,EAAI,EAEPU,EAAMhrB,OAAS,QAAkBQ,IAAbwqB,EAAM,KAC5B3kB,EAAOikB,EAAIpF,OAAO8F,EAAM,KAGtB3kB,EAAOgkB,EAAI,KACbhkB,EAAOgkB,EAAI,IAGThkB,EAAOikB,EAAI,KACbjkB,EAAOikB,EAAI,KAIRjkB,GApBEA,CAqBX,C,yHC3JO,MAAM6kB,GAAkB,CAC7BC,KAAM,CACJC,gBAAgB,EAChBvjB,MAAO,OACPwjB,UAAW,CAAExhB,KAAM,4BAA6BG,KAAM,4BACtDshB,WAAY,CAAEzhB,KAAM,sBAAuBG,KAAM,uBAEnDuhB,IAAK,CACH1jB,MAAO,MACPmE,MAAO,CAAEnC,KAAM,4BAA6BG,KAAM,4BAEpDwhB,MAAO,CACL3jB,MAAO,QACPmE,MAAO,CAAEnC,KAAM,2BAA4BG,KAAM,yBAEnDyhB,KAAM,CACJ5jB,MAAO,OACPmE,MAAO,CAAEnC,KAAM,2BAA4BG,KAAM,6BAEnD0hB,OAAQ,CACN7jB,MAAO,SACPmE,MAAO,CAAEnC,KAAM,2BAA4BG,KAAM,6BAEnD2hB,OAAQ,CAAE9jB,MAAO,WAYnB,SAAS+jB,GAAS3B,EAAiB4B,GAKjC,IAJ+D,IAA3DvrB,OAAOC,KAAK2qB,IAAY7hB,QAAQ4gB,EAAWhgB,aAC7CggB,EAAWhgB,UAAY,OAGI,WAAzBggB,EAAWhgB,UACb,MAAO,CACLJ,KAAMogB,EAAWpgB,MAAQogB,EAAWvJ,UAAYmL,EAAMC,cAAcC,eAAe9B,EAAWvJ,WAAa,KAC3G1W,KAAMigB,EAAWjgB,MAAQigB,EAAWP,UAAYmC,EAAMC,cAAcC,eAAe9B,EAAWP,WAAa,MAI/G,MAAMzf,EAAYihB,GAAWjB,EAAWhgB,WAExC,OAAiC,IAA7BA,EAAUmhB,eACLS,EAAMG,QAAU/hB,EAAUqhB,WAAarhB,EAAUohB,UAGnD,CACLxhB,KAAMogB,EAAWpgB,KAAOgiB,EAAMC,cAAcC,eAAe9hB,EAAU+B,MAAMnC,MAAQ,KACnFG,KAAMigB,EAAWpgB,KAAOgiB,EAAMC,cAAcC,eAAe9hB,EAAU+B,MAAMhC,MAAQ,KAEvF,CAYO,MAAMiiB,GAIXpuB,YAAoBoS,GAAgB,0DAAhBA,UAAAA,CAAiB,CAErCkB,KAAKxD,GACH7P,KAAKouB,YAAcpuB,KAAKmS,UAAUtN,MAAMupB,YACxCpuB,KAAK6P,KAAOA,CACd,CAEA0b,eAAevf,EAAcnH,GAAY,MACvC,GAAsB,QAAlB,EAACA,EAAMupB,mBAAW,QAAjB,EAAmBlsB,OACtB,OAIF,MAAM8pB,EAAoB,CACxBzd,MAAMnB,EAAAA,EAAAA,IAASpN,KAAKmS,UAAUpO,MAAMwK,MAAM8f,MAC1C7c,IAAIpE,EAAAA,EAAAA,IAASpN,KAAKmS,UAAUpO,MAAMyN,IAAI6c,MACtCC,IAAK,CACH/f,KAAM,GACNiD,GAAI,KAIR,IAAK,MAAM+c,KAAM1pB,EAAMupB,YAAa,CAClC,MAAMjC,EAAoCoC,EACpCxZ,EAAU+W,GAAqByC,EAAIvC,GACzC,GAAIjX,EAAQ7S,OAAQ,CAClB,MAAMssB,EAAkBV,GAAS3B,EAAYrjB,EAAAA,GAAAA,QAE7C,IAAK,IAAI8D,EAAI,EAAGA,EAAImI,EAAQ7S,OAAQ0K,IAAK,CACvC,MAAMM,EAAI6H,EAAQnI,GACduf,EAAWpgB,MACbC,EAAQ0W,KAAKD,SAASlY,KAAK,CACzBgD,MAAO,CAAEgB,KAAMrB,EAAEqB,KAAMiD,GAAItE,EAAEsE,IAC7BtD,MAAOsgB,EAAgBziB,OAIvBogB,EAAWjgB,OACbF,EAAQ0W,KAAKD,SAASlY,KAAK,CACzBgD,MAAO,CAAEgB,KAAMrB,EAAEqB,KAAMiD,GAAItE,EAAEqB,MAC7BL,MAAOsgB,EAAgBtiB,OAEzBF,EAAQ0W,KAAKD,SAASlY,KAAK,CACzBgD,MAAO,CAAEgB,KAAMrB,EAAEsE,GAAIA,GAAItE,EAAEsE,IAC3BtD,MAAOsgB,EAAgBtiB,OAG7B,CACF,CACF,CACF,E,0LC1EF,MAAMuiB,IAA0BC,EAAAA,EAAAA,GAAa1P,GAAQlW,EAAAA,GAAAA,QAErD,MAAM6lB,GAgBJ5uB,YACUmS,EACAsP,EAGA7c,GACR,sOAbY,IAAE,0KAyJc,CAC5BiqB,EACAC,IAEO,KAEL,MAAMC,EAA0B9uB,KAAKyH,UAAUsnB,oBAC3C,CACE,CACED,MAAO,CACL,CACEtT,MAAO,iBACPwT,UAAW,iBACX9kB,KAAM,cACN0R,QAAS,IAAM5b,KAAKuQ,aAAa4Q,WAAW,CAAE5S,KAAMqgB,EAAa/V,EAAGrH,GAAI,WAKhF,GAEJ,IAAKqd,EACH,OAAOC,EAGT,MAAMG,EAAY,CAChB,CACEH,MAAOD,EAAcK,SAASlvB,KAAK6E,MAAMsqB,kBAAkB/qB,KAAoBgrB,IACtE,CACL5T,MAAO4T,EAAKrlB,MACZilB,UAAWI,EAAKrlB,MAChBpJ,IAAKyuB,EAAKxtB,KACVqP,OAAQme,EAAKne,OACb/G,KAAsB,UAAhBklB,EAAKne,OAAqB,OAAS,oBACzC2K,QAASwT,EAAKxT,cAMtB,MAAO,IAAIkT,KAAUG,EAAU,IAElC,KA3LS/c,MAAAA,EAAU,KACVsP,KAAAA,EAEP,KACO7c,QAAAA,EAER3E,KAAK0jB,KAAOxR,EAAMwR,KAClB1jB,KAAKqvB,YAAcnd,EAAMwR,KAAK4L,gBAC9BtvB,KAAKyH,UAAYzH,KAAK0jB,KAAKjc,UAC3BzH,KAAK6E,MAAQ7E,KAAK0jB,KAAK7e,MACvB7E,KAAK0hB,YAAc,GAEnB1hB,KAAKuvB,WAAa,EAClBvvB,KAAKuQ,aAAe,IAAI2Q,GAAalhB,KAAK0jB,MAC1C1jB,KAAKwvB,iBAAmB,IAAI1G,GAAiB9oB,KAAK0jB,MAClD1jB,KAAKyvB,kBAAoB,IAAItB,GAAkBnuB,KAAK0jB,MAEpD1jB,KAAK+O,QAAU,IAAIyU,GAAaxjB,KAAKwhB,KAAMxhB,KAAK0jB,KAAKjc,UAAWzH,KAAKkS,OAAO,IACnElS,KAAK0vB,eAId1vB,KAAK0jB,KAAK3e,OAAOC,GAAGC,EAAAA,GAAAA,cAA2BjF,KAAK2vB,gBAAgBxqB,KAAKnF,OACzEA,KAAK0jB,KAAK3e,OAAOC,GAAGC,EAAAA,GAAAA,OAAoBjF,KAAK4vB,SAASzqB,KAAKnF,OAI3DA,KAAK0jB,KAAKjc,UAAU1C,OAAOC,GAAG4e,EAAAA,GAAAA,KAA4B5jB,KAAK6vB,aAAa1qB,KAAKnF,MAAOA,KAAKkS,OAC7FlS,KAAK0jB,KAAKjc,UAAU1C,OAAOC,GAAGshB,EAAAA,GAAAA,KAAiCtmB,KAAK8vB,kBAAkB3qB,KAAKnF,MAAOA,KAAKkS,OAEvGlS,KAAK0jB,KAAKjc,UAAU1C,OAAOC,GAAG+qB,EAAAA,GAAAA,KAAqB/vB,KAAK6vB,aAAa1qB,KAAKnF,MAAOA,KAAKkS,OACtFlS,KAAK0jB,KAAKjc,UAAU1C,OAAOC,GAAGuhB,EAAAA,GAAAA,KAA0BvmB,KAAK8vB,kBAAkB3qB,KAAKnF,MAAOA,KAAKkS,OAGhGlS,KAAKwhB,KAAKrc,KAAK,eAAgBnF,KAAKgwB,eAAe7qB,KAAKnF,OACxDA,KAAKwhB,KAAKrc,KAAK,YAAanF,KAAKiwB,YAAY9qB,KAAKnF,OAG9CA,KAAKwhB,MAAQxhB,KAAKwhB,KAAK0O,SACzBlwB,KAAKmwB,WAAanwB,KAAKwhB,KAAK0O,SAAS9gB,KAAK,iBAAiB,GAE/D,CAEAwgB,SAASQ,GAEP,GADApwB,KAAKqD,KAAO+sB,GAAcpwB,KAAKqD,MAC1BrD,KAAKqD,KACR,OAGFrD,KAAK0hB,YAAc1hB,KAAK0jB,KAAKhC,aAAe,GAC5C1hB,KAAKqwB,eAAerwB,KAAKqD,MACzB,MAAMitB,EAActwB,KAAK0jB,KAAK7Q,OAG9B,IAFA0d,EAAAA,EAAAA,IAAmBvwB,KAAKqD,KAAMrD,KAAK6E,MAAOyrB,IAErCtwB,KAAK6E,MAAMgK,OAAOC,KAKrB,OAJI9O,KAAKmwB,WAAWK,iBAClBC,EAAAA,uBAAgCzwB,KAAKmwB,iBAEvCnwB,KAAK0wB,cAIP,MAAM,OAAEvjB,EAAM,IAAEuI,EAAG,IAAE4C,EAAG,IAAEqF,EAAG,QAAEC,EAAO,MAAEC,GAAU7d,KAAK6E,MAAMgK,QACvD,aAAEkO,EAAY,UAAEQ,EAAS,UAAEC,EAAS,KAAEnI,EAAI,SAAE6H,EAAQ,UAAEO,EAAS,SAAEC,GAAa1d,KAAK6E,MAAMgK,OACzF8hB,EAAgB,CAAE5T,eAAcQ,YAAWC,YAAWnI,OAAM6H,WAAUO,YAAWC,YACjFkT,EAAe,CAAEzjB,SAAQuI,MAAK4C,MAAKqF,MAAKC,UAASC,SACjDS,EAAgC,OAAH,QACjCzB,WAAY7c,KAAKqD,KACjBkZ,aAAcvc,KAAK0jB,KAAKnH,cACrBoU,EACAC,EAAY,CACftU,eAAgBtc,KAAK0jB,KAAKpH,eAC1BiC,aAAcve,KAAK0jB,KAAKnF,aACxBhE,cAAeva,KAAK0jB,KAAKnJ,cACzBD,aAActa,KAAK0jB,KAAKpJ,eAGpBuW,EAAkBC,EAAAA,cAAoBrC,GAAyBnQ,GACrEmS,EAAAA,OAAgBI,EAAiB7wB,KAAKmwB,YAAY,IAAMnwB,KAAK0wB,eAC/D,CAEAb,aAAaxG,GAAsD,QAEjE,GAAKrpB,KAAKyH,UAAUspB,2BAApB,CAIA,GAA4B1H,ECrIjB2H,eAAe,ODqIQ,OAEhC,IAAKhxB,KAAK6P,OAAiB,QAAT,EAAAwZ,EAAIxkB,aAAK,aAAT,EAAW0C,MAAOvH,KAAK6E,MAAM0C,IAAMvH,KAAK0jB,KAAK3d,6BAC7D,OAGF/F,KAAK+O,QAAQD,KAAKua,EAAIxF,IACxB,CAGc,QAAV,EAACwF,EAAIvF,aAAK,OAAT,EAAWxC,MAIhBthB,KAAK+O,QAAQD,KAAK,CAAE+J,EAAGwQ,EAAIvF,MAAMxC,KAAMmF,UAA8B,QAArB,EAAE4C,EAAIvF,MAAM2C,iBAAS,QAAI,GAhBzE,CAiBF,CAEAkJ,kBACM3vB,KAAK6P,OACP7P,KAAK6P,KAAKgC,UACV7R,KAAK6P,KAAO,MAGd7P,KAAK+O,QAAQ8C,UACb7R,KAAKwhB,KAAK4I,MACVpqB,KAAKwhB,KAAKtJ,SAEVuY,EAAAA,uBAAgCzwB,KAAKmwB,WACvC,CAEAL,kBAAkBmB,GACZjxB,KAAK6P,MACP7P,KAAK+O,QAAQuE,MAAMtT,KAAK6P,KAE5B,CAEAmgB,eAAevmB,EAA0BynB,GACT,SAA1BlxB,KAAK6E,MAAM0I,MAAMC,MAMhB0jB,EAAO1U,SAAW0U,EAAOzU,UAAYzc,KAAKyH,UAAUsnB,oBAEvDnd,YAAW,KACT5R,KAAKuQ,aAAa4Q,WAAW+P,EAAO3jB,MAAM,GACzC,KAEHvN,KAAKkS,MAAMoY,QAAO,KAChBtqB,KAAK2E,QAAQwsB,QAAQ,CACnB5iB,MAAM6iB,EAAAA,EAAAA,IAAMF,EAAO3jB,MAAMgB,MACzBiD,IAAI4f,EAAAA,EAAAA,IAAMF,EAAO3jB,MAAMiE,KACvB,IAdJxR,KAAK6P,KAAKkI,gBAiBd,CA8CAkY,YAAYxmB,EAA0Boa,EAAUvB,GAC9C,MAAM+O,EAAuBrxB,KAAKwhB,KAAK8P,QAAQ,SAAWtxB,KAAKwhB,KAAK8P,QAAQ,SAAS7sB,MAAM,GAAK,KAC1F8sB,EAAwBjP,EAE9B,GAA8B,SAA1BtiB,KAAK6E,MAAM0I,MAAMC,KAKrB,GAAIqW,EAAIrH,SAAWqH,EAAIpH,QAAvB,CAEE,GAAIoH,EAAIhL,IAAMgL,EAAI2N,GAChB,OAIF,IAAKxxB,KAAKyH,UAAUF,KAAOvH,KAAKyH,UAAUsnB,oBACxC,OAGFnd,YAAW,KACT5R,KAAKuQ,aAAa4Q,WAAW,CAAE5S,KAAMsV,EAAIhL,EAAGrH,GAAI,MAAO,GACtD,IAgDL,KA9CO,CAEL,IAAIqd,EAEJ,GAHA7uB,KAAK+O,QAAQuE,MAAMtT,KAAK6P,MAGpByS,EAAM,CAER,MAAMmP,EAAczxB,KAAK6E,MAAM6sB,MAA8B,IAAxBpP,EAAKpe,OAAOiW,MAAM8L,EAAU,EAAI,GAC/D0L,EAAY3xB,KAAK0jB,KAAKnX,SAAS+V,EAAKpe,OAAO4J,gBAC3ChB,EAAQ6kB,EAAU9kB,OAAOyV,EAAKpe,OAAO6J,YACrC6jB,EAAY5xB,KAAK6xB,qCAAqCvP,EAAMqP,GAElE,IAAIG,EAAe9xB,KAAK6E,MAAMmH,QAAQijB,WAAa,GACnD,MAAM8C,GAAgBC,EAAAA,EAAAA,IAASllB,GAC3BilB,IAEFD,EAAQ,IAAIA,KAAUhlB,EAAMhE,OAAOgpB,QAErC,MAAMG,EAAc,CAClBC,SAAUT,EAAYS,SACtBJ,SAEIK,GAAeC,EAAAA,EAAAA,GAAoB,CACvCtlB,MAAO,CAAEhE,OAAQmpB,EAAalpB,KAAMgE,EAAAA,GAAAA,QACpCghB,MAAOjlB,EAAAA,GAAAA,OACPupB,SAAUryB,KAAKyH,UAAUE,eAHNyqB,CAIlBtlB,EAAMK,OAAO1I,IAAImtB,IACpB/C,EAAgBiD,EAAM5vB,QAClBowB,EAAAA,EAAAA,GAAsB,CACpBC,QAASJ,EACTnxB,KAAM8L,EAAM9L,KACZwxB,KAAM,IAAIC,EAAAA,EAAcd,GACxBe,SAAUd,EACVe,SAAUrQ,EAAKpe,OAAO6J,WACtBjB,MAAOmlB,EACPD,SAAUD,SAEZrvB,CACN,CAEA1C,KAAKkS,MAAMoY,QAAO,KAEhBtqB,KAAKqvB,YAAYuD,wBAAwBvB,GACzCrxB,KAAKqvB,YAAYwD,UAAUtB,GAC3BvxB,KAAKqvB,YAAYyD,qBAAqB9yB,KAAK+yB,4BAA4BlP,EAAKgL,IAC5E7uB,KAAKqvB,YAAY2D,WAAWnP,EAAI,GAEpC,CACF,CAEAgO,qCAAqCvP,EAAWqP,GAO9C,MAAM,UAAE1J,EAAS,UAAE2J,GAActP,EAEjC,IAAK2Q,MAAM/sB,QAAQ+hB,IAAmC,IAArBA,EAAU/lB,OACzC,OAAO0vB,EAGT,MAAMsB,EAAKjL,EAAU,IACf,UAAEzb,IAAcC,EAAAA,EAAAA,IAAaklB,GAEnC,IAAKnlB,IAAcA,EAAUW,OAC3B,OAAOykB,EAKT,GAFcplB,EAAUW,OAAO1I,IAAImtB,KAErBsB,EACZ,OAAOtB,EAGT,MAAMuB,EAAe3mB,EAAUW,OAAOimB,UAAUC,WAAW5nB,GAAUA,IAAUynB,IAC/E,OAAOC,GAAgB,EAAIA,EAAevB,CAC5C,CAEA0B,oBACE,OAAKtzB,KAAKqD,MAIc,IAApBrD,KAAKuvB,UAKX,CAEAgE,SAAS1jB,GAEH7P,KAAK6E,MAAM6sB,MAAM,GAAGlW,OAASxb,KAAK6E,MAAM6sB,MAAM,GAAG5iB,MACnDkG,IAAE,iEACC3F,KAAKrP,KAAK6E,MAAM6sB,MAAM,GAAGlW,OACzBjE,SAASvX,KAAKwhB,MAIfxhB,KAAK6E,MAAM6sB,MAAM,GAAGlW,OAASxb,KAAK6E,MAAM6sB,MAAM,GAAG5iB,MACnDkG,IAAE,kEACC3F,KAAKrP,KAAK6E,MAAM6sB,MAAM,GAAGlW,OACzBjE,SAASvX,KAAKwhB,MAGnB,MAAM,YAAEgS,GAAgBxzB,KAAK0jB,KAC7B,GAAI8P,EAAa,CACf,MAAMC,EAAMze,IAAG,kDAAiDwe,EAAYzpB,eACxEypB,EAAYE,QACd1e,IAAG,qCAAoCwe,EAAYG,uBAChDC,MAAMJ,EAAYE,QAClBnc,SAASkc,GAEdA,EAAIlc,SAASvX,KAAKwhB,KACpB,CACAxhB,KAAKwvB,iBAAiBnc,KAAKxD,GAC3B7P,KAAKyvB,kBAAkBpc,KAAKxD,EAC9B,CAEAgkB,kBAAkBhkB,EAAWikB,GAC3B,MAAMnhB,EAAO3S,KAAK6E,MAAM6sB,MAAM,GACxBnZ,EAAQvY,KAAK6E,MAAM6sB,MAAM,GAC3B/e,EAAK7D,MAAQ6D,EAAK6I,QACpBsY,EAAWnhB,KAAO,IAEhB4F,EAAMzJ,MAAQyJ,EAAMiD,QACtBsY,EAAWvb,MAAQ,IAIrB,MAAM4B,EAAQtK,EAAKkkB,WACnB,IAAK,IAAI9oB,EAAI,EAAGA,EAAIkP,EAAMjY,OAAQ+I,IAAK,CACrC,MAAMsU,EAAYpF,EAAMlP,GAClB+oB,EAAeh0B,KAAK6E,MAAM6sB,MAAMzmB,GACtCsU,EAAKvT,QAAQsM,IAA2B,OAArBiH,EAAKvT,QAAQsM,IAAeiH,EAAKvT,QAAQsM,IAAM0b,EAAa1b,IAC/EiH,EAAKvT,QAAQ0J,IAA2B,OAArB6J,EAAKvT,QAAQ0J,IAAe6J,EAAKvT,QAAQ0J,IAAMse,EAAate,GACjF,CACF,CAEAue,iBAAiBpkB,GACf,MAAMuP,EAAQvP,EAAKkkB,WACbG,EAAQl0B,KAAK6E,MAAMsV,MAAM+Z,QAAS,EAExC,GAAI9U,EAAMld,OAAS,IAAe,IAAVgyB,EAAgB,CACtC,MAAM7U,EAAQrf,KAAK6E,MAAMsV,MAAMga,YAAc,EAC7ChV,GAAYC,EAAOgV,WAAW/U,GAChC,CACF,CAKAgV,uBAAuBhxB,GACrB,IAAIqS,EAAM0R,OAAOkN,UAEjB,IAAK,IAAIrpB,EAAI,EAAGA,EAAI5H,EAAKnB,OAAQ+I,IAC/B,GAAK5H,EAAK4H,GAAG8P,MAAMwZ,SAAnB,CAGA,GAAIv0B,KAAK6E,MAAM6J,MACb,GAAIrL,EAAK4H,GAAGyD,OAA8B,IAAtBrL,EAAK4H,GAAGyD,KAAKI,KAC/B,cAGF,QAA4B,IAAjBzL,EAAK4H,GAAGyD,WAAqD,IAAtBrL,EAAK4H,GAAGyD,KAAKI,OAAyBzL,EAAK4H,GAAGyD,KAAKI,KACnG,SAIAzL,EAAK4H,GAAG8P,MAAMwZ,SAAW7e,IAC3BA,EAAMrS,EAAK4H,GAAG8P,MAAMwZ,SAZtB,CAgBF,OAAO7e,CACT,CAGAgb,cAAc,MAGZ,GAFA1wB,KAAKuvB,WAA8B,QAApB,EAAGvvB,KAAKwhB,KAAK3Z,eAAO,QAAI,EAEnC7H,KAAKszB,oBACP,OAIFtzB,KAAKwvB,iBAAiBnE,QAAQrrB,KAAKwhB,KAAMxhB,KAAKqD,MAG9CrD,KAAK6E,MAAM2vB,SAASx0B,KAAK6E,MAAM8J,OAAQ3O,KAAK6E,MAAM2vB,OAGlD,MAAMxoB,EAAehM,KAAKy0B,iBAAiBz0B,KAAK6E,OAChD7E,KAAK00B,aAAa1oB,EAAShM,KAAK6E,OAChC7E,KAAK20B,sBAAsB30B,KAAKqD,KAAM2I,GACtChM,KAAKwvB,iBAAiBjE,eAAevf,EAAShM,KAAK6E,OACnD7E,KAAKyvB,kBAAkBlE,eAAevf,EAAShM,KAAK6E,OACpD7E,KAAKuQ,aAAakR,cAAczhB,KAAK0hB,YAAa1V,GAClDhM,KAAK0vB,aAAe1vB,KAAK40B,WAAW50B,KAAKqD,KAAMrD,KAAK6E,OACpD7E,KAAK60B,SAAS7oB,GAAS,EACzB,CAEAqkB,eAAehtB,GACb,IAAK,IAAI4H,EAAI,EAAGA,EAAI5H,EAAKnB,OAAQ+I,IAAK,CACpC,MAAM/G,EAASb,EAAK4H,GACpB/G,EAAOb,KAAOa,EAAO4wB,aAAa5wB,EAAO6wB,eAAiB/0B,KAAK6E,MAAMkwB,eAE5C,aAArB7wB,EAAO8wB,YACT9wB,EAAOb,MAAO4xB,EAAAA,EAAAA,GAAqB/wB,EAAOb,KAAMrD,KAAK0jB,KAAK3f,QAIxD/D,KAAK0jB,KAAKnH,aAAarY,EAAOyJ,SAChCzJ,EAAOb,KAAO,GACda,EAAOuJ,OAAQ,EAEnB,CACF,CAEAinB,aAAa1oB,EAAcnH,GACzB,OAAQA,EAAM0I,MAAMC,MAClB,IAAK,SACHxB,EAAQ9H,OAAOwK,KAAKwmB,SAAW,GAC/BlpB,EAAQ9H,OAAOwK,KAAKwlB,MAAQ,SAE5B,IAAK,IAAIjpB,EAAI,EAAGA,EAAIjL,KAAKqD,KAAKnB,OAAQ+I,IAAK,CACzC,MAAM/G,EAASlE,KAAKqD,KAAK4H,GACzB/G,EAAOb,KAAO,CAAC,CAAC4H,EAAI,EAAG/G,EAAO6W,MAAMlW,EAAM0I,MAAMJ,OAAO,KACzD,CAEAnN,KAAKm1B,eAAenpB,GACpB,MAEF,IAAK,YAAa,CAChB,IAAImc,EAEJ,GAAInoB,KAAKqD,KAAKnB,OAAQ,CACpB,IAAIkzB,GAAUC,EAAAA,EAAAA,MAAKjxB,EAAAA,EAAAA,KAAIpE,KAAKqD,MAAOopB,GAAMA,EAAE1R,MAAMrF,OAC7C4f,GAAUC,EAAAA,EAAAA,MAAKnxB,EAAAA,EAAAA,KAAIpE,KAAKqD,MAAOopB,GAAMA,EAAE1R,MAAMzC,OACjD,MAAMkd,EAAQ3wB,EAAM0I,MAAMkoB,SAAWz1B,KAAKuvB,WAAa,GACvD,GAAuB,MAAnB1qB,EAAM0I,MAAMmI,IAAa,CAE3B0f,GAD0BM,EAAAA,EAAAA,UAAS7wB,EAAM0I,MAAMmI,IAAK4f,EAASE,IAAU,EACzCJ,EAAUvwB,EAAM0I,MAAMmI,GACtD,CACA,GAAuB,MAAnB7Q,EAAM0I,MAAM+K,IAAa,CAE3Bgd,GAD0BI,EAAAA,EAAAA,UAASN,EAASvwB,EAAM0I,MAAM+K,IAAKkd,IAAU,EACzCF,EAAUzwB,EAAM0I,MAAM+K,GACtD,CACA6P,GAAauN,EAAAA,EAAAA,UAASN,EAASE,EAASE,GACxCxpB,EAAQ9H,OAAOwK,KAAKwmB,SAAwB,GAAb/M,EAC/BnoB,KAAKqD,KAAO6kB,GAAuBloB,KAAKqD,KAAM8kB,EAAYnoB,KAAK0jB,KAAKnH,aAAc6Y,EAASE,EAC7F,MACEnN,EAAa,EAGfnoB,KAAK21B,kBAAkB3pB,EAASmc,GAChC,KACF,CACA,IAAK,QACHnc,EAAQ9H,OAAOwK,KAAKwmB,SAAW,GAC/BlpB,EAAQ9H,OAAOwK,KAAKwlB,MAAQ,SAC5Bl0B,KAAK41B,cAAc5pB,GACnB,MAEF,QACEA,EAAQ9H,OAAOwK,KAAKwmB,SAAWl1B,KAAKq0B,uBAAuBr0B,KAAKqD,MAAQ,IACxErD,KAAK61B,YAAY7pB,GAIvB,CAEA6oB,SAAS7oB,EAAc8pB,GACrB,IACE91B,KAAK6P,KAAOmF,IAAAA,KAAOhV,KAAKwhB,KAAMxhB,KAAK0vB,aAAc1jB,GAC7ChM,KAAK0jB,KAAKqS,oBACL/1B,KAAK0jB,KAAKhgB,KAMrB,CAJE,MAAOuW,GACPtT,QAAQjD,MAAM,mBAAoBuW,GAClCja,KAAK0jB,KAAKhgB,MAAQuW,aAAazY,MAAQyY,EAAEpT,QAAU,eACnD7G,KAAK0jB,KAAKqS,aAAc,CAC1B,CAEID,GACF91B,KAAK0jB,KAAKra,oBAEd,CAEAorB,iBAAiB5vB,GACf,IAAImxB,EAAY,WACwB,IAApCltB,EAAAA,GAAAA,SAAAA,KAAAA,aACFktB,EAAY,WAEd,MAAMvoB,IAAQ5I,EAAM4I,OAAe,KA6DnC,MA5DqB,CACnBiM,MAAO,CACLrG,KAAM,CAACrT,KAAKuzB,SAASpuB,KAAKnF,OAC1Bi2B,cAAe,CAACj2B,KAAK6zB,kBAAkB1uB,KAAKnF,OAC5Ck2B,aAAc,CAACl2B,KAAKi0B,iBAAiB9uB,KAAKnF,QAE5C6O,OAAQ,CAAEC,MAAM,GAChB5K,OAAQ,CACNiyB,eAActxB,EAAM4I,OAAQ5I,EAAMuxB,WAClC3oB,MAAO5I,EAAMuxB,WAAa,KAAO3oB,EACjCkB,MAAO,CACLG,KAAMjK,EAAM8J,MACZmR,MAAM,EACN/T,KAAM/L,KAAKq2B,oBAAoBxxB,EAAMkH,MACrC6W,UAAW5iB,KAAKs2B,gBAAgBzxB,EAAM0xB,cACtCzf,UAAWjS,EAAM2vB,OAAS,EAAI3vB,EAAM2xB,UACpClS,MAAOzf,EAAM4xB,aAEfjC,OAAQ,CACN1lB,KAAMjK,EAAM2vB,OACZ1d,UAAWjS,EAAM2xB,UACjBE,WAAY,CAAC7xB,EAAM6xB,WAAY7xB,EAAM8xB,cAEvCjoB,KAAM,CACJI,KAAMjK,EAAM6J,KACZ3C,KAAM,EACNmpB,SAAU,EACVpV,MAAM,EACNhJ,UAAW,GAEblI,OAAQ,CACNE,KAAMjK,EAAM+J,OACZ7C,KAAM,EACN6W,WAAW,EACXgU,OAAQ/xB,EAAM+J,OAAS/J,EAAMgyB,YAAc,GAE7CC,WAAY,GAEdpF,MAAO,GACPnkB,MAAO,CAAC,EACRmV,KAAM,CACJqU,gBAAiB,EACjBtU,SAAU,GACVuU,gBAAiB,KACjBC,YAAa,EACbC,WAAW,EACXC,WAAW,EACXjpB,MAAO8nB,EACPoB,OAAQ,CAAEzkB,KAAM,EAAG4F,MAAO,GAC1B8e,aAAc,EACdC,kBAAmB,IAErBC,UAAW,CACT/pB,KAAM,IACNU,MAAO,QAETspB,UAAW,CACThqB,KAAM,KAIZ,CAEAonB,WAAW1wB,EAAaW,GACtB,MAAMiY,EAASjY,EAAMgK,OAAOwG,KACtBoiB,EAAY5yB,EAAMgK,OAAOqO,SACzBwa,EAAa5a,SAA2CjY,EAAMgK,OAAOiO,GACrE6a,EAAgBF,QAChBG,EAAe/yB,EAAM4I,OAASiqB,GAAcC,GAAiB9yB,EAAMgK,OAAOkO,aAC1EG,GAAqC,IAA1BrY,EAAMgK,OAAOqO,UAAqB,EAAI,EAEvD,OAAI0a,GACK5a,EAAAA,EAAAA,QAAQ9Y,GAASuoB,GAAMA,EAAE1R,MAAM+B,GAAUI,KAEzCF,EAAAA,EAAAA,QAAQ9Y,GAASuoB,GAAMA,EAAEoL,QAEpC,CAEAvB,gBAAgBwB,GACd,OAAKA,EAIE,CACL7pB,OAAQ,CAAC,CAAEqJ,QAAS,GAAO,CAAEA,QAASwgB,EAAS,MAJxC,IAMX,CAEAzB,oBAAoBtqB,GAClB,OAAI/L,KAAK6E,MAAMuxB,YAAcp2B,KAAK6E,MAAM4I,OACtB,IAAT1B,EAAa,KAEbA,EAAO,EAElB,CAEA8pB,YAAY7pB,GACV,MAAMwpB,EAAQx1B,KAAKuvB,WAAa,IAC1B7Z,GAAMqiB,EAAAA,EAAAA,aAAY/3B,KAAK0jB,KAAK3f,MAAOwK,MAAQ,KAAOvO,KAAK0jB,KAAK3f,MAAOwK,KAAKlB,UACxEiL,GAAMyf,EAAAA,EAAAA,aAAY/3B,KAAK0jB,KAAK3f,MAAOyN,IAAM,KAAOxR,KAAK0jB,KAAK3f,MAAOyN,GAAGnE,UAE1ErB,EAAQuB,MAAQ,CACd7F,SAAU1H,KAAKyH,UAAUE,cACzBmH,KAAM9O,KAAK6E,MAAM0I,MAAMuB,KACvBtB,KAAM,OACNkI,IAAKA,EACL4C,IAAKA,EACLkD,MAAO,WACPga,MAAOA,EACPwC,YAAYC,EAAAA,EAAAA,IAAgBzC,EAAO9f,EAAK4C,GACxC4f,cAAeC,EAAAA,GAEnB,CAEAhD,eAAenpB,GACb,MAAMwpB,GAAQpxB,EAAAA,EAAAA,KAAIpE,KAAKqD,MAAM,CAACa,EAAQ+F,IAC7B,CAACA,EAAQ,EAAG/F,EAAOyJ,SAG5B3B,EAAQuB,MAAQ,CACd7F,SAAU1H,KAAKyH,UAAUE,cACzBmH,KAAM9O,KAAK6E,MAAM0I,MAAMuB,KACvBtB,KAAM,KACNkI,IAAK,EACL4C,IAAKkd,EAAMtzB,OAAS,EACpBsZ,MAAO,WACPga,MAAOA,EAEX,CAEAG,kBAAkB3pB,EAAcmc,GAC9B,IAAIqN,EACA9f,EACA4C,EAEJ,MAAM8f,EAAep4B,KAAKuvB,WAAa,GAEvC,GAAIvvB,KAAKqD,KAAKnB,QAAUimB,EAAY,CAClC,MAAMkQ,EAAa,GAEnB,IAAK,MAAMC,KAAKt4B,KAAKqD,KACnB,IAAK,MAAMygB,KAASwU,EAAEj1B,KACpBg1B,EAAWvU,EAAM,KAAM,EAI3B0R,EAAQhzB,OAAOC,KAAK41B,GAAYj0B,KAAKC,GAAM+iB,OAAO/iB,KAClDqR,GAAM2f,EAAAA,EAAAA,KAAKG,GACXld,GAAMid,EAAAA,EAAAA,KAAKC,GAGX,IAAIE,EAAWvN,EACXoQ,EAAW9gB,KAAKkN,OAAOrM,EAAM5C,GAAOggB,GACxC,KAAO6C,EAAWH,GAChB1C,GAAsB,EACtB6C,EAAW9gB,KAAK+gB,MAAMlgB,EAAM5C,GAAOggB,GAIrChgB,EAAM+B,KAAKkN,MAAMjP,EAAMggB,GAAYA,EAEnCpd,EAAMb,KAAK+gB,KAAY,KAANlgB,EAAcod,GAAYA,EAE3CF,EAAQ,GACR,IAAK,IAAIvqB,EAAIyK,EAAKzK,GAAKqN,EAAKrN,GAAKyqB,EAC/BF,EAAMjrB,KAAKU,EAEf,MAEEuqB,EAAQ4C,EAAe,EACvB1iB,EAAM,EACN4C,EAAM,EAGRtM,EAAQuB,MAAQ,CACd7F,SAAU1H,KAAKyH,UAAUE,cACzBmH,KAAM9O,KAAK6E,MAAM0I,MAAMuB,KACvBtB,KAAM,KACNkI,IAAKA,EACL4C,IAAKA,EACLkD,MAAO,YACPga,MAAOA,GAITx1B,KAAKy4B,kBAAkBzsB,EAAQuB,MAAO,QAAS,KACjD,CAEAqoB,cAAc5pB,GACZ,IAAIwpB,GAAQpxB,EAAAA,EAAAA,KAAIpE,KAAKqD,MAAM,CAACa,EAAQ4jB,KAC3B1jB,EAAAA,EAAAA,KAAIF,EAAO+I,YAAY,CAAC6W,EAAO4U,IAE7B,CADW5Q,EAAc5jB,EAAO+I,WAAW/K,OAASw2B,EACvC,EAAG5U,EAAM,QAIjC0R,GAAQmD,EAAAA,EAAAA,SAAQnD,GAAO,GAEvBxpB,EAAQuB,MAAQ,CACd7F,SAAU1H,KAAKyH,UAAUE,cACzBmH,KAAM9O,KAAK6E,MAAM0I,MAAMuB,KACvBtB,KAAM,KACNkI,IAAK,EACL4C,IAAKkd,EAAMtzB,OAAS,EACpBsZ,MAAO,WACPga,MAAOA,EAEX,CAEAb,sBAAsBtxB,EAAW2I,GAC/B,MAAM4sB,EAAW,CACf1nB,SAAU,OACVpC,KAAM9O,KAAK6E,MAAM6sB,MAAM,GAAG5iB,KAC1B7E,MAAO,EACP4uB,QAAS74B,KAAK6E,MAAM6sB,MAAM,GAAGmH,SAAW,EACxCnjB,IAAK1V,KAAK84B,YAAY94B,KAAK6E,MAAM6sB,MAAM,GAAGhc,KAC1C4C,IAAKtY,KAAK84B,YAAY94B,KAAK6E,MAAM6sB,MAAM,GAAGpZ,KAC1CygB,aAAc/4B,KAAK6E,MAAM6sB,MAAM,GAAGQ,UAKpC,GAFAlmB,EAAQ0lB,MAAMnnB,KAAKquB,IAEfxpB,EAAAA,EAAAA,MAAK/L,EAAM,CAAE8W,MAAO,IAAM,CAC5B,MAAM6e,GAAUC,EAAAA,EAAAA,OAAML,GACtBI,EAAQ/uB,MAAQ,EAChB+uB,EAAQlqB,KAAO9O,KAAK6E,MAAM6sB,MAAM,GAAG5iB,KACnCkqB,EAAQH,QAAU74B,KAAK6E,MAAM6sB,MAAM,GAAGmH,SAAW,EACjDG,EAAQ9nB,SAAW,QACnB8nB,EAAQtjB,IAAM1V,KAAK84B,YAAY94B,KAAK6E,MAAM6sB,MAAM,GAAGhc,KACnDsjB,EAAQ1gB,IAAMtY,KAAK84B,YAAY94B,KAAK6E,MAAM6sB,MAAM,GAAGpZ,KACnD0gB,EAAQD,aAAe/4B,KAAK6E,MAAM6sB,MAAM,GAAGQ,SAC3ClmB,EAAQ0lB,MAAMnnB,KAAKyuB,GAEnBh5B,KAAKk5B,cAAcltB,EAAQ0lB,MAAM,GAAIruB,GACrCrD,KAAKy4B,kBACHzsB,EAAQ0lB,MAAM,GACd1xB,KAAK6E,MAAMuxB,YAAcp2B,KAAK6E,MAAM4I,MAAQ,UAAYzN,KAAK6E,MAAM6sB,MAAM,GAAGyH,OAC5En5B,KAAK6E,MAAM6sB,MAAM,GAAGQ,SAExB,CACAlyB,KAAKk5B,cAAcltB,EAAQ0lB,MAAM,GAAIruB,GACrCrD,KAAKy4B,kBACHzsB,EAAQ0lB,MAAM,GACd1xB,KAAK6E,MAAMuxB,YAAcp2B,KAAK6E,MAAM4I,MAAQ,UAAYzN,KAAK6E,MAAM6sB,MAAM,GAAGyH,OAC5En5B,KAAK6E,MAAM6sB,MAAM,GAAGQ,SAExB,CAEA4G,YAAYrtB,GACV,OAAIA,QACK,MAGF2tB,EAAAA,EAAAA,UAAS3tB,EAClB,CAEAytB,cAAc3Z,EAAWlc,GACvB,GAAqB,IAAjBkc,EAAKsZ,QACP,OAGF,MAAMQ,EAA4B,IAAb9Z,EAAK7J,IAS1B,IAAIxR,EAAQ+G,EAPRsU,EAAK7J,IAAM0R,OAAOkS,YACpB/Z,EAAK7J,IAAM,MAET6J,EAAKjH,IAAM8O,OAAOkS,YACpB/Z,EAAKjH,IAAM,MAIb,IAAIA,EAAMiH,EAAKjH,IACb5C,EAAM6J,EAAK7J,IAEb,IAAKzK,EAAI,EAAGA,EAAI5H,EAAKnB,OAAQ+I,IAC3B/G,EAASb,EAAK4H,GACV/G,EAAOiW,QAAUoF,EAAKtV,UACnBqO,GAAOA,EAAMpU,EAAO6W,MAAMzC,OAC7BA,EAAMpU,EAAO6W,MAAMzC,OAEhB5C,GAAOA,EAAMxR,EAAO6W,MAAMwe,UAC7B7jB,EAAMxR,EAAO6W,MAAMwe,SAKzBha,EAAKyV,UAAa3wB,GACTA,EAAI+iB,OAAOkS,UAAY,KAAO7hB,KAAK7Q,IAAIvC,GAAKoT,KAAK7Q,IAAI2Y,EAAKsZ,SAEnEtZ,EAAKia,iBAAoBn1B,GAChBoT,KAAKgiB,IAAIla,EAAKsZ,QAASx0B,GAG3BiU,GAAQ5C,EAGD4C,EAEA5C,IACVA,EAAM4C,EAAMiH,EAAKia,kBAAkB,IAFnClhB,EAAM5C,EAAM6J,EAAKia,iBAAiB,IAHlClhB,EAAMiH,EAAKia,iBAAiB,GAC5B9jB,EAAM6J,EAAKia,kBAAkB,IAQ7B9jB,EADE6J,EAAK7J,IACD6J,EAAKia,iBAAiB/hB,KAAK+gB,KAAKjZ,EAAKyV,UAAUzV,EAAK7J,OAEpD6J,EAAK7J,IAAM6J,EAAKia,iBAAiB/hB,KAAKkN,MAAMpF,EAAKyV,UAAUtf,KAGjE4C,EADEiH,EAAKjH,IACDiH,EAAKia,iBAAiB/hB,KAAKkN,MAAMpF,EAAKyV,UAAUzV,EAAKjH,OAErDiH,EAAKjH,IAAMiH,EAAKia,iBAAiB/hB,KAAK+gB,KAAKjZ,EAAKyV,UAAU1c,MAG7D5C,GAAOA,EAAM0R,OAAOkS,YAAchhB,GAAOA,EAAM8O,OAAOkS,YAIvDlS,OAAOsS,SAAShkB,IAAQ0R,OAAOsS,SAASphB,IACtC+gB,IACF9Z,EAAK7J,IAAM,GACXA,EAAM,GAGR6J,EAAKiW,MAAQx1B,KAAK25B,8BAA8BjkB,EAAK4C,EAAKiH,EAAKsZ,SAC3DQ,GACF9Z,EAAKiW,MAAMoE,QAAQ,IAEjBra,EAAKiW,MAAMjW,EAAKiW,MAAMtzB,OAAS,GAAKqd,EAAKjH,MAC3CiH,EAAKjH,IAAMiH,EAAKiW,MAAMjW,EAAKiW,MAAMtzB,OAAS,MAG5Cqd,EAAKiW,MAAQ,CAAC,EAAG,UACVjW,EAAK7J,WACL6J,EAAKjH,KAEhB,CAEAqhB,8BAA8BjkB,EAAU4C,EAAaugB,GACnD,IAEIgB,EAFArE,EAAQ,GAGZ,IAAKqE,EAAWnkB,EAAKmkB,GAAYvhB,EAAKuhB,GAAYhB,EAChDrD,EAAMjrB,KAAKsvB,GAGb,MAAMC,EAAcriB,KAAK+gB,KAAKx4B,KAAK0jB,KAAK7Q,OAAS,IAC3CknB,EAAWvE,EAAMtzB,OACvB,GAAI63B,EAAWD,EAAa,CAC1B,MAAME,EAASviB,KAAK+gB,KAAKuB,EAAWD,GAAejB,EAGnD,IAFArD,EAAQ,GAEHqE,EAAWnkB,EAAKmkB,GAAYvhB,EAAM0hB,EAAQH,GAAYG,EACzDxE,EAAMjrB,KAAKsvB,EAEf,CAEA,OAAOrE,CACT,CAEAiD,kBAAkBlZ,EAA0D4Z,EAAgBjH,GAC1F3S,EAAK2Y,cAAgB,CAAC3hB,EAAKgJ,KACzB,MAAM0a,GAAYC,EAAAA,EAAAA,IAAef,GAEjC,IAAKc,EACH,MAAM,IAAIz4B,MAAO,SAAQ23B,uBAG3B,OAAOgB,EAAAA,EAAAA,IAAuBF,EAAU1jB,EAAK2b,GAAU,CAE3D,EAIF,SAASkI,GAAez1B,EAAkB01B,EAAiB71B,GACzD,MAAO,CACL81B,SAAU,IACVC,SAAU,GACVnL,KAAM,CAACld,EAAYsP,IACV,IAAImN,GAAazc,EAAOsP,EAAM7c,GAG3C,CEp8BO,SAAS61B,GAAoBv3B,EAAaw3B,EAAkBJ,GACjEp3B,EAAOy3B,aAAe,GACtBz3B,EAAO03B,iBAAmB,GAC1B13B,EAAO23B,SAAW33B,EAAO23B,UAAY,CAAC,EACtC33B,EAAO43B,iBAAmB,CAAC,EAE3B53B,EAAO63B,kBAAoB,CAAC95B,EAAc+5B,EAAsB5tB,KAC9D,MAAM6tB,EAAS,CACb3rB,KAAMrO,EACN+5B,aAAcA,EACd9wB,MAAOhH,EAAOy3B,aAAax4B,OAC3BiL,SACA8tB,SAAS72B,EAAAA,EAAAA,KAAI+I,GAAS1B,IACb,CAAE4D,KAAMrN,OAAOyJ,GAAQA,MAAOA,OAIzCxI,EAAOy3B,aAAanwB,KAAKywB,EAAO,EAGlC/3B,EAAOi4B,YAAc,CAAC5Y,EAAgC6Y,KAE1B,UAAtB7Y,EAAKyY,cAKT93B,EAAO23B,SAAStY,EAAKyY,cAAgBI,EAAQ1vB,MAInB,gBAAtB6W,EAAKyY,eACP93B,EAAO23B,SAAgB,OAAI,EAC3B33B,EAAOygB,KAAK0X,kBAAkB,CAAEztB,MAAOwtB,EAAQ1vB,MAAOkD,OAAO,KAG/D1L,EAAOo4B,yBACPp4B,EAAOygB,KAAK9Y,UAdV3H,EAAOq4B,kBAAkBr4B,EAAO23B,SAAgB,MAc9B,EAGtB33B,EAAOs4B,cAAiBrtB,IACtBjL,EAAO23B,SAAgB,MAAI1sB,EAC3BjL,EAAOo4B,yBACPp4B,EAAOygB,KAAK9Y,SAGZ3H,EAAO43B,iBAAiB32B,OAAOgK,MAAQA,CAAK,EAG9CjL,EAAOq4B,kBAAqBptB,IAC1BjL,EAAO43B,iBAAmB,CACxBW,WAAW,EACXD,cAAet4B,EAAOs4B,cACtBr3B,OAAQ,CAAEgK,UAGZmsB,EAAWvrB,KAAK,CACdc,QAAS6qB,EAASrrB,KAAK,aAAa,GACpC8B,SAAU,aACVE,OAAQ,QACRmpB,SAAU,qFACVnf,WAAY,yCACZ6N,MAAOhmB,EAAO43B,iBACdY,QAAS,KACPx4B,EAAOygB,KAAK9Y,QAAQ,GAEtB,EAGJ3H,EAAOy4B,eAAkBV,WAChB/3B,EAAO23B,SAASI,EAAOD,cAC9B93B,EAAOo4B,yBACPp4B,EAAOygB,KAAKna,SAAS,EAGvBtG,EAAO04B,eAAiB,KACfv3B,EAAAA,EAAAA,KAAInB,EAAOygB,KAAK7G,YAAa3Y,GAC3B6jB,GAAAA,GAAAA,WAAoB7jB,EAAOyJ,SAItC1K,EAAOo4B,uBAAyB,KAC9Bp4B,EAAO03B,iBAAmB,IAC1BhiB,EAAAA,EAAAA,MAAK1V,EAAOy3B,cAAeM,IACzB,MAAMvvB,EAAQxI,EAAO23B,SAASI,EAAOD,eACjChD,EAAAA,EAAAA,aAAYtsB,IAGhBxI,EAAO03B,iBAAiBpwB,KAAK,CAC3BvJ,KAAMg6B,EAAO3rB,KACb0rB,aAAcC,EAAOD,aACrBtvB,MAAOzJ,OAAOyJ,IACd,GACF,EAGJxI,EAAO63B,kBAAkB,OAAQ,OAAQ,EAAC,GAAM,IAChD73B,EAAO63B,kBAAkB,QAAS,QAAS,EAAC,GAAM,IAClD73B,EAAO63B,kBAAkB,YAAa,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC7E73B,EAAO63B,kBAAkB,gBAAiB,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACzF73B,EAAO63B,kBAAkB,aAAc,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACnF73B,EAAO63B,kBAAkB,kBAAmB,gBAAiB,CAAC,YAAa,OAAQ,iBACnF73B,EAAO63B,kBAAkB,gBAAiB,cAAe73B,EAAO04B,kBAChE14B,EAAO63B,kBAAkB,iBAAkB,cAAe,EAAC,GAAM,IACjE73B,EAAO63B,kBAAkB,SAAU,SAAU,EAAC,GAAM,IACpD73B,EAAO63B,kBAAkB,gBAAiB,eAAgB,EAAC,GAAM,IACjE73B,EAAO63B,kBACL,cACA,aACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEtE73B,EAAO63B,kBACL,aACA,cACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEtE73B,EAAO63B,kBAAkB,SAAU,SAAU,EAAC,GAAM,IACpD73B,EAAO63B,kBAAkB,gBAAiB,cAAe,CAAC,EAAG,EAAG,EAAG,EAAG,IACtE73B,EAAO63B,kBAAkB,QAAS,QAAS,EAAC,GAAM,EAAO,IAAK,IAAK,IAAK,MACxE73B,EAAO63B,kBAAkB,QAAS,QAAS,CAAC,WAC5C73B,EAAO63B,kBAAkB,SAAU,QAAS,CAAC,EAAG,IAChD73B,EAAO63B,kBAAkB,UAAW,SAAU,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IACpE73B,EAAO63B,kBAAkB,YAAa,YAAa,CAAC,WAAY,eAChE73B,EAAO63B,kBAAkB,SAAU,SAAU,EAAC,GAAM,IACpD73B,EAAO63B,kBAAkB,kBAAmB,cAAe,EAAC,GAAM,IAClE73B,EAAOo4B,wBACT,C,yHFw0BAO,EAAAA,GAAAA,UAAqB,eAAgBxB,I,8CEt0BrCwB,EAAAA,GAAAA,WAAsB,sBAAuBpB,IClItC,MAAMqB,GAMX97B,YAAoBkD,GAAa,wEAHtB,GAAK,KAGIA,OAAAA,CAAc,CAElC64B,UACE97B,KAAK6E,MAAQ7E,KAAKmS,UAAUtN,MAExB7E,KAAK6E,MAAMmG,QAAUlC,EAAAA,GAAAA,yBACvB9I,KAAK+7B,UAAW,GAGlB,MAAMC,EAAgBh8B,KAAKiD,OAAOiG,IAAI,YAAY,KAChDlJ,KAAKmS,UAAUiZ,mBAAoB,EACnCprB,KAAKmS,UAAUvH,SACfoxB,GAAe,IAGjBh8B,KAAKmS,UAAUiZ,mBAAoB,CACrC,CAEA6Q,eACEj8B,KAAK6E,MAAMwG,WAAWd,KAAK,CACzBkB,WAAO/I,EACPyJ,UAAW,WACXR,GAAI,KACJI,MAAM,EACNG,MAAM,EACNiO,MAAO,SAETna,KAAKmS,UAAUvH,QACjB,CAEAsxB,gBAAgBjyB,GACdjK,KAAK6E,MAAMwG,WAAWf,OAAOL,EAAO,GACpCjK,KAAKmS,UAAUvH,QACjB,CAEAA,SACE5K,KAAKmS,UAAUvH,QACjB,CAEAuxB,kBAAkBlyB,GAChB,OAAQmyB,IACNp8B,KAAK6E,MAAMwG,WAAWpB,GAAO2Y,UAAYwZ,EACzCp8B,KAAK4K,QAAQ,CAEjB,CAEAyxB,kBAAkBpyB,GAChB,OAAQmyB,IACNp8B,KAAK6E,MAAMwG,WAAWpB,GAAO2hB,UAAYwQ,EACzCp8B,KAAK4K,QAAQ,CAEjB,CAEA0xB,sBAAsBryB,GAE2B,WAA3CjK,KAAK6E,MAAMwG,WAAWpB,GAAOkC,YAC/BnM,KAAK6E,MAAMwG,WAAWpB,GAAO2Y,UAAYI,KAAUla,EAAAA,GAAAA,OAAAA,GAAAA,QAAAA,QAAiCoa,SAAS,IAAKC,cAClGnjB,KAAK6E,MAAMwG,WAAWpB,GAAO2hB,UAAY5I,KAAUla,EAAAA,GAAAA,OAAAA,GAAAA,QAAAA,QAAiCoa,SAAS,IAAKC,eAEpGnjB,KAAKmS,UAAUvH,QACjB,E,yHACD,sBAEDgxB,EAAAA,GAAAA,UAAqB,sBAAsB,KAClC,CACLtB,SAAU,IACVjwB,YAAa,sDACbkyB,WAAYV,GACZW,kBAAkB,EAClBC,aAAc,OACdvqB,MAAO,CACLC,UAAW,SC7EV,MAAMuqB,GAOX38B,YAAoBkD,GAAa,wEAJtB,GAAK,kCAIIA,OAAAA,CAAc,CAElC64B,UACE97B,KAAK6E,MAAQ7E,KAAKmS,UAAUtN,MAE5B,MAAMm3B,EAAgBh8B,KAAKiD,OAAOiG,IAAI,YAAY,KAChDlJ,KAAKmS,UAAUwqB,oBAAqB,EACpC38B,KAAKmS,UAAUvH,SACfoxB,GAAe,IAGjBh8B,KAAKotB,YLiBAhpB,EAAAA,EAAAA,KAAI5B,OAAOC,KAAK2qB,KAAc7qB,IAC5B,CACLA,MACAkJ,MAAO2hB,GAAW7qB,GAAKwH,UKnBzB/J,KAAKmS,UAAUwqB,oBAAqB,CACtC,CAEA/xB,SACE5K,KAAKmS,UAAUvH,QACjB,CAEAgyB,gBACE58B,KAAK6E,MAAMupB,YAAY7jB,KAAK,CAC1BoB,GAAI,OACJsgB,mBAAevpB,EACf6L,UAAM7L,EACNwpB,iBAAaxpB,EACb8O,QAAI9O,EACJyJ,UAAW,cACXJ,MAAM,EACNG,MAAM,EAEN0W,UAAW,4BACXgJ,UAAW,4BAEb5rB,KAAKmS,UAAUvH,QACjB,CAEAiyB,iBAAiB5yB,GACfjK,KAAK6E,MAAMupB,YAAY9jB,OAAOL,EAAO,GACrCjK,KAAKmS,UAAUvH,QACjB,CAEAuxB,kBAAkBlyB,GAChB,OAAQmyB,IACNp8B,KAAK6E,MAAMupB,YAAYnkB,GAAO2Y,UAAYwZ,EAC1Cp8B,KAAK4K,QAAQ,CAEjB,CAEAyxB,kBAAkBpyB,GAChB,OAAQmyB,IACNp8B,KAAK6E,MAAMupB,YAAYnkB,GAAO2hB,UAAYwQ,EAC1Cp8B,KAAK4K,QAAQ,CAEjB,EACD,sBAEDgxB,EAAAA,GAAAA,UAAqB,uBAAuB,KACnC,CACLtB,SAAU,IACVjwB,YAAa,wDACbkyB,WAAYG,GACZF,kBAAkB,EAClBC,aAAc,OACdvqB,MAAO,CACLC,UAAW,S,gBClEV,SAAS2qB,GACdC,EACAC,EACAx4B,EACA6L,GAEA,SAAS4sB,EAAehQ,GACtB,IACE,OAAO8P,EAAU9P,EAInB,CAHE,MAAOxmB,GAEP,OADAE,QAAQC,IAAI,gEACLs2B,EAAAA,EAAAA,QAAOjQ,EAChB,CACF,CAEA,MAAO,CACLqN,SAAU,IACVpoB,MAAO,CACLzI,MAAO,IACPmH,OAAQ,KAEVwe,KAAM,CAACld,EAAYtC,KACjB,MAAMnG,EAAQyI,EAAMzI,MACpB,IAAIM,EAAQN,EAAMM,MACdsF,EAAO5F,EAAM4F,KACjB,MAAM5H,EAAYu1B,EAAaG,aAE/B,IAAIpuB,EAAU,iCACVquB,EAAkB,GAEtB,QAAsB16B,IAAlB+G,EAAM4zB,SAAyB5zB,EAAM8Y,SAAU,CACjD,MAAM+a,EAAaC,GAAAA,EAAAA,qBAA8B9zB,EAAM8Y,UACvD6a,EAAkBE,EAAWnU,WAC7Bpf,EAAS,aAAYuzB,EAAWE,mBAAmBF,EAAWjuB,OAC9DA,EAAOkuB,GAAAA,EAAAA,uBAAgC9zB,GACnCA,EAAM4F,OACRA,EAAOA,EAAO,SAAW5F,EAAM4F,KAEnC,MAAWtF,IACTsF,EAAOtF,EAAQ,WAAYK,EAAAA,EAAAA,UAASiF,GAAQA,EAAO,IACnDtF,EAAQ,IAGV,IAAI0zB,EAAU,yCACVh0B,EAAMi0B,OAASj0B,EAAMk0B,YACvBF,GAAW,+DAA8Dh0B,EAAMi0B,qBAAqBj0B,EAAMk0B,uBAE5GF,GAAW,oDACgCL,MAAoBH,EAAelzB,6DACnCtC,aAAS,EAATA,EAAWmgB,WAAWne,EAAMiM,sBAInEjM,EAAMlC,IAANkC,MAAYhC,GAAAA,EAAWm2B,mBAAmBn0B,EAAMjC,eAClDi2B,GAAW,oKAObA,GAAW,SACX1uB,GAAW0uB,EACX1uB,GAAW,uCAEPM,IACFN,GAAW,wBAA0BkuB,EAAe5tB,EAAK7O,QAAQ,MAAO,SAAW,UAGrF,MAAMq9B,EAAOp0B,EAAMo0B,KAEfA,GAAQA,EAAK37B,SACfgQ,EAAM2rB,KAAOA,EACb9uB,GACE,6GAGJA,GAAW,SACXA,GAAW,SAEMiG,IAAEjG,GACVwI,SAAS3H,GAElBS,EAAST,EAAQkuB,WAAjBztB,CAA6B6B,EAAM,EAGzC,C,gEAEA0pB,EAAAA,GAAAA,UAAqB,oBAAqBkB,I,iKCvFnC,MAAMiB,GAWXh+B,cAAc,6JAAC,CAEf+7B,UACE97B,KAAKyJ,MAAMnC,QAAUtH,KAAKmS,UAAUtN,MAAM0C,GAC1CvH,KAAKyJ,MAAM2X,aAAephB,KAAKmS,UAAU1K,UAAU4Z,IAGnDrhB,KAAKyJ,MAAM6X,KAAO0c,GAAiBh+B,KAAKyJ,MAAM6X,MAC1CthB,KAAKyJ,MAAM8X,WACbvhB,KAAKyJ,MAAMqM,QAAUkoB,GAAiBh+B,KAAKyJ,MAAMqM,UAGnD9V,KAAKi+B,aAAej+B,KAAKmS,UAAU1K,UAAUmgB,WAAW5nB,KAAKyJ,MAAM6X,KACrE,CAEA4c,YACyC,MACO,EAD9C,OAAI15B,GAAAA,GAAAA,yBAC6B,cAA3BxE,KAAKyJ,MAAMoZ,OAAO9Z,OACyC,QAArD,EAAC/I,KAAKmS,UAAU1K,UAAUQ,KAAKk2B,8BAAsB,QAApD,EAAsD12B,UAAUy2B,aAEd,QAArD,EAACl+B,KAAKmS,UAAU1K,UAAUQ,KAAKk2B,8BAAsB,QAApD,EAAsDC,aAAaF,WAGhF,CAEAxzB,aACE,IAAK1K,KAAKq+B,KAAKC,OACb,OAGF,MAAMC,GAAYC,EAAAA,EAAAA,WAAUx+B,KAAKyJ,OAIjC,GAHA80B,EAAUjd,KAAOid,EAAUjd,KAAMjU,UACjCkxB,EAAUzoB,QAAU,EAEhByoB,EAAUhd,WACZgd,EAAUzoB,QAAU9V,KAAKyJ,MAAMqM,QAASzI,UAEpCkxB,EAAUzoB,QAAUyoB,EAAUjd,MAEhC,YADA3a,QAAQC,IAAI,gBAKhB,IAAI63B,EAAeC,GAAAA,GACfH,EAAUh3B,KACZk3B,EAAeE,GAAAA,IAGjB,UACQF,EAAaF,EAMrB,CALE,MAAO93B,GACPE,QAAQC,IAAIH,EACd,CAAE,QACAzG,KAAKoS,SACLwsB,EAAAA,GAAAA,MAA0Bz3B,IAAI,CAAEM,UAAWzH,KAAKmS,UAAU1K,UAAW1D,MAAO/D,KAAKmS,UAAUpO,OAC7F,CACF,CAEA2G,eACE,UACQm0B,EAAAA,GAAAA,IAAiB7+B,KAAKyJ,MAM9B,CALE,MAAOhD,GACPE,QAAQC,IAAIH,EACd,CAAE,QACAzG,KAAKoS,SACLwsB,EAAAA,GAAAA,MAA0Bz3B,IAAI,CAAEM,UAAWzH,KAAKmS,UAAU1K,UAAW1D,MAAO/D,KAAKmS,UAAUpO,OAC7F,CACF,EAGF,SAASi6B,GAAiBc,GACxB,GAAIA,IAAahU,EAAAA,EAAAA,UAASgU,GAAY,CACpC,MAAMC,EAAQ3X,OAAO0X,GACrB,OAAO1xB,EAAAA,EAAAA,IAAS2xB,EAClB,CACE,OAAOD,CAEX,CATC,cA0BDlD,EAAAA,GAAAA,UAAqB,eAfd,WACL,MAAO,CACLtB,SAAU,IACViC,WAAYwB,GACZvB,kBAAkB,EAClBC,aAAc,OACdpyB,YAAa,6DACb6H,MAAO,CACLC,UAAW,IACX1I,MAAO,IACP2I,MAAO,KAGb,I,iPC9GO,MAAM4sB,GAYXj/B,YAAYkD,GAAa,oHARkB,MAAI,mBAI3C,CAAE4V,EAAG,EAAGqR,EAAG,IAAG,+CASR,KACJlqB,KAAKqxB,sBACPrxB,KAAKqxB,qBAAqBhH,oBAAoB,SAAUrqB,KAAKy7B,SAG/Dz7B,KAAKkS,MAAMoY,QAAO,KAChBtqB,KAAKi/B,WAAY,CAAK,GACtB,IACH,sBAEax1B,IACZzJ,KAAKi/B,WAAaj/B,KAAKi/B,UACnBj/B,KAAKi/B,WAAaj/B,KAAKqxB,sBACzBrxB,KAAKqxB,qBAAqBvH,iBAAiB,SAAU9pB,KAAKy7B,SAGxDz7B,KAAK6iB,OACP7iB,KAAKkR,SAAW,CACd2H,EAAG7Y,KAAK6iB,OAAOqC,MACfgF,EAAGlqB,KAAK6iB,OAAOsC,OAGjBnlB,KAAKkR,SAAW,CACd2H,EAAGpP,EAAQA,EAAMyb,MAAQ,EACzBgF,EAAGzgB,EAAQA,EAAM0b,MAAQ,EAE7B,IACD,mCAI0B+Z,IACzBl/B,KAAKqxB,qBAAuB6N,CAAE,IAC/B,qBAEYrc,IACX7iB,KAAK6iB,OAASA,CAAM,IACrB,qBAEW,IACH7iB,KAAK6iB,SACb,gCAEuBsc,IACtBn/B,KAAKm/B,kBAAoBA,CAAiB,IAhD1Cn/B,KAAKi/B,WAAY,EACjBj/B,KAAKkS,MAAQjP,CACf,E,yHCdK,MAAMm8B,GAUXr/B,YAAoBkD,GAAa,gNAAbA,OAAAA,EAClBjD,KAAKmS,UAAYlP,EAAOygB,KACxB1jB,KAAK6E,MAAQ7E,KAAKmS,UAAUtN,MAC5B7E,KAAKiD,OAAOygB,KAAO1jB,KAEnBA,KAAKq/B,UAAY,CACfC,OAAQ,EACR,eAAgB,EAChB,gBAAiB,GACjB,gBAAiB,GACjB,kBAAmB,MAGrBt/B,KAAKu/B,WAAa,CAChBC,KAAM,OACNC,OAAQ,SACRC,UAAW,aAIb1/B,KAAK2/B,iBAAmB,CACtB,CAAEtwB,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,MAAO5D,MAAO,OACtB,CAAE4D,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,UAAW5D,MAAO,YAGE,WAA1BzL,KAAK6E,MAAM0I,MAAMC,OACdxN,KAAK6E,MAAM0I,MAAMvM,OACpBhB,KAAK6E,MAAM0I,MAAMvM,KAAO,kBAG5BhB,KAAK6b,UAAYA,EAAAA,GAAAA,WAAAA,OAAAA,cAAAA,MAAAA,gBACnB,CAEA+jB,cAAcrgB,GACZ,OAAQlR,IACNkR,EAAK4Z,OAAS9qB,EAEVrO,KAAK6E,MAAMotB,YAAY2G,SAASvqB,MAClCrO,KAAK6E,MAAMotB,YAAY2G,SAASvqB,UAAO3L,EACvC1C,KAAKmS,UAAU5I,WAEfvJ,KAAKmS,UAAUvH,QACjB,CAEJ,CAEAA,SACE5K,KAAKmS,UAAUvH,QACjB,CAEAi1B,mBACE7/B,KAAKmS,UAAU2tB,UAAUrxB,kCACzBzO,KAAKmS,UAAU4tB,qBAAqB//B,KAAKmS,UAAU5F,SACrD,CAEAyzB,oBACEhgC,KAAKmS,UAAU4tB,qBAAqB//B,KAAKmS,UAAU5F,SACrD,EAIK,SAAS0zB,KAEd,MAAO,CACL3F,SAAU,IACVpoB,OAAO,EACP7H,YAAa,kDACbkyB,WAAY6C,GAEhB,CAXC,sB,yIC5CM,MAAMc,WAAkBn9B,GAAAA,EAmH7BhD,YAAYkD,EAAaC,GACvBC,MAAMF,EAAQC,GAAW,uBAjHb,GAAK,uBACC,CAAC,GAAC,+BACA,GAAK,qBACA,IAAE,mBACL,IAAE,sBACP,IAAE,4EAIP,IAAE,sBACF,GAAC,sFAIM,CAEnB4B,WAAY,KAEZq7B,SAAU,OACVzO,MAAO,CACL,CACElW,MAAO,KACP1M,MAAM,EACN+pB,QAAS,EACTnjB,IAAK,KACL4C,IAAK,KACL6gB,OAAQ,SAEV,CACE3d,MAAO,KACP1M,MAAM,EACN+pB,QAAS,EACTnjB,IAAK,KACL4C,IAAK,KACL6gB,OAAQ,UAGZ5rB,MAAO,CACLuB,MAAM,EACNtB,KAAM,OACNxM,KAAM,KACNmM,OAAQ,GACRsoB,QAAS,MAEXtb,MAAO,CACL+Z,OAAO,EACPC,WAAY,MAGdxlB,OAAO,EAEP5C,KAAM,EAENwqB,aAAc,EAEdC,UAAW,EAEXhC,QAAQ,EAERjY,cAAc,EAEdma,WAAY,GAEZC,YAAa,GAEb/nB,QAAQ,EAERioB,YAAa,EAEbnoB,MAAM,EAENjB,OAAO,EAEP2oB,YAAY,EAEZvnB,OAAQ,CACNC,MAAM,EACN3B,QAAQ,EACRuI,KAAK,EACL4C,KAAK,EACLsF,SAAS,EACTC,OAAO,EACPF,KAAK,GAGPoX,cAAe,OAEf0B,aAAa,EAEb1nB,QAAS,CACPiX,WAAY,aACZhX,QAAQ,EACRqG,KAAM,GAGR+C,SAAU,KACVgoB,UAAW,KAEX/4B,QAAS,CAAC,CAAC,GAEX8G,YAAa,CAAC,EAEdkyB,gBAAiB,GACjBh1B,WAAY,GACZ+iB,YAAa,GACbpiB,QAAS,CAEPC,gBAAgB,KAEnB,yBA0Je,CAAC/H,EAAagK,KAC5BhK,EAAOo8B,SAASx3B,EAAAA,GAAAA,OAAAA,cAAAA,eAA2CoF,IAC3DlO,KAAK6E,MAAMsJ,YAAYjK,EAAOyJ,OAASO,EACvClO,KAAK4K,QAAQ,IACd,0BAEiB2R,IAChBvc,KAAKugC,qBAAsB,EAC3BvgC,KAAKuc,aAAeA,EACpBvc,KAAK4K,QAAQ,IACd,wBAEc,CAACkS,EAAaI,KAC3Bld,KAAK6E,MAAMgK,OAAOwG,KAAOyH,EACzB9c,KAAK6E,MAAMgK,OAAOqO,SAAWA,EAC7Bld,KAAK4K,QAAQ,IACd,wBAEewP,IACd,IAAIwgB,GAAgBxrB,EAAAA,EAAAA,MAAKpP,KAAK6E,MAAMw7B,gBAAiB,CAAE1yB,MAAOyM,EAAKzM,QAC9DitB,IACHA,EAAW,CAAEjtB,MAAOyM,EAAKzM,OACzB3N,KAAK6E,MAAMw7B,gBAAgB91B,KAAKqwB,IAElCA,EAASzgB,MAAQC,EAAKD,MACtBna,KAAK4K,QAAQ,IACd,8BAsBoB,KACnB5K,KAAKsvB,gBAAgB0D,YAAY,IAClC,uBAEa,IAAMhzB,KAAKyH,UAAUE,gBAAa,+BAEzB64B,GACdxgC,KAAKuM,SAAS0R,QAAQ0T,GAAcA,EAAU6O,QAAUA,IAAO,MA3MtE5H,EAAAA,EAAAA,UAAS54B,KAAK6E,MAAO7E,KAAKygC,gBAC1B7H,EAAAA,EAAAA,UAAS54B,KAAK6E,MAAMkK,QAAS/O,KAAKygC,cAAc1xB,UAChD6pB,EAAAA,EAAAA,UAAS54B,KAAK6E,MAAMgK,OAAQ7O,KAAKygC,cAAc5xB,SAC/C+pB,EAAAA,EAAAA,UAAS54B,KAAK6E,MAAM0I,MAAOvN,KAAKygC,cAAclzB,QAC9CqrB,EAAAA,EAAAA,UAAS54B,KAAK6E,MAAMmH,QAAShM,KAAKygC,cAAcz0B,SAEhDhM,KAAKgE,eAAgB,EACrBhE,KAAK8/B,UAAY,IAAI1zB,GAAAA,EAAcpM,KAAK6E,OACxC7E,KAAKsvB,gBAAkB,IAAI0P,GAAqB/7B,GAEhDjD,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,OAAoBjF,KAAK4vB,SAASzqB,KAAKnF,OACtDA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,mBAAgCjF,KAAK+/B,qBAAqB56B,KAAKnF,OAC9EA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,iBAA8BjF,KAAK0gC,mBAAmBv7B,KAAKnF,OAC1EA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,oBAAiCjF,KAAK2gC,eAAex7B,KAAKnF,OACzEA,KAAK+E,OAAOC,GAAGC,EAAAA,GAAAA,iBAA8BjF,KAAK4gC,mBAAmBz7B,KAAKnF,OAG1E,MAAM6gC,EAAkB7gC,KAAK6E,MAAMotB,YAAY2G,SAASvqB,KACpDwyB,IACF7gC,KAAK6E,MAAM6sB,MAAM,GAAGyH,OAAS0H,EAEjC,CAEAF,iBACE3gC,KAAK8J,aAAa,UAAW,mDAC7B9J,KAAK8J,aAAa,mBAAoB,4DACtC9J,KAAK8J,aAAa,OAAQm2B,IAC1BjgC,KAAK8J,aAAa,SAAU,kDAC5B9J,KAAK8J,aAAa,aAAc,sDAChC9J,KAAK8J,aAAa,eAAgB,wDAClC9J,KAAK8gC,YAAc,EACnB9gC,KAAKugC,qBAAsB,CAC7B,CAEAK,mBAAmBG,GACjBA,EAAQx2B,KAAK,CAAE8E,KAAM,gBAAiBukB,MAAO,sBAAuBoN,SAAU,OAChF,CAEAC,QAAQ5X,GACN3C,EAAAA,GAAAA,QAAkB,IAAIwa,GAAAA,GAAa,CAAEC,MAAO,IAC9C,CAEAT,mBAAmB16B,GACjB,MAAM,OAAE9B,EAAM,YAAEwd,IAAgB0f,EAAAA,GAAAA,GAAiBphC,KAAK6E,MAAO7E,KAAKyH,WAClEzH,KAAKsD,UAAWoe,YAAcA,EAC9B1hB,KAAK+/B,qBAAqB77B,EAC5B,CAEA67B,qBAAqB18B,GAAmB,MACtCrD,KAAKuM,SAAWlJ,EAChBrD,KAAK6c,WAAa7c,KAAK8/B,UAAUzzB,cAAc,CAC7CE,SAAUvM,KAAKuM,SACfxI,MAAO/D,KAAK+D,QAGd/D,KAAKwzB,YAAcxzB,KAAKqhC,iBAExBrhC,KAAKshC,gBAAa5+B,EACjB1C,KAAK6c,WAAmBykB,gBAAa5+B,EAClC1C,KAAKsD,UAAWg+B,aAClBthC,KAAKshC,WAAathC,KAAKsD,UAAWg+B,WACjCthC,KAAK6c,WAAmBykB,WAAathC,KAAKshC,WAAW5gC,OAGxDV,KAAK0hB,YAAc,GACY,QAA/B,EAAI1hB,KAAKsD,UAAWoe,mBAAW,OAA3B,EAA6Bxf,SAC/BlC,KAAK0hB,aAAc6f,EAAAA,GAAAA,IAA0BvhC,KAAKsD,UAAWoe,cAG/D1hB,KAAKwD,SAAU,EACfxD,KAAK4K,OAAO5K,KAAK6c,WACnB,CAEAwkB,iBAKE,GAAwB,IAJArhC,KAAK6c,WAAW2kB,QAAO,CAACC,EAAMv9B,IAC7Cu9B,EAAOv9B,EAAO+I,WAAW/K,QAC/B,GAEwB,CACzB,GAAIlC,KAAKuM,SACP,IAAK,MAAMlE,KAASrI,KAAKuM,SAAU,OACjC,GAAIlE,EAAMnG,QAAsB,QAAhB,EAAImG,EAAMwE,cAAM,OAAZ,EAAc3K,OAChC,MAAO,CACL6H,MAAO,uBACP23B,IAAK,qCACL/N,WAAY,uBACZD,OAAQ,MACNiO,EAAAA,GAAAA,KAASC,EAAAA,GAAAA,IAAkB,CAAE/8B,MAAO7E,KAAK6E,MAAOmE,SAAU,UAAW,EAI7E,CAGF,MAAO,CACLe,MAAO,UACP23B,IAAK,8BAET,CAGA,IAAK,MAAMx9B,KAAUlE,KAAK6c,WACxB,IAAK3Y,EAAOsK,eACV,OAKJ,MAAMglB,EAA2B,CAC/BzpB,MAAO,0BACP23B,IAAK,sEAGD39B,ER3PH,SAA0B89B,GAC/B,MAAM99B,EAA2B,CAC/BwK,KAAM6Y,OAAO0a,iBACbtwB,GAAI4V,OAAO2a,kBAEb,IAAIC,GAAQ,EACZ,MAAMC,EAAW,CAACC,GAAAA,GAAAA,IAAeA,GAAAA,GAAAA,KACjC,IAAK,MAAM75B,KAASw5B,EAClB,IAAK,MAAM/0B,KAASzE,EAAMwE,OACxB,GAAIC,EAAM/D,OAASgE,EAAAA,GAAAA,KAAgB,CACjC,MAAMo1B,GAAQC,EAAAA,GAAAA,IAAY,CAAEt1B,QAAOm1B,aACnCl+B,EAAMwK,KAAOkJ,KAAK/B,IAAI3R,EAAMwK,KAAM4zB,EAAMD,GAAAA,GAAAA,MACxCn+B,EAAMyN,GAAKiG,KAAKa,IAAIvU,EAAMyN,GAAI2wB,EAAMD,GAAAA,GAAAA,MACpCF,GAAQ,CACV,CAGJ,OAAOA,EAAQj+B,OAAQrB,CACzB,CQyOkB2/B,CAAiBriC,KAAKuM,UAYpC,OAVIxI,IACFyvB,EAAYG,WAAa,eACzBH,EAAYE,OAAS,KACnBjyB,GAAAA,GAAAA,QAAwB,CACtB8M,KAAMxK,EAAMwK,KACZiD,GAAIzN,EAAMyN,IACV,GAICgiB,CACT,CAEA5D,WACE,GAAK5vB,KAAK6c,WAAV,CAIA/R,GAAAA,EAAAA,uBAAuC9K,KAAK6E,OAE5C,IAAK,MAAMX,KAAUlE,KAAK6c,WACxB3Y,EAAOo+B,qBAAqBtiC,KAAK6E,MAAMw7B,iBAGnCn8B,EAAOmK,OACTrO,KAAK6E,MAAM6sB,MAAMxtB,EAAOiW,MAAQ,GAAGgf,OAASj1B,EAAOmK,OAEpB,IAA7BrO,KAAKugC,sBAAyD,IAAxBr8B,EAAOqY,eAC/Cvc,KAAKuc,aAAarY,EAAOyJ,QAAS,EAZtC,CAeF,CA8BAytB,kBAAkBR,GAChB56B,KAAK6E,MAAMw7B,gBAAgB91B,KAAKqwB,GAAY,CAAC,EAC/C,CAEA2H,qBAAqB3H,GACnB56B,KAAK6E,MAAMw7B,iBAAkBmC,EAAAA,EAAAA,SAAQxiC,KAAK6E,MAAMw7B,gBAAiBzF,GACjE56B,KAAK4K,QACP,CAEA63B,eACEziC,KAAK6E,MAAMgK,OAAOC,MAAQ9O,KAAK6E,MAAMgK,OAAOC,KAC5C9O,KAAK4K,QACP,CAEA83B,4BACE,MAAM7zB,EAAS7O,KAAK6E,MAAMgK,OAC1BA,EAAO1B,OAAS0B,EAAO6G,KAAO7G,EAAOyJ,KAAOzJ,EAAO8O,KAAO9O,EAAO+O,SAAW/O,EAAOgP,MACnF7d,KAAK4K,QACP,CAYA+3B,iBACE3iC,KAAK4iC,mBAAmB95B,EAAAA,GAAAA,OAAAA,WAC1B,EACD,qCAvUYo3B,GAAS,WChCJ,6rBD0WX,MAAM13B,GAAS,IAAIq6B,GAAAA,EAAiD,MACxEC,eAAe,CACdC,uBAAwB,CACtBC,GAAAA,GAAAA,QACAA,GAAAA,GAAAA,WACAA,GAAAA,GAAAA,IACAA,GAAAA,GAAAA,IACAA,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,MACAA,GAAAA,GAAAA,YAGHC,eAAe,CAAEvhB,aAAa,EAAMwhB,aAAa,IACjDC,qBElXwCt+B,IAAyC,MAClF,MAAMotB,EAAkD,QAApB,EAAGptB,EAAMotB,mBAAW,QAAI,CAC1D2G,SAAU,CAAC,EACXwK,UAAW,IAGPp3B,EAAUnH,EAAMmH,SAAW,CAAC,EAWlC,OARIA,EAAQijB,YACVgD,EAAY2G,SAAS9G,MAAQ9lB,EAAQijB,iBAC9BjjB,EAAQijB,WAIjBpqB,EAAMmH,QAAUA,EAChBnH,EAAMotB,YAAcA,EACbjmB,CAAO,IFoWhBxD,GAAO66B,iBAAmBnD,E","sources":["webpack://grafana/./public/app/angular/AngularLocationWrapper.ts","webpack://grafana/./public/app/angular/panel/metrics_panel_ctrl.ts","webpack://grafana/./public/app/angular/panel/panel_ctrl.ts","webpack://grafana/./public/app/features/alerting/state/ThresholdMapper.ts","webpack://grafana/./public/app/plugins/panel/graph/data_processor.ts","webpack://grafana/./public/app/plugins/panel/graph/jquery.flot.events.ts","webpack://grafana/./public/app/plugins/panel/graph/Legend/LegendSeriesItem.tsx","webpack://grafana/./public/app/plugins/panel/graph/Legend/Legend.tsx","webpack://grafana/./public/app/plugins/panel/graph/align_yaxes.ts","webpack://grafana/./public/app/plugins/panel/graph/event_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/graph_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/histogram.ts","webpack://grafana/./public/app/plugins/panel/graph/threshold_manager.ts","webpack://grafana/./public/app/core/utils/timeRegions.ts","webpack://grafana/./public/app/plugins/panel/graph/time_region_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/graph.ts","webpack://grafana/./public/app/plugins/panel/graph/utils.ts","webpack://grafana/./public/app/plugins/panel/graph/series_overrides_ctrl.ts","webpack://grafana/./public/app/plugins/panel/graph/thresholds_form.ts","webpack://grafana/./public/app/plugins/panel/graph/time_regions_form.ts","webpack://grafana/./public/app/plugins/panel/graph/annotation_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/event_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphContextMenuCtrl.ts","webpack://grafana/./public/app/plugins/panel/graph/axes_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/module.ts","webpack://grafana/./public/app/plugins/panel/graph/template.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphMigrations.ts"],"sourcesContent":["import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime';\n\n// Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\nconst DEFAULT_PORTS: Record<string, number> = { http: 80, https: 443, ftp: 21 };\n\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn: Function, replacement?: string) {\n    let self = this;\n\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl(): string {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash?: string | null) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host(): string {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash,\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port(): number | null {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol(): string {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search?: any, paramValue?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue,\n      });\n\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = { ...search };\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key of Object.keys(newQuery)) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push({ ...locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith('?')) {\n        locationService.push({ ...locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n","import { isArray } from 'lodash';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  DataFrame,\n  DataQueryResponse,\n  DataSourceApi,\n  LegacyResponseData,\n  LoadingState,\n  PanelData,\n  PanelEvents,\n  TimeRange,\n  toDataFrameDTO,\n  toLegacyResponseData,\n} from '@grafana/data';\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { applyPanelTimeOverrides } from 'app/features/dashboard/utils/panel';\n\nimport { PanelQueryRunner } from '../../features/query/state/PanelQueryRunner';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  declare datasource: DataSourceApi;\n  declare range: TimeRange;\n\n  contextSrv: ContextSrv;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo?: string;\n  skipDataOnInit = false;\n  dataList: LegacyResponseData[] = [];\n  querySubscription?: Unsubscribable | null;\n  useDataFrames = false;\n  panelData?: PanelData;\n\n  constructor($scope: any, $injector: any) {\n    super($scope, $injector);\n\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.panel.datasource = this.panel.datasource || null;\n\n    this.events.on(PanelEvents.refresh, this.onMetricsPanelRefresh.bind(this));\n    this.events.on(PanelEvents.panelTeardown, this.onPanelTearDown.bind(this));\n    this.events.on(PanelEvents.componentDidMount, this.onMetricsPanelMounted.bind(this));\n  }\n\n  private onMetricsPanelMounted() {\n    const queryRunner = this.panel.getQueryRunner() as PanelQueryRunner;\n    this.querySubscription = queryRunner\n      .getData({ withTransforms: true, withFieldConfig: true })\n      .subscribe(this.panelDataObserver);\n  }\n\n  private onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      // backward compatibility\n      if (!isArray(data)) {\n        data = data.data;\n      }\n\n      this.panelData = {\n        state: LoadingState.Done,\n        series: data,\n        timeRange: this.range,\n      };\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit(PanelEvents.dataSnapshotLoad, data);\n      });\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    return this.datasourceSrv\n      .get(this.panel.datasource, this.panel.scopedVars)\n      .then(this.issueQueries.bind(this))\n      .catch((err: any) => {\n        this.processDataError(err);\n      });\n  }\n\n  processDataError(err: any) {\n    // if canceled  keep loading set to true\n    if (err.cancelled) {\n      console.log('Panel request cancelled', err);\n      return;\n    }\n\n    this.error = err.message || 'Request Error';\n\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      } else if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    this.angularDirtyCheck();\n  }\n\n  angularDirtyCheck() {\n    if (!this.$scope.$root.$$phase) {\n      this.$scope.$digest();\n    }\n  }\n\n  // Updates the response with information from the stream\n  panelDataObserver = {\n    next: (data: PanelData) => {\n      this.panelData = data;\n\n      if (data.state === LoadingState.Error) {\n        this.loading = false;\n        this.processDataError(data.error);\n      }\n\n      // Ignore data in loading state\n      if (data.state === LoadingState.Loading) {\n        this.loading = true;\n        this.angularDirtyCheck();\n        return;\n      }\n\n      if (data.request) {\n        const { timeInfo } = data.request;\n        if (timeInfo) {\n          this.timeInfo = timeInfo;\n        }\n      }\n\n      if (data.timeRange) {\n        this.range = data.timeRange;\n      }\n\n      if (this.useDataFrames) {\n        this.handleDataFrames(data.series);\n      } else {\n        // Make the results look as if they came directly from a <6.2 datasource request\n        const legacy = data.series.map((v) => toLegacyResponseData(v));\n        this.handleQueryResult({ data: legacy });\n      }\n\n      this.angularDirtyCheck();\n    },\n  };\n\n  updateTimeRange(datasource?: DataSourceApi) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n\n    const newTimeData = applyPanelTimeOverrides(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n  }\n\n  issueQueries(datasource: DataSourceApi) {\n    this.updateTimeRange(datasource);\n\n    this.datasource = datasource;\n\n    const panel = this.panel as PanelModel;\n    const queryRunner = panel.getQueryRunner();\n\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardId: this.dashboard.id,\n      timezone: this.dashboard.getTimezone(),\n      timeInfo: this.timeInfo,\n      timeRange: this.range,\n      maxDataPoints: panel.maxDataPoints || this.width,\n      minInterval: panel.interval,\n      publicDashboardAccessToken: this.dashboard.meta.publicDashboardAccessToken,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      transformations: panel.transformations,\n    });\n  }\n\n  handleDataFrames(data: DataFrame[]) {\n    this.loading = false;\n\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map((frame) => toDataFrameDTO(frame));\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataFramesReceived, data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  handleQueryResult(result: DataQueryResponse) {\n    this.loading = false;\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataReceived, result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import { auto } from 'angular';\nimport { isString } from 'lodash';\n\nimport {\n  AppEvent,\n  PanelEvents,\n  PanelPluginMeta,\n  AngularPanelMenuItem,\n  EventBusExtended,\n  EventBusSrv,\n} from '@grafana/data';\nimport { AngularLocationWrapper } from 'app/angular/AngularLocationWrapper';\nimport config from 'app/core/config';\nimport { profiler } from 'app/core/core';\n\nimport { DashboardModel } from '../../features/dashboard/state';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  declare dashboard: DashboardModel;\n  pluginName = '';\n  pluginId = '';\n  editorTabs: any;\n  $scope: any;\n  $injector: auto.IInjectorService;\n  $timeout: any;\n  editModeInitiated = false;\n  declare height: number;\n  declare width: number;\n  containerHeight: any;\n  events: EventBusExtended;\n  loading = false;\n  timing: any;\n  $location: AngularLocationWrapper;\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    this.panel = this.panel ?? $scope.$parent.panel;\n    this.dashboard = this.dashboard ?? $scope.$parent.dashboard;\n    this.$injector = $injector;\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabs = [];\n    this.$location = new AngularLocationWrapper();\n    this.events = new EventBusSrv();\n    this.timing = {}; // not used but here to not break plugins\n\n    const plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on(PanelEvents.componentDidMount.name, () => this.panelDidMount());\n  }\n\n  panelDidMount() {\n    this.events.emit(PanelEvents.componentDidMount);\n    this.events.emit(PanelEvents.initialized);\n    this.dashboard.panelInitialized(this.panel);\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted();\n  }\n\n  refresh() {\n    this.panel.refresh();\n  }\n\n  publishAppEvent<T>(event: AppEvent<T>, payload?: T) {\n    this.$scope.$root.appEvent(event, payload);\n  }\n\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit(PanelEvents.editModeInitialized);\n    }\n  }\n\n  addEditorTab(title: string, directiveFn: any, index?: number, icon?: any) {\n    const editorTab = { title, directiveFn, icon };\n\n    if (isString(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  getExtendedMenu() {\n    const menu: AngularPanelMenuItem[] = [];\n    this.events.emit(PanelEvents.initPanelActions, menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems(): Promise<any[]> {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.otherPanelInFullscreen(this.panel);\n  }\n\n  render(payload?: any) {\n    this.events.emit(PanelEvents.render, payload);\n  }\n\n  // overriden from react\n  onPluginTypeChange = (plugin: PanelPluginMeta) => {};\n}\n","import { config } from 'app/core/config';\nimport { PanelModel } from 'app/features/dashboard/state';\n\nexport const hiddenReducerTypes = ['percent_diff', 'percent_diff_abs'];\nexport class ThresholdMapper {\n  static alertToGraphThresholds(panel: PanelModel) {\n    if (!panel.alert || config.unifiedAlertingEnabled) {\n      return false; // no update when no alerts\n    }\n\n    for (let i = 0; i < panel.alert.conditions.length; i++) {\n      const condition = panel.alert.conditions[i];\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      const evaluator = condition.evaluator;\n      const thresholds: any[] = (panel.thresholds = []);\n      const visible = hiddenReducerTypes.indexOf(condition.reducer?.type) === -1;\n\n      switch (evaluator.type) {\n        case 'gt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'gt', visible });\n          break;\n        }\n        case 'lt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'lt', visible });\n          break;\n        }\n        case 'outside_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          }\n\n          break;\n        }\n        case 'within_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          }\n          break;\n        }\n      }\n      break;\n    }\n\n    for (const t of panel.thresholds) {\n      t.fill = panel.options.alertThreshold;\n      t.line = panel.options.alertThreshold;\n      t.colorMode = 'critical';\n    }\n\n    const updated = true;\n    return updated;\n  }\n}\n","import { find } from 'lodash';\n\nimport { DataFrame, dateTime, Field, FieldType, getFieldDisplayName, getTimeField, TimeRange } from '@grafana/data';\nimport { colors } from '@grafana/ui';\nimport { applyNullInsertThreshold } from '@grafana/ui/src/components/GraphNG/nullInsertThreshold';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n\ntype Options = {\n  dataList: DataFrame[];\n  range?: TimeRange;\n};\n\nexport class DataProcessor {\n  constructor(private panel: any) {}\n\n  getSeriesList(options: Options): TimeSeries[] {\n    const list: TimeSeries[] = [];\n    const { dataList, range } = options;\n\n    if (!dataList || !dataList.length) {\n      return list;\n    }\n\n    for (let i = 0; i < dataList.length; i++) {\n      let series = dataList[i];\n      let { timeField } = getTimeField(series);\n\n      if (!timeField) {\n        continue;\n      }\n\n      series = applyNullInsertThreshold({ frame: series, refFieldName: timeField.name });\n      timeField = getTimeField(series).timeField!; // use updated length\n\n      for (let j = 0; j < series.fields.length; j++) {\n        const field = series.fields[j];\n\n        if (field.type !== FieldType.number) {\n          continue;\n        }\n        const name = getFieldDisplayName(field, series, dataList);\n        const datapoints = [];\n\n        for (let r = 0; r < series.length; r++) {\n          datapoints.push([field.values.get(r), dateTime(timeField.values.get(r)).valueOf()]);\n        }\n\n        list.push(this.toTimeSeries(field, name, i, j, datapoints, list.length, range));\n      }\n    }\n\n    // Merge all the rows if we want to show a histogram\n    if (this.panel.xaxis.mode === 'histogram' && !this.panel.stack && list.length > 1) {\n      const first = list[0];\n      first.alias = first.aliasEscaped = 'Count';\n\n      for (let i = 1; i < list.length; i++) {\n        first.datapoints = first.datapoints.concat(list[i].datapoints);\n      }\n\n      return [first];\n    }\n\n    return list;\n  }\n\n  private toTimeSeries(\n    field: Field,\n    alias: string,\n    dataFrameIndex: number,\n    fieldIndex: number,\n    datapoints: any[][],\n    index: number,\n    range?: TimeRange\n  ) {\n    const colorIndex = index % colors.length;\n    const color = this.panel.aliasColors[alias] || colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints: datapoints || [],\n      alias: alias,\n      color: config.theme2.visualization.getColorByName(color),\n      unit: field.config ? field.config.unit : undefined,\n      dataFrameIndex,\n      fieldIndex,\n    });\n\n    if (datapoints && datapoints.length > 0 && range) {\n      const last = datapoints[datapoints.length - 1][1];\n      const from = range.from;\n\n      if (last - from.valueOf() < -10000) {\n        // If the data is in reverse order\n        const first = datapoints[0][1];\n        if (first - from.valueOf() < -10000) {\n          series.isOutsideRange = true;\n        }\n      }\n    }\n    return series;\n  }\n\n  setPanelDefaultsForNewXAxisMode() {\n    switch (this.panel.xaxis.mode) {\n      case 'time': {\n        this.panel.bars = false;\n        this.panel.lines = true;\n        this.panel.points = false;\n        this.panel.legend.show = true;\n        this.panel.tooltip.shared = true;\n        this.panel.xaxis.values = [];\n        break;\n      }\n      case 'series': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        this.panel.xaxis.values = ['total'];\n        break;\n      }\n      case 'histogram': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        break;\n      }\n    }\n  }\n\n  validateXAxisSeriesValue() {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        if (this.panel.xaxis.values.length === 0) {\n          this.panel.xaxis.values = ['total'];\n          return;\n        }\n\n        const validOptions = this.getXAxisValueOptions({});\n        const found: any = find(validOptions, { value: this.panel.xaxis.values[0] });\n        if (!found) {\n          this.panel.xaxis.values = ['total'];\n        }\n        return;\n      }\n    }\n  }\n\n  getXAxisValueOptions(options: any) {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        return [\n          { text: 'Avg', value: 'avg' },\n          { text: 'Min', value: 'min' },\n          { text: 'Max', value: 'max' },\n          { text: 'Total', value: 'total' },\n          { text: 'Count', value: 'count' },\n        ];\n      }\n    }\n\n    return [];\n  }\n\n  pluckDeep(obj: any, property: string) {\n    const propertyParts = property.split('.');\n    let value = obj;\n    for (let i = 0; i < propertyParts.length; ++i) {\n      if (value[propertyParts[i]]) {\n        value = value[propertyParts[i]];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n}\n","import $ from 'jquery';\nimport { partition, each } from 'lodash';\n//@ts-ignore\nimport Drop from 'tether-drop';\n\nimport { CreatePlotOverlay } from '@grafana/data';\nimport { getLegacyAngularInjector } from '@grafana/runtime';\n\n/** @ngInject */\nconst createAnnotationToolip: CreatePlotOverlay = (element, event, plot) => {\n  const injector = getLegacyAngularInjector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    ($compile, $rootScope) => {\n      const eventManager = plot.getOptions().events.manager;\n      const tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = () => {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      const drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', () => {\n        setTimeout(() => {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n};\n\nlet markerElementToAttachTo: any = null;\n\n/** @ngInject */\nconst createEditPopover: CreatePlotOverlay = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(() => {\n    const injector = getLegacyAngularInjector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      ($compile, $rootScope) => {\n        const scope = $rootScope.$new(true);\n        let drop: any;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = () => {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', () => {\n          // need timeout here in order call drop.destroy\n          setTimeout(() => {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n};\n\nexport { createEditPopover, createAnnotationToolip };\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  /** @ngInject */\n  constructor(\n    object: JQuery,\n    drawFunc: any,\n    clearFunc: any,\n    moveFunc: any,\n    left: number,\n    top: number,\n    width: number,\n    height: number\n  ) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left, top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position: { left: number; top: number }) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  /** @ngInject */\n  constructor(options: any, drawableEvent: DrawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  /** @ngInject */\n  constructor(plot: any) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types: any) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events: any[]) {\n    const parts = partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a: any, b: any) => {\n      const ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      const options = event.getOptions();\n      const insidePlot = this._insidePlot(options.min) || this._insidePlot(options.timeEnd);\n      const overlapPlot = this._overlapPlot(options.min, options.timeEnd);\n      // check event is inside the graph range\n      if ((insidePlot || overlapPlot) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event.visual().getObject().hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n    let left;\n    let top;\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event: { eventType: any; min: any; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      const mouseenter = function (this: any) {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: any, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width() ?? 1,\n      line.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event: { eventType: any; min: number; timeEnd: number; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top,\n      left,\n      lineWidth: number,\n      regionWidth,\n      lineStyle: string | number | cssPropertySetter,\n      color: string,\n      markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n\n    const [xmin, xmax] = [o.left, o.left + this._plot.width()];\n    const regionStart = Math.max(left, xmin);\n    const regionEnd = Math.min(right, xmax);\n    const regionOffset = right > xmax ? 0 : lineWidth; // only include lineWidth when right line is visible\n    regionWidth = regionEnd - regionStart + regionOffset;\n\n    each([left, right], (position) => {\n      // only draw visible region lines\n      if (xmin <= position && position < xmax) {\n        const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n          position: 'absolute',\n          opacity: 0.8,\n          left: position + 'px',\n          top: 8,\n          width: lineWidth + 'px',\n          height: this._plot.height() + topOffset,\n          'border-left-width': lineWidth + 'px',\n          'border-left-style': lineStyle,\n          'border-left-color': color,\n          color: color,\n        });\n        line.appendTo(container);\n      }\n    });\n\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: regionStart + 'px',\n      top: top,\n      width: regionWidth + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    const mouseenter = function (this: any) {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: { css: (arg0: { top: any; left: any }) => void }, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width() ?? 1,\n      region.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x: any) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n\n  /**\n   * check if the event overlaps the visible range\n   */\n  _overlapPlot(point0: number, point1: number) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const [coord0, coord1] = [xaxis.p2c(point0), xaxis.p2c(point1)];\n    const [coordMin, coordMax] = [0, xaxis.p2c(xaxis.max)];\n    return coordMin < coord0 && coord1 < coordMax;\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(this: any, plot: any) {\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event.visual().getObject().hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = (events: any[]) => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot: any, options: any) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push((plot: any) => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nconst defaultOptions: any = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n","import classNames from 'classnames';\nimport React, { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { SeriesColorPicker, SeriesIcon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nexport const LEGEND_STATS = ['min', 'max', 'avg', 'current', 'total'] as const;\nexport type LegendStat = typeof LEGEND_STATS[number];\n\nexport interface LegendLabelProps {\n  series: TimeSeries;\n  asTable?: boolean;\n  hidden?: boolean;\n  onLabelClick: (series: any, event: any) => void;\n  onColorChange: (series: any, color: string) => void;\n  onToggleAxis: (series: any) => void;\n}\n\nexport interface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ntype LegendItemProps = LegendLabelProps & LegendValuesProps;\n\ninterface LegendItemState {\n  yaxis: number;\n}\n\nexport class LegendItem extends PureComponent<LegendItemProps, LegendItemState> {\n  static defaultProps = {\n    asTable: false,\n    hidden: false,\n    onLabelClick: () => {},\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  constructor(props: LegendItemProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.series.yaxis,\n    };\n  }\n\n  onLabelClick = (e: any) => this.props.onLabelClick(this.props.series, e);\n\n  onToggleAxis = () => {\n    const yaxis = this.state.yaxis === 2 ? 1 : 2;\n    const info = { alias: this.props.series.alias, yaxis: yaxis };\n    this.setState({ yaxis: yaxis });\n    this.props.onToggleAxis(info);\n  };\n\n  onColorChange = (color: string) => {\n    this.props.onColorChange(this.props.series, color);\n    // Because of PureComponent nature it makes only shallow props comparison and changing of series.color doesn't run\n    // component re-render. In this case we can't rely on color, selected by user, because it may be overwritten\n    // by series overrides. So we need to use forceUpdate() to make sure we have proper series color.\n    this.forceUpdate();\n  };\n\n  renderLegendValues() {\n    const { series, asTable } = this.props;\n    const legendValueItems = [];\n    for (const valueName of LEGEND_STATS) {\n      // @ts-ignore\n      if (this.props[valueName]) {\n        const valueFormatted = series.formatValue(series.stats[valueName]);\n        legendValueItems.push(\n          <LegendValue\n            key={valueName}\n            valueName={valueName}\n            value={valueFormatted}\n            asTable={asTable}\n            onValueClick={this.onLabelClick}\n          />\n        );\n      }\n    }\n    return legendValueItems;\n  }\n\n  render() {\n    const { series, values, asTable, hidden } = this.props;\n    const seriesOptionClasses = classNames({\n      'graph-legend-series-hidden': hidden,\n      'graph-legend-series--right-y': series.yaxis === 2,\n    });\n    const valueItems = values ? this.renderLegendValues() : [];\n    const seriesLabel = (\n      <LegendSeriesLabel\n        label={series.alias}\n        color={series.color}\n        yaxis={this.state.yaxis}\n        onLabelClick={this.onLabelClick}\n        onColorChange={this.onColorChange}\n        onToggleAxis={this.onToggleAxis}\n      />\n    );\n\n    if (asTable) {\n      return (\n        <tr className={`graph-legend-series ${seriesOptionClasses}`}>\n          <td role=\"gridcell\">\n            <div className=\"graph-legend-series__table-name\">{seriesLabel}</div>\n          </td>\n          {valueItems}\n        </tr>\n      );\n    } else {\n      return (\n        <div className={`graph-legend-series ${seriesOptionClasses}`}>\n          {seriesLabel}\n          {valueItems}\n        </div>\n      );\n    }\n  }\n}\n\ninterface LegendSeriesLabelProps {\n  label: string;\n  color: string;\n  yaxis?: number;\n  onLabelClick: (event: any) => void;\n}\n\nclass LegendSeriesLabel extends PureComponent<LegendSeriesLabelProps & LegendSeriesIconProps> {\n  static defaultProps: Partial<LegendSeriesLabelProps> = {\n    yaxis: undefined,\n    onLabelClick: () => {},\n  };\n\n  render() {\n    const { label, color, yaxis } = this.props;\n    const { onColorChange, onToggleAxis } = this.props;\n    const onLabelClick = this.props.onLabelClick ? this.props.onLabelClick : () => {};\n\n    return [\n      <LegendSeriesIcon\n        key=\"icon\"\n        color={color}\n        yaxis={yaxis}\n        onColorChange={onColorChange}\n        onToggleAxis={onToggleAxis}\n      />,\n      <button\n        type=\"button\"\n        className=\"graph-legend-alias pointer\"\n        title={label}\n        key=\"label\"\n        onClick={onLabelClick}\n        aria-label={selectors.components.Panels.Visualization.Graph.Legend.legendItemAlias(label)}\n      >\n        {label}\n      </button>,\n    ];\n  }\n}\n\ninterface LegendSeriesIconProps {\n  color: string;\n  yaxis?: number;\n  onColorChange?: (color: string) => void;\n  onToggleAxis?: () => void;\n}\n\ninterface LegendSeriesIconState {\n  color: string;\n}\n\nclass LegendSeriesIcon extends PureComponent<LegendSeriesIconProps, LegendSeriesIconState> {\n  static defaultProps: Partial<LegendSeriesIconProps> = {\n    yaxis: undefined,\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  onColorChange = (color: string) => {\n    const { onColorChange } = this.props;\n    if (onColorChange) {\n      onColorChange(color);\n    }\n  };\n  render() {\n    return (\n      <SeriesColorPicker\n        yaxis={this.props.yaxis}\n        color={this.props.color}\n        onChange={this.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n        enableNamedColors\n      >\n        {({ ref, showColorPicker, hideColorPicker }) => (\n          <SeriesIcon\n            color={this.props.color}\n            ref={ref}\n            onClick={showColorPicker}\n            onMouseLeave={hideColorPicker}\n            className=\"graph-legend-icon\"\n          />\n        )}\n      </SeriesColorPicker>\n    );\n  }\n}\n\ninterface LegendValueProps {\n  value: string;\n  valueName: string;\n  asTable?: boolean;\n  onValueClick?: (event: any) => void;\n}\n\nfunction LegendValue({ value, valueName, asTable, onValueClick }: LegendValueProps) {\n  if (asTable) {\n    return (\n      <td role=\"gridcell\" className={`graph-legend-value ${valueName}`} onClick={onValueClick}>\n        {value}\n      </td>\n    );\n  }\n  return (\n    <div className={`graph-legend-value ${valueName}`} onClick={onValueClick}>\n      {value}\n    </div>\n  );\n}\n","import { sortBy as _sortBy } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { CustomScrollbar, Icon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nimport { LegendStat, LegendItem, LEGEND_STATS } from './LegendSeriesItem';\n\ninterface LegendProps {\n  seriesList: TimeSeries[];\n  optionalClass?: string;\n}\n\ninterface LegendEventHandlers {\n  onToggleSeries?: (hiddenSeries: any) => void;\n  onToggleSort?: (sortBy: any, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendComponentEventHandlers {\n  onToggleSeries?: (series: TimeSeries, event: any) => void;\n  onToggleSort?: (sortBy: LegendStat | undefined, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendDisplayProps {\n  hiddenSeries: any;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  alignAsTable?: boolean;\n  rightSide?: boolean;\n  sideWidth?: number;\n}\n\ninterface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ninterface LegendSortProps {\n  sort?: LegendStat;\n  sortDesc?: boolean;\n}\n\nexport type GraphLegendProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendEventHandlers;\nexport type LegendComponentProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendComponentEventHandlers;\n\ninterface LegendState {\n  hiddenSeries: { [seriesAlias: string]: boolean };\n}\n\nexport class GraphLegend extends PureComponent<GraphLegendProps, LegendState> {\n  static defaultProps: Partial<GraphLegendProps> = {\n    values: false,\n    min: false,\n    max: false,\n    avg: false,\n    current: false,\n    total: false,\n    alignAsTable: false,\n    rightSide: false,\n    sort: undefined,\n    sortDesc: false,\n    optionalClass: '',\n    onToggleSeries: () => {},\n    onToggleSort: () => {},\n    onToggleAxis: () => {},\n    onColorChange: () => {},\n  };\n\n  constructor(props: GraphLegendProps) {\n    super(props);\n    this.state = {\n      hiddenSeries: this.props.hiddenSeries,\n    };\n  }\n\n  sortLegend() {\n    let seriesList: TimeSeries[] = [...this.props.seriesList] || [];\n    const sortBy = this.props.sort;\n    if (sortBy && this.props[sortBy] && this.props.alignAsTable) {\n      seriesList = _sortBy(seriesList, (series) => {\n        let sort = series.stats[sortBy];\n        if (sort === null) {\n          sort = -Infinity;\n        }\n        return sort;\n      }) as TimeSeries[];\n      if (this.props.sortDesc) {\n        seriesList = seriesList.reverse();\n      }\n    }\n    return seriesList;\n  }\n\n  onToggleSeries = (series: TimeSeries, event: any) => {\n    if (!this.props.onToggleSeries) {\n      return;\n    }\n\n    let hiddenSeries = { ...this.state.hiddenSeries };\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (hiddenSeries[series.alias]) {\n        delete hiddenSeries[series.alias];\n      } else {\n        hiddenSeries[series.alias] = true;\n      }\n    } else {\n      hiddenSeries = this.toggleSeriesExclusiveMode(series);\n    }\n    this.setState({ hiddenSeries: hiddenSeries });\n    this.props.onToggleSeries(hiddenSeries);\n  };\n\n  toggleSeriesExclusiveMode(series: TimeSeries) {\n    const hiddenSeries = { ...this.state.hiddenSeries };\n\n    if (hiddenSeries[series.alias]) {\n      delete hiddenSeries[series.alias];\n    }\n\n    // check if every other series is hidden\n    const alreadyExclusive = this.props.seriesList.every((value) => {\n      if (value.alias === series.alias) {\n        return true;\n      }\n\n      return hiddenSeries[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      this.props.seriesList.forEach((value) => {\n        delete hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      this.props.seriesList.forEach((value) => {\n        if (value.alias === series.alias) {\n          return;\n        }\n\n        hiddenSeries[value.alias] = true;\n      });\n    }\n\n    return hiddenSeries;\n  }\n\n  render() {\n    const {\n      optionalClass,\n      rightSide,\n      sideWidth,\n      sort,\n      sortDesc,\n      hideEmpty,\n      hideZero,\n      values,\n      min,\n      max,\n      avg,\n      current,\n      total,\n    } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    const hiddenSeries = this.state.hiddenSeries;\n    const seriesHideProps = { hideEmpty, hideZero };\n    const sortProps = { sort, sortDesc };\n    const seriesList = this.sortLegend().filter((series) => !series.hideFromLegend(seriesHideProps));\n    const legendClass = `${this.props.alignAsTable ? 'graph-legend-table' : ''} ${optionalClass}`;\n\n    // Set min-width if side style and there is a value, otherwise remove the CSS property\n    // Set width so it works with IE11\n    const width: any = rightSide && sideWidth ? sideWidth : undefined;\n    const ieWidth: any = rightSide && sideWidth ? sideWidth - 1 : undefined;\n    const legendStyle: React.CSSProperties = {\n      minWidth: width,\n      width: ieWidth,\n    };\n\n    const legendProps: LegendComponentProps = {\n      seriesList: seriesList,\n      hiddenSeries: hiddenSeries,\n      onToggleSeries: this.onToggleSeries,\n      onToggleAxis: this.props.onToggleAxis,\n      onToggleSort: this.props.onToggleSort,\n      onColorChange: this.props.onColorChange,\n      ...seriesValuesProps,\n      ...sortProps,\n    };\n\n    return (\n      <div className={`graph-legend-content ${legendClass}`} style={legendStyle}>\n        {this.props.alignAsTable ? <LegendTable {...legendProps} /> : <LegendSeriesList {...legendProps} />}\n      </div>\n    );\n  }\n}\n\nclass LegendSeriesList extends PureComponent<LegendComponentProps> {\n  render() {\n    const { seriesList, hiddenSeries, values, min, max, avg, current, total } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    return seriesList.map((series, i) => (\n      <LegendItem\n        // This trick required because TimeSeries.id is not unique (it's just TimeSeries.alias).\n        // In future would be good to make id unique across the series list.\n        key={`${series.id}-${i}`}\n        series={series}\n        hidden={hiddenSeries[series.alias]}\n        {...seriesValuesProps}\n        onLabelClick={this.props.onToggleSeries}\n        onColorChange={this.props.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n      />\n    ));\n  }\n}\n\nclass LegendTable extends PureComponent<Partial<LegendComponentProps>> {\n  onToggleSort = (stat: LegendStat) => {\n    if (!this.props.onToggleSort) {\n      return;\n    }\n\n    let sortDesc = this.props.sortDesc;\n    let sortBy = this.props.sort;\n    if (stat !== sortBy) {\n      sortDesc = undefined;\n    }\n\n    // if already sort ascending, disable sorting\n    if (sortDesc === false) {\n      sortBy = undefined;\n      sortDesc = undefined;\n    } else {\n      sortDesc = !sortDesc;\n      sortBy = stat;\n    }\n    this.props.onToggleSort(sortBy, sortDesc);\n  };\n\n  render() {\n    const seriesList = this.props.seriesList;\n    const { values, min, max, avg, current, total, sort, sortDesc, hiddenSeries } = this.props;\n    const seriesValuesProps: any = { values, min, max, avg, current, total };\n\n    if (!seriesList) {\n      return null;\n    }\n\n    return (\n      <table role=\"grid\">\n        <colgroup>\n          <col style={{ width: '100%' }} />\n        </colgroup>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left' }} />\n            {LEGEND_STATS.map(\n              (statName) =>\n                seriesValuesProps[statName] && (\n                  <LegendTableHeaderItem\n                    key={statName}\n                    statName={statName}\n                    sort={sort}\n                    sortDesc={sortDesc}\n                    onClick={this.onToggleSort}\n                  />\n                )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {seriesList &&\n            seriesList.map((series, i) => (\n              <LegendItem\n                key={`${series.id}-${i}`}\n                asTable={true}\n                series={series}\n                hidden={hiddenSeries[series.alias]}\n                onLabelClick={this.props.onToggleSeries}\n                onColorChange={this.props.onColorChange}\n                onToggleAxis={this.props.onToggleAxis}\n                {...seriesValuesProps}\n              />\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface LegendTableHeaderProps {\n  statName: LegendStat;\n  onClick?: (statName: LegendStat) => void;\n}\n\nclass LegendTableHeaderItem extends PureComponent<LegendTableHeaderProps & LegendSortProps> {\n  onClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.statName);\n    }\n  };\n\n  render() {\n    const { statName, sort, sortDesc } = this.props;\n    return (\n      <th className=\"pointer\" onClick={this.onClick}>\n        {statName}\n        {sort === statName && <Icon name={sortDesc ? 'angle-down' : 'angle-up'} />}\n      </th>\n    );\n  }\n}\n\nexport class Legend extends PureComponent<GraphLegendProps> {\n  render() {\n    return (\n      <CustomScrollbar hideHorizontalTrack>\n        <GraphLegend {...this.props} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nexport default Legend;\n","/**\n * To align two Y axes by Y level\n * @param yAxes data [{min: min_y1, min: max_y1}, {min: min_y2, max: max_y2}]\n * @param level Y level\n */\nexport function alignYLevel(yAxes: any, level: any) {\n  if (isNaN(level) || !checkCorrectAxis(yAxes)) {\n    return;\n  }\n\n  const [yLeft, yRight] = yAxes;\n  moveLevelToZero(yLeft, yRight, level);\n\n  expandStuckValues(yLeft, yRight);\n\n  // one of graphs on zero\n  const zero = yLeft.min === 0 || yRight.min === 0 || yLeft.max === 0 || yRight.max === 0;\n\n  const oneSide = checkOneSide(yLeft, yRight);\n\n  if (zero && oneSide) {\n    yLeft.min = yLeft.max > 0 ? 0 : yLeft.min;\n    yLeft.max = yLeft.max > 0 ? yLeft.max : 0;\n    yRight.min = yRight.max > 0 ? 0 : yRight.min;\n    yRight.max = yRight.max > 0 ? yRight.max : 0;\n  } else {\n    if (checkOppositeSides(yLeft, yRight)) {\n      if (yLeft.min >= 0) {\n        yLeft.min = -yLeft.max;\n        yRight.max = -yRight.min;\n      } else {\n        yLeft.max = -yLeft.min;\n        yRight.min = -yRight.max;\n      }\n    } else {\n      const rate = getRate(yLeft, yRight);\n\n      if (oneSide) {\n        // all graphs above the Y level\n        if (yLeft.min > 0) {\n          yLeft.min = yLeft.max / rate;\n          yRight.min = yRight.max / rate;\n        } else {\n          yLeft.max = yLeft.min / rate;\n          yRight.max = yRight.min / rate;\n        }\n      } else {\n        if (checkTwoCross(yLeft, yRight)) {\n          yLeft.min = yRight.min ? yRight.min * rate : yLeft.min;\n          yRight.min = yLeft.min ? yLeft.min / rate : yRight.min;\n          yLeft.max = yRight.max ? yRight.max * rate : yLeft.max;\n          yRight.max = yLeft.max ? yLeft.max / rate : yRight.max;\n        } else {\n          yLeft.min = yLeft.min > 0 ? yRight.min * rate : yLeft.min;\n          yRight.min = yRight.min > 0 ? yLeft.min / rate : yRight.min;\n          yLeft.max = yLeft.max < 0 ? yRight.max * rate : yLeft.max;\n          yRight.max = yRight.max < 0 ? yLeft.max / rate : yRight.max;\n        }\n      }\n    }\n  }\n\n  restoreLevelFromZero(yLeft, yRight, level);\n}\n\nfunction expandStuckValues(yLeft: { max: number; min: number }, yRight: { max: number; min: number }) {\n  // wide Y min and max using increased wideFactor\n  const wideFactor = 0.25;\n  if (yLeft.max === yLeft.min) {\n    yLeft.min -= wideFactor;\n    yLeft.max += wideFactor;\n  }\n  if (yRight.max === yRight.min) {\n    yRight.min -= wideFactor;\n    yRight.max += wideFactor;\n  }\n}\n\nfunction moveLevelToZero(yLeft: { min: number; max: number }, yRight: { min: number; max: number }, level: number) {\n  if (level !== 0) {\n    yLeft.min -= level;\n    yLeft.max -= level;\n    yRight.min -= level;\n    yRight.max -= level;\n  }\n}\n\nfunction restoreLevelFromZero(\n  yLeft: { min: number; max: number },\n  yRight: { min: number; max: number },\n  level: number\n) {\n  if (level !== 0) {\n    yLeft.min += level;\n    yLeft.max += level;\n    yRight.min += level;\n    yRight.max += level;\n  }\n}\n\ninterface AxisSide {\n  max: number;\n  min: number;\n}\n\nfunction checkCorrectAxis(axis: any[]): boolean {\n  return axis.length === 2 && checkCorrectAxes(axis[0]) && checkCorrectAxes(axis[1]);\n}\n\nfunction checkCorrectAxes(axes: any): boolean {\n  return 'min' in axes && 'max' in axes;\n}\n\nfunction checkOneSide(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the one hand with respect to zero\n  return (yLeft.min >= 0 && yRight.min >= 0) || (yLeft.max <= 0 && yRight.max <= 0);\n}\n\nfunction checkTwoCross(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // both across zero\n  return yLeft.min <= 0 && yLeft.max >= 0 && yRight.min <= 0 && yRight.max >= 0;\n}\n\nfunction checkOppositeSides(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the opposite sides with respect to zero\n  return (yLeft.min >= 0 && yRight.max <= 0) || (yLeft.max <= 0 && yRight.min >= 0);\n}\n\nfunction getRate(yLeft: AxisSide, yRight: AxisSide): number {\n  if (checkTwoCross(yLeft, yRight)) {\n    const rateLeft = yRight.min ? yLeft.min / yRight.min : 0;\n    const rateRight = yRight.max ? yLeft.max / yRight.max : 0;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (checkOneSide(yLeft, yRight)) {\n    const absLeftMin = Math.abs(yLeft.min);\n    const absLeftMax = Math.abs(yLeft.max);\n    const absRightMin = Math.abs(yRight.min);\n    const absRightMax = Math.abs(yRight.max);\n    const upLeft = Math.max(absLeftMin, absLeftMax);\n    const downLeft = Math.min(absLeftMin, absLeftMax);\n    const upRight = Math.max(absRightMin, absRightMax);\n    const downRight = Math.min(absRightMin, absRightMax);\n\n    const rateLeft = downLeft !== 0 ? upLeft / downLeft : upLeft;\n    const rateRight = downRight !== 0 ? upRight / downRight : upRight;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (yLeft.min > 0 || yRight.min > 0) {\n    return yLeft.max / yRight.max;\n  } else {\n    return yLeft.min / yRight.min;\n  }\n}\n","import { each, filter, keys } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nimport { AnnotationEvent } from '@grafana/data';\nimport {\n  ALERTING_COLOR,\n  DEFAULT_ANNOTATION_COLOR,\n  NO_DATA_COLOR,\n  OK_COLOR,\n  PENDING_COLOR,\n  REGION_FILL_ALPHA,\n} from '@grafana/ui';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nexport class EventManager {\n  event: AnnotationEvent | null = null;\n  editorOpen = false;\n\n  constructor(private panelCtrl: MetricsPanelCtrl) {}\n\n  editorClosed() {\n    this.event = null;\n    this.editorOpen = false;\n    this.panelCtrl.render();\n  }\n\n  editorOpened() {\n    this.editorOpen = true;\n  }\n\n  updateTime(range: { from: any; to: any }) {\n    if (!this.event) {\n      this.event = {};\n      this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n      this.event.panelId = this.panelCtrl.panel.id;\n    }\n\n    // update time\n    this.event.time = range.from;\n    this.event.isRegion = false;\n\n    if (range.to) {\n      this.event.timeEnd = range.to;\n      this.event.isRegion = true;\n    }\n\n    this.panelCtrl.render();\n  }\n\n  editEvent(event: AnnotationEvent, elem?: any) {\n    this.event = event;\n    this.panelCtrl.render();\n  }\n\n  addFlotEvents(annotations: any, flotOptions: any) {\n    if (!this.event && annotations.length === 0) {\n      return;\n    }\n\n    const types: any = {\n      $__alerting: {\n        color: ALERTING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__ok: {\n        color: OK_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__no_data: {\n        color: NO_DATA_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__pending: {\n        color: PENDING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__editing: {\n        color: DEFAULT_ANNOTATION_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n    };\n\n    if (this.event) {\n      if (this.event.isRegion) {\n        annotations = [\n          {\n            isRegion: true,\n            min: this.event.time,\n            timeEnd: this.event.timeEnd,\n            text: this.event.text,\n            eventType: '$__editing',\n            editModel: this.event,\n          },\n        ];\n      } else {\n        annotations = [\n          {\n            min: this.event.time,\n            text: this.event.text,\n            editModel: this.event,\n            eventType: '$__editing',\n          },\n        ];\n      }\n    } else {\n      // annotations from query\n      for (let i = 0; i < annotations.length; i++) {\n        const item = annotations[i];\n\n        // add properties used by jquery flot events\n        item.min = item.time;\n        item.max = item.time;\n        item.eventType = item.type;\n\n        if (item.newState) {\n          item.eventType = '$__' + item.newState;\n          continue;\n        }\n\n        if (!types[item.type]) {\n          types[item.type] = {\n            color: item.color,\n            position: 'BOTTOM',\n            markerSize: 5,\n          };\n        }\n      }\n    }\n\n    const regions = getRegions(annotations);\n    addRegionMarking(regions, flotOptions);\n\n    const eventSectionHeight = 20;\n    const eventSectionMargin = 7;\n    flotOptions.grid.eventSectionHeight = eventSectionMargin;\n    flotOptions.xaxis.eventSectionHeight = eventSectionHeight;\n\n    flotOptions.events = {\n      levels: keys(types).length + 1,\n      data: annotations,\n      types: types,\n      manager: this,\n    };\n  }\n}\n\nfunction getRegions(events: AnnotationEvent[]) {\n  return filter(events, 'isRegion');\n}\n\nfunction addRegionMarking(regions: any[], flotOptions: { grid: { markings: any } }) {\n  const markings = flotOptions.grid.markings;\n  const defaultColor = DEFAULT_ANNOTATION_COLOR;\n  let fillColor;\n\n  each(regions, (region) => {\n    if (region.source) {\n      fillColor = region.color || defaultColor;\n    } else {\n      fillColor = defaultColor;\n    }\n\n    fillColor = addAlphaToRGB(fillColor, REGION_FILL_ALPHA);\n    markings.push({\n      xaxis: { from: region.min, to: region.timeEnd },\n      color: fillColor,\n    });\n  });\n}\n\nfunction addAlphaToRGB(colorString: string, alpha: number): string {\n  const color = tinycolor(colorString);\n  if (color.isValid()) {\n    color.setAlpha(alpha);\n    return color.toRgbString();\n  } else {\n    return colorString;\n  }\n}\n","import $ from 'jquery';\n\nimport {\n  textUtil,\n  systemDateFormats,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  DataHoverClearEvent,\n} from '@grafana/data';\nimport { appEvents } from 'app/core/core';\nimport { CoreEvents } from 'app/types';\n\nexport default function GraphTooltip(this: any, elem: any, dashboard: any, scope: any, getSeriesFn: any) {\n  const self = this;\n  const ctrl = scope.ctrl;\n  const panel = ctrl.panel;\n  const hoverEvent = new LegacyGraphHoverEvent({ pos: {}, point: {}, panel: this.panel });\n\n  const $tooltip = $('<div class=\"graph-tooltip\">');\n\n  this.destroy = () => {\n    $tooltip.remove();\n  };\n\n  this.findHoverIndexFromDataPoints = (posX: number, series: any, last: number) => {\n    const ps = series.datapoints.pointsize;\n    const initial = last * ps;\n    const len = series.datapoints.points.length;\n    let j;\n    for (j = initial; j < len; j += ps) {\n      // Special case of a non stepped line, highlight the very last point just before a null point\n      if (\n        (!series.lines.steps && series.datapoints.points[initial] != null && series.datapoints.points[j] == null) ||\n        //normal case\n        series.datapoints.points[j] > posX\n      ) {\n        return Math.max(j - ps, 0) / ps;\n      }\n    }\n    return j / ps - 1;\n  };\n\n  this.findHoverIndexFromData = (posX: any, series: any) => {\n    let lower = 0;\n    let upper = series.data.length - 1;\n    let middle;\n    while (true) {\n      if (lower > upper) {\n        return Math.max(upper, 0);\n      }\n      middle = Math.floor((lower + upper) / 2);\n      if (series.data[middle][0] === posX) {\n        return middle;\n      } else if (series.data[middle][0] < posX) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n  };\n\n  this.renderAndShow = (absoluteTime: string, innerHtml: string, pos: { pageX: number; pageY: any }, xMode: string) => {\n    if (xMode === 'time') {\n      innerHtml = '<div class=\"graph-tooltip-time\">' + absoluteTime + '</div>' + innerHtml;\n    }\n    $tooltip.html(innerHtml).place_tt(pos.pageX, pos.pageY, { offset: 10 });\n  };\n\n  this.getMultiSeriesPlotHoverInfo = function (seriesList: any[], pos: { x: number }) {\n    let value, i, series, hoverIndex, hoverDistance, pointTime, yaxis;\n    // 3 sub-arrays, 1st for hidden series, 2nd for left yaxis, 3rd for right yaxis.\n    let results: any = [[], [], []];\n\n    //now we know the current X (j) position for X and Y values\n    let lastValue = 0; //needed for stacked values\n\n    let minDistance, minTime;\n\n    for (i = 0; i < seriesList.length; i++) {\n      series = seriesList[i];\n\n      if (!series.data.length || (panel.legend.hideEmpty && series.allIsNull)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (!series.data.length || (panel.legend.hideZero && series.allIsZero)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (series.hideTooltip) {\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      hoverIndex = this.findHoverIndexFromData(pos.x, series);\n      hoverDistance = pos.x - series.data[hoverIndex][0];\n      pointTime = series.data[hoverIndex][0];\n\n      // Take the closest point before the cursor, or if it does not exist, the closest after\n      if (\n        !minDistance ||\n        (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n        (hoverDistance < 0 && hoverDistance > minDistance)\n      ) {\n        minDistance = hoverDistance;\n        minTime = pointTime;\n      }\n\n      value = series.data[hoverIndex][1];\n\n      if (series.stack && value !== null && panel.tooltip.value_type !== 'individual') {\n        lastValue += value;\n        value = lastValue;\n      }\n\n      // Highlighting multiple Points depending on the plot type\n      if (series.lines.steps || series.stack) {\n        // stacked and steppedLine plots can have series with different length.\n        // Stacked series can increase its length on each new stacked serie if null points found,\n        // to speed the index search we begin always on the last found hoverIndex.\n        hoverIndex = this.findHoverIndexFromDataPoints(pos.x, series, hoverIndex);\n      }\n\n      // Be sure we have a yaxis so that it does not brake series sorting\n      yaxis = 0;\n      if (series.yaxis) {\n        yaxis = series.yaxis.n;\n      }\n\n      results[yaxis].push({\n        value: value,\n        hoverIndex: hoverIndex,\n        color: series.color,\n        label: series.aliasEscaped,\n        time: pointTime,\n        distance: hoverDistance,\n        index: i,\n      });\n    }\n\n    // Contat the 3 sub-arrays\n    results = results[0].concat(results[1], results[2]);\n\n    // Time of the point closer to pointer\n    results.time = minTime;\n\n    return results;\n  };\n\n  elem.mouseleave(() => {\n    if (panel.tooltip?.shared) {\n      const plot = elem.data().plot;\n      if (plot) {\n        $tooltip.detach();\n        plot.unhighlight();\n      }\n    }\n    dashboard.events.publish(new LegacyGraphHoverClearEvent());\n    dashboard.events.publish(new DataHoverClearEvent());\n  });\n\n  elem.bind('plothover', (event: any, pos: { panelRelY: number; pageY: number }, item: any) => {\n    self.show(pos, item);\n\n    // broadcast to other graph panels that we are hovering!\n    if (!dashboard.panelInEdit) {\n      pos.panelRelY = (pos.pageY - elem.offset().top) / elem.height();\n      hoverEvent.payload.pos = pos;\n      hoverEvent.payload.panel = panel;\n      hoverEvent.payload.point['time'] = (pos as any).x;\n      dashboard.events.publish(hoverEvent);\n    }\n  });\n\n  elem.bind('plotclick', (event: any, pos: any, item: any) => {\n    appEvents.emit(CoreEvents.graphClicked, { pos: pos, panel: panel, item: item });\n  });\n\n  elem.bind('plotleave', () => {\n    if (!panel.tooltip.shared) {\n      return;\n    }\n\n    const plot = elem.data().plot;\n    if (plot) {\n      $tooltip.detach();\n      plot.unhighlight();\n    }\n  });\n\n  this.clear = (plot: { clearCrosshair: () => void; unhighlight: () => void }) => {\n    $tooltip.detach();\n    plot.clearCrosshair();\n    plot.unhighlight();\n  };\n\n  this.show = (pos: any, item: any) => {\n    const plot = elem.data().plot;\n    const plotData = plot.getData();\n    const xAxes = plot.getXAxes();\n    const xMode = xAxes[0].options.mode;\n    const seriesList = getSeriesFn();\n    let allSeriesMode = panel.tooltip.shared;\n    let group, value, absoluteTime, hoverInfo, i, series, seriesHtml, tooltipFormat;\n\n    // if panelRelY is defined another panel wants us to show a tooltip\n    // get pageX from position on x axis and pageY from relative position in original panel\n    if (pos.panelRelY) {\n      const pointOffset = plot.pointOffset({ x: pos.x });\n      if (Number.isNaN(pointOffset.left) || pointOffset.left < 0 || pointOffset.left > elem.width()) {\n        self.clear(plot);\n        return;\n      }\n\n      pos.pageX = elem.offset().left + pointOffset.left;\n      pos.pageY = elem.offset().top + elem.height() * pos.panelRelY;\n\n      const scrollTop = $(window).scrollTop() ?? 0;\n      const isVisible = pos.pageY >= scrollTop && pos.pageY <= $(window).innerHeight()! + scrollTop;\n\n      if (!isVisible) {\n        self.clear(plot);\n        return;\n      }\n\n      plot.setCrosshair(pos);\n      allSeriesMode = true;\n\n      if (dashboard.sharedCrosshairModeOnly()) {\n        // if only crosshair mode we are done\n        return;\n      }\n    }\n\n    if (seriesList.length === 0) {\n      return;\n    }\n\n    if (seriesList[0].hasMsResolution) {\n      tooltipFormat = systemDateFormats.fullDateMS;\n    } else {\n      tooltipFormat = systemDateFormats.fullDate;\n    }\n\n    if (allSeriesMode) {\n      plot.unhighlight();\n\n      const seriesHoverInfo = self.getMultiSeriesPlotHoverInfo(plotData, pos);\n\n      seriesHtml = '';\n\n      absoluteTime = dashboard.formatDate(seriesHoverInfo.time, tooltipFormat);\n\n      // Dynamically reorder the hovercard for the current time point if the\n      // option is enabled.\n      if (panel.tooltip.sort === 2) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return b.value - a.value;\n        });\n      } else if (panel.tooltip.sort === 1) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return a.value - b.value;\n        });\n      }\n\n      for (i = 0; i < seriesHoverInfo.length; i++) {\n        hoverInfo = seriesHoverInfo[i];\n\n        if (hoverInfo.hidden) {\n          continue;\n        }\n\n        let highlightClass = '';\n        if (item && hoverInfo.index === item.seriesIndex) {\n          highlightClass = 'graph-tooltip-list-item--highlight';\n        }\n\n        series = seriesList[hoverInfo.index];\n        value = textUtil.sanitize(series.formatValue(hoverInfo.value));\n\n        const color = textUtil.sanitize(hoverInfo.color);\n        const label = textUtil.sanitize(hoverInfo.label);\n\n        seriesHtml +=\n          '<div class=\"graph-tooltip-list-item ' + highlightClass + '\"><div class=\"graph-tooltip-series-name\">';\n        seriesHtml += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + label + ':</div>';\n        seriesHtml += '<div class=\"graph-tooltip-value\">' + value + '</div></div>';\n        plot.highlight(hoverInfo.index, hoverInfo.hoverIndex);\n      }\n\n      self.renderAndShow(absoluteTime, seriesHtml, pos, xMode);\n    } else if (item) {\n      // single series tooltip\n      const color = textUtil.sanitize(item.series.color);\n      series = seriesList[item.seriesIndex];\n      group = '<div class=\"graph-tooltip-list-item\"><div class=\"graph-tooltip-series-name\">';\n      group += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + series.aliasEscaped + ':</div>';\n\n      if (panel.stack && panel.tooltip.value_type === 'individual') {\n        value = item.datapoint[1] - item.datapoint[2];\n      } else {\n        value = item.datapoint[1];\n      }\n\n      value = textUtil.sanitize(series.formatValue(value));\n      absoluteTime = dashboard.formatDate(item.datapoint[0], tooltipFormat);\n\n      group += '<div class=\"graph-tooltip-value\">' + value + '</div>';\n\n      self.renderAndShow(absoluteTime, group, pos, xMode);\n    } else {\n      // no hit\n      $tooltip.detach();\n    }\n  };\n}\n","import { histogram } from 'd3';\n\nimport TimeSeries from 'app/core/time_series2';\n\n/**\n * Convert series into array of series values.\n * @param data Array of series\n */\nexport function getSeriesValues(dataList: TimeSeries[]): number[] {\n  const VALUE_INDEX = 0;\n  const values = [];\n\n  // Count histogam stats\n  for (let i = 0; i < dataList.length; i++) {\n    const series = dataList[i];\n    const datapoints = series.datapoints;\n    for (let j = 0; j < datapoints.length; j++) {\n      if (datapoints[j][VALUE_INDEX] !== null) {\n        values.push(datapoints[j][VALUE_INDEX]);\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert array of values into timeseries-like histogram:\n * [[val_1, count_1], [val_2, count_2], ..., [val_n, count_n]]\n * @param values\n * @param bucketSize\n */\nexport function convertValuesToHistogram(values: number[], bucketSize: number, min: number, max: number): any[] {\n  const minBound = getBucketBound(min, bucketSize);\n  const maxBound = getBucketBound(max, bucketSize);\n\n  const histGenerator = histogram()\n    .domain([minBound, maxBound])\n    .thresholds(Math.round(max - min) / bucketSize);\n\n  return histGenerator(values).map((bin) => {\n    return [bin.x0, bin.length];\n  });\n}\n\n/**\n * Convert series into array of histogram data.\n * @param data Array of series\n * @param bucketSize\n */\nexport function convertToHistogramData(\n  data: any,\n  bucketSize: number,\n  hiddenSeries: any,\n  min: number,\n  max: number\n): any[] {\n  return data.map((series: any) => {\n    const values = getSeriesValues([series]);\n    series.histogram = true;\n    if (!hiddenSeries[series.alias]) {\n      const histogram = convertValuesToHistogram(values, bucketSize, min, max);\n      series.data = histogram;\n    } else {\n      series.data = [];\n    }\n    return series;\n  });\n}\n\nfunction getBucketBound(value: number, bucketSize: number): number {\n  return Math.floor(value / bucketSize) * bucketSize;\n}\n","import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport { isNumber } from 'lodash';\n\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { config } from 'app/core/config';\nimport { CoreEvents } from 'app/types';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup = false;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl: PanelCtrl) {}\n\n  getHandleHtml(handleIndex: any, model: { colorMode: string }, valueStr: any) {\n    let stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt: any) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    let lastY: number | null = null;\n    let posTop: number;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt: any) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      document.removeEventListener('mouseup', stopped);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit(CoreEvents.thresholdChanged, {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    document.addEventListener('mouseup', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex: number, defaultHandleTopPos: number) {\n    const model = this.thresholds[handleIndex];\n    // alerting defines\n    if (!model.visible && (this.panelCtrl as any).alert) {\n      return;\n    }\n\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0;\n\n    // handle no value\n    if (!isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem: JQuery, data: any[]) {\n    this.hasSecondYAxis = false;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot: any) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        }\n      }\n    }\n  }\n}\n","import { AbsoluteTimeRange, dateTime, TimeRange } from '@grafana/data';\n\nexport interface TimeRegionConfig {\n  from?: string;\n  fromDayOfWeek?: number; // 1-7\n\n  to?: string;\n  toDayOfWeek?: number; // 1-7\n}\n\ninterface ParsedTime {\n  dayOfWeek?: number; // 1-7\n  h?: number; // 0-23\n  m?: number; // 0-59\n  s?: number; // 0-59\n}\n\nexport function calculateTimesWithin(cfg: TimeRegionConfig, tRange: TimeRange): AbsoluteTimeRange[] {\n  if (!(cfg.fromDayOfWeek || cfg.from) && !(cfg.toDayOfWeek || cfg.to)) {\n    return [];\n  }\n\n  // So we can mutate\n  const timeRegion = { ...cfg };\n\n  if (timeRegion.from && !timeRegion.to) {\n    timeRegion.to = timeRegion.from;\n  }\n\n  if (!timeRegion.from && timeRegion.to) {\n    timeRegion.from = timeRegion.to;\n  }\n\n  const hRange = {\n    from: parseTimeRange(timeRegion.from),\n    to: parseTimeRange(timeRegion.to),\n  };\n\n  if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n    timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n  }\n\n  if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n    timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n  }\n\n  if (timeRegion.fromDayOfWeek) {\n    hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n  }\n\n  if (timeRegion.toDayOfWeek) {\n    hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n  }\n\n  if (hRange.from.dayOfWeek && hRange.from.h == null && hRange.from.m == null) {\n    hRange.from.h = 0;\n    hRange.from.m = 0;\n    hRange.from.s = 0;\n  }\n\n  if (hRange.to.dayOfWeek && hRange.to.h == null && hRange.to.m == null) {\n    hRange.to.h = 23;\n    hRange.to.m = 59;\n    hRange.to.s = 59;\n  }\n\n  if (!hRange.from || !hRange.to) {\n    return [];\n  }\n\n  if (hRange.from.h == null) {\n    hRange.from.h = 0;\n  }\n\n  if (hRange.to.h == null) {\n    hRange.to.h = 23;\n  }\n\n  const regions: AbsoluteTimeRange[] = [];\n\n  const fromStart = dateTime(tRange.from);\n  fromStart.set('hour', 0);\n  fromStart.set('minute', 0);\n  fromStart.set('second', 0);\n  fromStart.add(hRange.from.h, 'hours');\n  fromStart.add(hRange.from.m, 'minutes');\n  fromStart.add(hRange.from.s, 'seconds');\n\n  while (fromStart.unix() <= tRange.to.unix()) {\n    while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n      fromStart.add(24, 'hours');\n    }\n\n    if (fromStart.unix() > tRange.to.unix()) {\n      break;\n    }\n\n    const fromEnd = dateTime(fromStart);\n\n    if (fromEnd.hour) {\n      if (hRange.from.h <= hRange.to.h) {\n        fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n      } else if (hRange.from.h > hRange.to.h) {\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      } else {\n        fromEnd.add(24 - hRange.from.h, 'hours');\n\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      }\n    }\n\n    fromEnd.set('minute', hRange.to.m ?? 0);\n    fromEnd.set('second', hRange.to.s ?? 0);\n\n    while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n      fromEnd.add(24, 'hours');\n    }\n\n    const outsideRange =\n      (fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix()) ||\n      (fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix());\n\n    if (!outsideRange) {\n      regions.push({ from: fromStart.valueOf(), to: fromEnd.valueOf() });\n    }\n\n    fromStart.add(24, 'hours');\n  }\n\n  return regions;\n}\n\nfunction parseTimeRange(str?: string): ParsedTime {\n  const result: ParsedTime = {};\n  if (!str?.length) {\n    return result;\n  }\n\n  const timeRegex = /^([\\d]+):?(\\d{2})?/;\n  const match = timeRegex.exec(str);\n\n  if (!match) {\n    return result;\n  }\n\n  if (match.length > 1) {\n    result.h = Number(match[1]);\n    result.m = 0;\n\n    if (match.length > 2 && match[2] !== undefined) {\n      result.m = Number(match[2]);\n    }\n\n    if (result.h > 23) {\n      result.h = 23;\n    }\n\n    if (result.m > 59) {\n      result.m = 59;\n    }\n  }\n\n  return result;\n}\n","import 'vendor/flot/jquery.flot';\nimport { map } from 'lodash';\n\nimport { dateTime, GrafanaTheme2, TimeRange } from '@grafana/data';\nimport { config } from 'app/core/config';\nimport { calculateTimesWithin, TimeRegionConfig } from 'app/core/utils/timeRegions';\n\ntype TimeRegionColorDefinition = {\n  fill: string | null;\n  line: string | null;\n};\n\nexport const colorModes: any = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: { fill: 'rgba(255, 255, 255, 0.09)', line: 'rgba(255, 255, 255, 0.2)' },\n    lightColor: { fill: 'rgba(0, 0, 0, 0.09)', line: 'rgba(0, 0, 0, 0.2)' },\n  },\n  red: {\n    title: 'Red',\n    color: { fill: 'rgba(234, 112, 112, 0.12)', line: 'rgba(237, 46, 24, 0.60)' },\n  },\n  green: {\n    title: 'Green',\n    color: { fill: 'rgba(11, 237, 50, 0.090)', line: 'rgba(6,163,69, 0.60)' },\n  },\n  blue: {\n    title: 'Blue',\n    color: { fill: 'rgba(11, 125, 238, 0.12)', line: 'rgba(11, 125, 238, 0.60)' },\n  },\n  yellow: {\n    title: 'Yellow',\n    color: { fill: 'rgba(235, 138, 14, 0.12)', line: 'rgba(247, 149, 32, 0.60)' },\n  },\n  custom: { title: 'Custom' },\n};\n\nexport function getColorModes() {\n  return map(Object.keys(colorModes), (key) => {\n    return {\n      key,\n      value: colorModes[key].title,\n    };\n  });\n}\n\nfunction getColor(timeRegion: any, theme: GrafanaTheme2): TimeRegionColorDefinition {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? theme.visualization.getColorByName(timeRegion.fillColor) : null,\n      line: timeRegion.line && timeRegion.lineColor ? theme.visualization.getColorByName(timeRegion.lineColor) : null,\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme.isLight ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.fill) : null,\n    line: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.line) : null,\n  };\n}\n\ninterface GraphTimeRegionConfig extends TimeRegionConfig {\n  colorMode: string;\n\n  fill: boolean;\n  fillColor: string;\n\n  line: boolean;\n  lineColor: string;\n}\n\nexport class TimeRegionManager {\n  plot: any;\n  timeRegions?: TimeRegionConfig[];\n\n  constructor(private panelCtrl: any) {}\n\n  draw(plot: any) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.timeRegions?.length) {\n      return;\n    }\n\n    // The panel range\n    const tRange: TimeRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc(),\n      raw: {\n        from: '',\n        to: '',\n      },\n    };\n\n    for (const tr of panel.timeRegions) {\n      const timeRegion: GraphTimeRegionConfig = tr;\n      const regions = calculateTimesWithin(tr, tRange);\n      if (regions.length) {\n        const timeRegionColor = getColor(timeRegion, config.theme2);\n\n        for (let j = 0; j < regions.length; j++) {\n          const r = regions[j];\n          if (timeRegion.fill) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.to },\n              color: timeRegionColor.fill,\n            });\n          }\n\n          if (timeRegion.line) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.from },\n              color: timeRegionColor.line,\n            });\n            options.grid.markings.push({\n              xaxis: { from: r.to, to: r.to },\n              color: timeRegionColor.line,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n","import 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport './jquery.flot.events';\n\nimport $ from 'jquery';\nimport { clone, find, flatten, isUndefined, map, max as _max, min as _min, sortBy as _sortBy, toNumber } from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  DataFrame,\n  DataFrameView,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  DataHoverPayload,\n  DecimalCount,\n  FieldDisplay,\n  FieldType,\n  formattedValueToString,\n  getDisplayProcessor,\n  getFlotPairsConstant,\n  getTimeField,\n  getValueFormat,\n  hasLinks,\n  LegacyEventHandler,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  LegacyGraphHoverEventPayload,\n  LinkModelSupplier,\n  PanelEvents,\n  toUtc,\n} from '@grafana/data';\nimport { graphTickFormatter, graphTimeFormat, MenuItemProps, MenuItemsGroup } from '@grafana/ui';\nimport { coreModule } from 'app/angular/core_module';\nimport config from 'app/core/config';\nimport { updateLegendValues } from 'app/core/core';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { provideTheme } from 'app/core/utils/ConfigProvider';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nimport { DashboardModel } from '../../../features/dashboard/state';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { GraphLegendProps, Legend } from './Legend/Legend';\nimport { alignYLevel } from './align_yaxes';\nimport { EventManager } from './event_manager';\nimport GraphTooltip from './graph_tooltip';\nimport { convertToHistogramData } from './histogram';\nimport { GraphCtrl } from './module';\nimport { ThresholdManager } from './threshold_manager';\nimport { TimeRegionManager } from './time_region_manager';\nimport { isLegacyGraphHoverEvent } from './utils';\n\nconst LegendWithThemeProvider = provideTheme(Legend, config.theme2);\n\nclass GraphElement {\n  ctrl: GraphCtrl;\n  contextMenu: GraphContextMenuCtrl;\n  tooltip: any;\n  dashboard: DashboardModel;\n  annotations: object[];\n  panel: any;\n  plot: any;\n  sortedSeries?: any[];\n  data: any[] = [];\n  panelWidth: number;\n  eventManager: EventManager;\n  thresholdManager: ThresholdManager;\n  timeRegionManager: TimeRegionManager;\n  declare legendElem: HTMLElement;\n\n  constructor(\n    private scope: any,\n    private elem: JQuery & {\n      bind(eventType: string, handler: (eventObject: JQueryEventObject, ...args: any[]) => any): JQuery; // need to extend with Plot\n    },\n    private timeSrv: TimeSrv\n  ) {\n    this.ctrl = scope.ctrl;\n    this.contextMenu = scope.ctrl.contextMenuCtrl;\n    this.dashboard = this.ctrl.dashboard;\n    this.panel = this.ctrl.panel;\n    this.annotations = [];\n\n    this.panelWidth = 0;\n    this.eventManager = new EventManager(this.ctrl);\n    this.thresholdManager = new ThresholdManager(this.ctrl);\n    this.timeRegionManager = new TimeRegionManager(this.ctrl);\n    // @ts-ignore\n    this.tooltip = new GraphTooltip(this.elem, this.ctrl.dashboard, this.scope, () => {\n      return this.sortedSeries;\n    });\n\n    // panel events\n    this.ctrl.events.on(PanelEvents.panelTeardown, this.onPanelTeardown.bind(this));\n    this.ctrl.events.on(PanelEvents.render, this.onRender.bind(this));\n\n    // global events\n    // Using old way here to use the scope unsubscribe model as the new $on function does not take scope\n    this.ctrl.dashboard.events.on(LegacyGraphHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    this.ctrl.dashboard.events.on(DataHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(DataHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    // plot events\n    this.elem.bind('plotselected', this.onPlotSelected.bind(this));\n    this.elem.bind('plotclick', this.onPlotClick.bind(this));\n\n    // get graph legend element\n    if (this.elem && this.elem.parent) {\n      this.legendElem = this.elem.parent().find('.graph-legend')[0];\n    }\n  }\n\n  onRender(renderData: any[]) {\n    this.data = renderData || this.data;\n    if (!this.data) {\n      return;\n    }\n\n    this.annotations = this.ctrl.annotations || [];\n    this.buildFlotPairs(this.data);\n    const graphHeight = this.ctrl.height;\n    updateLegendValues(this.data, this.panel, graphHeight);\n\n    if (!this.panel.legend.show) {\n      if (this.legendElem.hasChildNodes()) {\n        ReactDOM.unmountComponentAtNode(this.legendElem);\n      }\n      this.renderPanel();\n      return;\n    }\n\n    const { values, min, max, avg, current, total } = this.panel.legend;\n    const { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero } = this.panel.legend;\n    const legendOptions = { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero };\n    const valueOptions = { values, min, max, avg, current, total };\n    const legendProps: GraphLegendProps = {\n      seriesList: this.data,\n      hiddenSeries: this.ctrl.hiddenSeries,\n      ...legendOptions,\n      ...valueOptions,\n      onToggleSeries: this.ctrl.onToggleSeries,\n      onToggleSort: this.ctrl.onToggleSort,\n      onColorChange: this.ctrl.onColorChange,\n      onToggleAxis: this.ctrl.onToggleAxis,\n    };\n\n    const legendReactElem = React.createElement(LegendWithThemeProvider, legendProps);\n    ReactDOM.render(legendReactElem, this.legendElem, () => this.renderPanel());\n  }\n\n  onGraphHover(evt: LegacyGraphHoverEventPayload | DataHoverPayload) {\n    // ignore other graph hover events if shared tooltip is disabled\n    if (!this.dashboard.sharedTooltipModeEnabled()) {\n      return;\n    }\n\n    if (isLegacyGraphHoverEvent(evt)) {\n      // ignore if we are the emitter\n      if (!this.plot || evt.panel?.id === this.panel.id || this.ctrl.otherPanelInFullscreenMode()) {\n        return;\n      }\n\n      this.tooltip.show(evt.pos);\n    }\n\n    // DataHoverEvent can come from multiple panels that doesn't include x position\n    if (!evt.point?.time) {\n      return;\n    }\n\n    this.tooltip.show({ x: evt.point.time, panelRelY: evt.point.panelRelY ?? 1 });\n  }\n\n  onPanelTeardown() {\n    if (this.plot) {\n      this.plot.destroy();\n      this.plot = null;\n    }\n\n    this.tooltip.destroy();\n    this.elem.off();\n    this.elem.remove();\n\n    ReactDOM.unmountComponentAtNode(this.legendElem);\n  }\n\n  onGraphHoverClear(handler: LegacyEventHandler<any>) {\n    if (this.plot) {\n      this.tooltip.clear(this.plot);\n    }\n  }\n\n  onPlotSelected(event: JQueryEventObject, ranges: any) {\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      this.plot.clearSelection();\n      return;\n    }\n\n    if ((ranges.ctrlKey || ranges.metaKey) && this.dashboard.canAddAnnotations()) {\n      // Add annotation\n      setTimeout(() => {\n        this.eventManager.updateTime(ranges.xaxis);\n      }, 100);\n    } else {\n      this.scope.$apply(() => {\n        this.timeSrv.setTime({\n          from: toUtc(ranges.xaxis.from),\n          to: toUtc(ranges.xaxis.to),\n        });\n      });\n    }\n  }\n\n  getContextMenuItemsSupplier = (\n    flotPosition: { x: number; y: number },\n    linksSupplier?: LinkModelSupplier<FieldDisplay>\n  ): (() => MenuItemsGroup[]) => {\n    return () => {\n      // Fixed context menu items\n      const items: MenuItemsGroup[] = this.dashboard.canAddAnnotations()\n        ? [\n            {\n              items: [\n                {\n                  label: 'Add annotation',\n                  ariaLabel: 'Add annotation',\n                  icon: 'comment-alt',\n                  onClick: () => this.eventManager.updateTime({ from: flotPosition.x, to: null }),\n                },\n              ],\n            },\n          ]\n        : [];\n\n      if (!linksSupplier) {\n        return items;\n      }\n\n      const dataLinks = [\n        {\n          items: linksSupplier.getLinks(this.panel.replaceVariables).map<MenuItemProps>((link) => {\n            return {\n              label: link.title,\n              ariaLabel: link.title,\n              url: link.href,\n              target: link.target,\n              icon: link.target === '_self' ? 'link' : 'external-link-alt',\n              onClick: link.onClick,\n            };\n          }),\n        },\n      ];\n\n      return [...items, ...dataLinks];\n    };\n  };\n\n  onPlotClick(event: JQueryEventObject, pos: any, item: any) {\n    const scrollContextElement = this.elem.closest('.view') ? this.elem.closest('.view').get()[0] : null;\n    const contextMenuSourceItem = item;\n\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      return;\n    }\n\n    if (pos.ctrlKey || pos.metaKey) {\n      // Skip if range selected (added in \"plotselected\" event handler)\n      if (pos.x !== pos.x1) {\n        return;\n      }\n\n      // skip if dashboard is not saved yet (exists in db) or user cannot edit\n      if (!this.dashboard.id || !this.dashboard.canAddAnnotations()) {\n        return;\n      }\n\n      setTimeout(() => {\n        this.eventManager.updateTime({ from: pos.x, to: null });\n      }, 100);\n      return;\n    } else {\n      this.tooltip.clear(this.plot);\n      let linksSupplier: LinkModelSupplier<FieldDisplay> | undefined;\n\n      if (item) {\n        // pickup y-axis index to know which field's config to apply\n        const yAxisConfig = this.panel.yaxes[item.series.yaxis.n === 2 ? 1 : 0];\n        const dataFrame = this.ctrl.dataList[item.series.dataFrameIndex];\n        const field = dataFrame.fields[item.series.fieldIndex];\n        const dataIndex = this.getDataIndexWithNullValuesCorrection(item, dataFrame);\n\n        let links: any[] = this.panel.options.dataLinks || [];\n        const hasLinksValue = hasLinks(field);\n        if (hasLinksValue) {\n          // Append the configured links to the panel datalinks\n          links = [...links, ...field.config.links!];\n        }\n        const fieldConfig = {\n          decimals: yAxisConfig.decimals,\n          links,\n        };\n        const fieldDisplay = getDisplayProcessor({\n          field: { config: fieldConfig, type: FieldType.number },\n          theme: config.theme2,\n          timeZone: this.dashboard.getTimezone(),\n        })(field.values.get(dataIndex));\n        linksSupplier = links.length\n          ? getFieldLinksSupplier({\n              display: fieldDisplay,\n              name: field.name,\n              view: new DataFrameView(dataFrame),\n              rowIndex: dataIndex,\n              colIndex: item.series.fieldIndex,\n              field: fieldConfig,\n              hasLinks: hasLinksValue,\n            })\n          : undefined;\n      }\n\n      this.scope.$apply(() => {\n        // Setting nearest CustomScrollbar element as a scroll context for graph context menu\n        this.contextMenu.setScrollContextElement(scrollContextElement);\n        this.contextMenu.setSource(contextMenuSourceItem);\n        this.contextMenu.setMenuItemsSupplier(this.getContextMenuItemsSupplier(pos, linksSupplier) as any);\n        this.contextMenu.toggleMenu(pos);\n      });\n    }\n  }\n\n  getDataIndexWithNullValuesCorrection(item: any, dataFrame: DataFrame): number {\n    /** This is one added to handle the scenario where we have null values in\n     *  the time series data and the: \"visualization options -> null value\"\n     *  set to \"connected\". In this scenario we will get the wrong dataIndex.\n     *\n     *  https://github.com/grafana/grafana/issues/22651\n     */\n    const { datapoint, dataIndex } = item;\n\n    if (!Array.isArray(datapoint) || datapoint.length === 0) {\n      return dataIndex;\n    }\n\n    const ts = datapoint[0];\n    const { timeField } = getTimeField(dataFrame);\n\n    if (!timeField || !timeField.values) {\n      return dataIndex;\n    }\n\n    const field = timeField.values.get(dataIndex);\n\n    if (field === ts) {\n      return dataIndex;\n    }\n\n    const correctIndex = timeField.values.toArray().findIndex((value) => value === ts);\n    return correctIndex > -1 ? correctIndex : dataIndex;\n  }\n\n  shouldAbortRender() {\n    if (!this.data) {\n      return true;\n    }\n\n    if (this.panelWidth === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  drawHook(plot: any) {\n    // add left axis labels\n    if (this.panel.yaxes[0].label && this.panel.yaxes[0].show) {\n      $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[0].label)\n        .appendTo(this.elem);\n    }\n\n    // add right axis labels\n    if (this.panel.yaxes[1].label && this.panel.yaxes[1].show) {\n      $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[1].label)\n        .appendTo(this.elem);\n    }\n\n    const { dataWarning } = this.ctrl;\n    if (dataWarning) {\n      const msg = $(`<div class=\"datapoints-warning flot-temp-elem\">${dataWarning.title}</div>`);\n      if (dataWarning.action) {\n        $(`<button class=\"btn btn-secondary\">${dataWarning.actionText}</button>`)\n          .click(dataWarning.action)\n          .appendTo(msg);\n      }\n      msg.appendTo(this.elem);\n    }\n    this.thresholdManager.draw(plot);\n    this.timeRegionManager.draw(plot);\n  }\n\n  processOffsetHook(plot: any, gridMargin: { left: number; right: number }) {\n    const left = this.panel.yaxes[0];\n    const right = this.panel.yaxes[1];\n    if (left.show && left.label) {\n      gridMargin.left = 20;\n    }\n    if (right.show && right.label) {\n      gridMargin.right = 20;\n    }\n\n    // apply y-axis min/max options\n    const yaxis = plot.getYAxes();\n    for (let i = 0; i < yaxis.length; i++) {\n      const axis: any = yaxis[i];\n      const panelOptions = this.panel.yaxes[i];\n      axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n      axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n    }\n  }\n\n  processRangeHook(plot: any) {\n    const yAxes = plot.getYAxes();\n    const align = this.panel.yaxis.align || false;\n\n    if (yAxes.length > 1 && align === true) {\n      const level = this.panel.yaxis.alignLevel || 0;\n      alignYLevel(yAxes, parseFloat(level));\n    }\n  }\n\n  // Series could have different timeSteps,\n  // let's find the smallest one so that bars are correctly rendered.\n  // In addition, only take series which are rendered as bars for this.\n  getMinTimeStepOfSeries(data: any[]) {\n    let min = Number.MAX_VALUE;\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].stats.timeStep) {\n        continue;\n      }\n      if (this.panel.bars) {\n        if (data[i].bars && data[i].bars.show === false) {\n          continue;\n        }\n      } else {\n        if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n          continue;\n        }\n      }\n\n      if (data[i].stats.timeStep < min) {\n        min = data[i].stats.timeStep;\n      }\n    }\n\n    return min;\n  }\n\n  // Function for rendering panel\n  renderPanel() {\n    this.panelWidth = this.elem.width() ?? 0;\n\n    if (this.shouldAbortRender()) {\n      return;\n    }\n\n    // give space to alert editing\n    this.thresholdManager.prepare(this.elem, this.data);\n\n    // un-check dashes if lines are unchecked\n    this.panel.dashes = this.panel.lines ? this.panel.dashes : false;\n\n    // Populate element\n    const options: any = this.buildFlotOptions(this.panel);\n    this.prepareXAxis(options, this.panel);\n    this.configureYAxisOptions(this.data, options);\n    this.thresholdManager.addFlotOptions(options, this.panel);\n    this.timeRegionManager.addFlotOptions(options, this.panel);\n    this.eventManager.addFlotEvents(this.annotations, options);\n    this.sortedSeries = this.sortSeries(this.data, this.panel);\n    this.callPlot(options, true);\n  }\n\n  buildFlotPairs(data: any) {\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      series.data = series.getFlotPairs(series.nullPointMode || this.panel.nullPointMode);\n\n      if (series.transform === 'constant') {\n        series.data = getFlotPairsConstant(series.data, this.ctrl.range!);\n      }\n\n      // if hidden remove points and disable stack\n      if (this.ctrl.hiddenSeries[series.alias]) {\n        series.data = [];\n        series.stack = false;\n      }\n    }\n  }\n\n  prepareXAxis(options: any, panel: any) {\n    switch (panel.xaxis.mode) {\n      case 'series': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n\n        for (let i = 0; i < this.data.length; i++) {\n          const series = this.data[i];\n          series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n        }\n\n        this.addXSeriesAxis(options);\n        break;\n      }\n      case 'histogram': {\n        let bucketSize: number;\n\n        if (this.data.length) {\n          let histMin = _min(map(this.data, (s) => s.stats.min));\n          let histMax = _max(map(this.data, (s) => s.stats.max));\n          const ticks = panel.xaxis.buckets || this.panelWidth / 50;\n          if (panel.xaxis.min != null) {\n            const isInvalidXaxisMin = tickStep(panel.xaxis.min, histMax, ticks) <= 0;\n            histMin = isInvalidXaxisMin ? histMin : panel.xaxis.min;\n          }\n          if (panel.xaxis.max != null) {\n            const isInvalidXaxisMax = tickStep(histMin, panel.xaxis.max, ticks) <= 0;\n            histMax = isInvalidXaxisMax ? histMax : panel.xaxis.max;\n          }\n          bucketSize = tickStep(histMin, histMax, ticks);\n          options.series.bars.barWidth = bucketSize * 0.8;\n          this.data = convertToHistogramData(this.data, bucketSize, this.ctrl.hiddenSeries, histMin, histMax);\n        } else {\n          bucketSize = 0;\n        }\n\n        this.addXHistogramAxis(options, bucketSize);\n        break;\n      }\n      case 'table': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n        this.addXTableAxis(options);\n        break;\n      }\n      default: {\n        options.series.bars.barWidth = this.getMinTimeStepOfSeries(this.data) / 1.5;\n        this.addTimeAxis(options);\n        break;\n      }\n    }\n  }\n\n  callPlot(options: any, incrementRenderCounter: boolean) {\n    try {\n      this.plot = $.plot(this.elem, this.sortedSeries, options);\n      if (this.ctrl.renderError) {\n        delete this.ctrl.error;\n      }\n    } catch (e) {\n      console.error('flotcharts error', e);\n      this.ctrl.error = e instanceof Error ? e.message : 'Render Error';\n      this.ctrl.renderError = true;\n    }\n\n    if (incrementRenderCounter) {\n      this.ctrl.renderingCompleted();\n    }\n  }\n\n  buildFlotOptions(panel: any) {\n    let gridColor = '#c8c8c8';\n    if (config.bootData.user.lightTheme === true) {\n      gridColor = '#a1a1a1';\n    }\n    const stack = panel.stack ? true : null;\n    const options: any = {\n      hooks: {\n        draw: [this.drawHook.bind(this)],\n        processOffset: [this.processOffsetHook.bind(this)],\n        processRange: [this.processRangeHook.bind(this)],\n      },\n      legend: { show: false },\n      series: {\n        stackpercent: panel.stack ? panel.percentage : false,\n        stack: panel.percentage ? null : stack,\n        lines: {\n          show: panel.lines,\n          zero: false,\n          fill: this.translateFillOption(panel.fill),\n          fillColor: this.getFillGradient(panel.fillGradient),\n          lineWidth: panel.dashes ? 0 : panel.linewidth,\n          steps: panel.steppedLine,\n        },\n        dashes: {\n          show: panel.dashes,\n          lineWidth: panel.linewidth,\n          dashLength: [panel.dashLength, panel.spaceLength],\n        },\n        bars: {\n          show: panel.bars,\n          fill: 1,\n          barWidth: 1,\n          zero: false,\n          lineWidth: 0,\n        },\n        points: {\n          show: panel.points,\n          fill: 1,\n          fillColor: false,\n          radius: panel.points ? panel.pointradius : 2,\n        },\n        shadowSize: 0,\n      },\n      yaxes: [],\n      xaxis: {},\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        hoverable: true,\n        clickable: true,\n        color: gridColor,\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n        mouseActiveRadius: 30,\n      },\n      selection: {\n        mode: 'x',\n        color: '#666',\n      },\n      crosshair: {\n        mode: 'x',\n      },\n    };\n    return options;\n  }\n\n  sortSeries(series: any, panel: any) {\n    const sortBy = panel.legend.sort;\n    const sortOrder = panel.legend.sortDesc;\n    const haveSortBy = sortBy !== null && sortBy !== undefined && panel.legend[sortBy];\n    const haveSortOrder = sortOrder !== null && sortOrder !== undefined;\n    const shouldSortBy = panel.stack && haveSortBy && haveSortOrder && panel.legend.alignAsTable;\n    const sortDesc = panel.legend.sortDesc === true ? -1 : 1;\n\n    if (shouldSortBy) {\n      return _sortBy(series, (s) => s.stats[sortBy] * sortDesc);\n    } else {\n      return _sortBy(series, (s) => s.zindex);\n    }\n  }\n\n  getFillGradient(amount: number) {\n    if (!amount) {\n      return null;\n    }\n\n    return {\n      colors: [{ opacity: 0.0 }, { opacity: amount / 10 }],\n    };\n  }\n\n  translateFillOption(fill: number) {\n    if (this.panel.percentage && this.panel.stack) {\n      return fill === 0 ? 0.001 : fill / 10;\n    } else {\n      return fill / 10;\n    }\n  }\n\n  addTimeAxis(options: any) {\n    const ticks = this.panelWidth / 100;\n    const min = isUndefined(this.ctrl.range!.from) ? null : this.ctrl.range!.from.valueOf();\n    const max = isUndefined(this.ctrl.range!.to) ? null : this.ctrl.range!.to.valueOf();\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: 'time',\n      min: min,\n      max: max,\n      label: 'Datetime',\n      ticks: ticks,\n      timeformat: graphTimeFormat(ticks, min, max),\n      tickFormatter: graphTickFormatter,\n    };\n  }\n\n  addXSeriesAxis(options: any) {\n    const ticks = map(this.data, (series, index) => {\n      return [index + 1, series.alias];\n    });\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  addXHistogramAxis(options: any, bucketSize: number) {\n    let ticks: number | number[];\n    let min: number | undefined;\n    let max: number | undefined;\n\n    const defaultTicks = this.panelWidth / 50;\n\n    if (this.data.length && bucketSize) {\n      const tickValues = [];\n\n      for (const d of this.data) {\n        for (const point of d.data) {\n          tickValues[point[0]] = true;\n        }\n      }\n\n      ticks = Object.keys(tickValues).map((v) => Number(v));\n      min = _min(ticks)!;\n      max = _max(ticks)!;\n\n      // Adjust tick step\n      let tickStep = bucketSize;\n      let ticksNum = Math.floor((max - min) / tickStep);\n      while (ticksNum > defaultTicks) {\n        tickStep = tickStep * 2;\n        ticksNum = Math.ceil((max - min) / tickStep);\n      }\n\n      // Expand ticks for pretty view\n      min = Math.floor(min / tickStep) * tickStep;\n      // 1.01 is 101% - ensure we have enough space for last bar\n      max = Math.ceil((max * 1.01) / tickStep) * tickStep;\n\n      ticks = [];\n      for (let i = min; i <= max; i += tickStep) {\n        ticks.push(i);\n      }\n    } else {\n      // Set defaults if no data\n      ticks = defaultTicks / 2;\n      min = 0;\n      max = 1;\n    }\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: min,\n      max: max,\n      label: 'Histogram',\n      ticks: ticks,\n    };\n\n    // Use 'short' format for histogram values\n    this.configureAxisMode(options.xaxis, 'short', null);\n  }\n\n  addXTableAxis(options: any) {\n    let ticks = map(this.data, (series, seriesIndex) => {\n      return map(series.datapoints, (point, pointIndex) => {\n        const tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n        return [tickIndex + 1, point[1]];\n      });\n    });\n    // @ts-ignore, potential bug? is this flattenDeep?\n    ticks = flatten(ticks, true);\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  configureYAxisOptions(data: any, options: any) {\n    const defaults = {\n      position: 'left',\n      show: this.panel.yaxes[0].show,\n      index: 1,\n      logBase: this.panel.yaxes[0].logBase || 1,\n      min: this.parseNumber(this.panel.yaxes[0].min),\n      max: this.parseNumber(this.panel.yaxes[0].max),\n      tickDecimals: this.panel.yaxes[0].decimals,\n    };\n\n    options.yaxes.push(defaults);\n\n    if (find(data, { yaxis: 2 })) {\n      const secondY = clone(defaults);\n      secondY.index = 2;\n      secondY.show = this.panel.yaxes[1].show;\n      secondY.logBase = this.panel.yaxes[1].logBase || 1;\n      secondY.position = 'right';\n      secondY.min = this.parseNumber(this.panel.yaxes[1].min);\n      secondY.max = this.parseNumber(this.panel.yaxes[1].max);\n      secondY.tickDecimals = this.panel.yaxes[1].decimals;\n      options.yaxes.push(secondY);\n\n      this.applyLogScale(options.yaxes[1], data);\n      this.configureAxisMode(\n        options.yaxes[1],\n        this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[1].format,\n        this.panel.yaxes[1].decimals\n      );\n    }\n    this.applyLogScale(options.yaxes[0], data);\n    this.configureAxisMode(\n      options.yaxes[0],\n      this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[0].format,\n      this.panel.yaxes[0].decimals\n    );\n  }\n\n  parseNumber(value: any) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    return toNumber(value);\n  }\n\n  applyLogScale(axis: any, data: any) {\n    if (axis.logBase === 1) {\n      return;\n    }\n\n    const minSetToZero = axis.min === 0;\n\n    if (axis.min < Number.MIN_VALUE) {\n      axis.min = null;\n    }\n    if (axis.max < Number.MIN_VALUE) {\n      axis.max = null;\n    }\n\n    let series, i;\n    let max = axis.max,\n      min = axis.min;\n\n    for (i = 0; i < data.length; i++) {\n      series = data[i];\n      if (series.yaxis === axis.index) {\n        if (!max || max < series.stats.max) {\n          max = series.stats.max;\n        }\n        if (!min || min > series.stats.logmin) {\n          min = series.stats.logmin;\n        }\n      }\n    }\n\n    axis.transform = (v: number) => {\n      return v < Number.MIN_VALUE ? null : Math.log(v) / Math.log(axis.logBase);\n    };\n    axis.inverseTransform = (v: any) => {\n      return Math.pow(axis.logBase, v);\n    };\n\n    if (!max && !min) {\n      max = axis.inverseTransform(+2);\n      min = axis.inverseTransform(-2);\n    } else if (!max) {\n      max = min * axis.inverseTransform(+4);\n    } else if (!min) {\n      min = max * axis.inverseTransform(-4);\n    }\n\n    if (axis.min) {\n      min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n    } else {\n      min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n    }\n    if (axis.max) {\n      max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n    } else {\n      max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n    }\n\n    if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n      return;\n    }\n\n    if (Number.isFinite(min) && Number.isFinite(max)) {\n      if (minSetToZero) {\n        axis.min = 0.1;\n        min = 1;\n      }\n\n      axis.ticks = this.generateTicksForLogScaleYAxis(min, max, axis.logBase);\n      if (minSetToZero) {\n        axis.ticks.unshift(0.1);\n      }\n      if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n        axis.max = axis.ticks[axis.ticks.length - 1];\n      }\n    } else {\n      axis.ticks = [1, 2];\n      delete axis.min;\n      delete axis.max;\n    }\n  }\n\n  generateTicksForLogScaleYAxis(min: any, max: number, logBase: number) {\n    let ticks = [];\n\n    let nextTick;\n    for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n      ticks.push(nextTick);\n    }\n\n    const maxNumTicks = Math.ceil(this.ctrl.height / 25);\n    const numTicks = ticks.length;\n    if (numTicks > maxNumTicks) {\n      const factor = Math.ceil(numTicks / maxNumTicks) * logBase;\n      ticks = [];\n\n      for (nextTick = min; nextTick <= max * factor; nextTick *= factor) {\n        ticks.push(nextTick);\n      }\n    }\n\n    return ticks;\n  }\n\n  configureAxisMode(axis: { tickFormatter: (val: any, axis: any) => string }, format: string, decimals?: DecimalCount) {\n    axis.tickFormatter = (val, axis) => {\n      const formatter = getValueFormat(format);\n\n      if (!formatter) {\n        throw new Error(`Unit '${format}' is not supported`);\n      }\n\n      return formattedValueToString(formatter(val, decimals));\n    };\n  }\n}\n\n/** @ngInject */\nfunction graphDirective(timeSrv: TimeSrv, popoverSrv: any, contextSrv: ContextSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: (scope: any, elem: JQuery) => {\n      return new GraphElement(scope, elem, timeSrv);\n    },\n  };\n}\n\ncoreModule.directive('grafanaGraph', graphDirective);\nexport { GraphElement, graphDirective };\n","import {\n  AbsoluteTimeRange,\n  DataFrame,\n  FieldType,\n  LegacyGraphHoverEventPayload,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\n\n/**\n * Find the min and max time that covers all data\n */\nexport function getDataTimeRange(frames: DataFrame[]): AbsoluteTimeRange | undefined {\n  const range: AbsoluteTimeRange = {\n    from: Number.MAX_SAFE_INTEGER,\n    to: Number.MIN_SAFE_INTEGER,\n  };\n  let found = false;\n  const reducers = [ReducerID.min, ReducerID.max];\n  for (const frame of frames) {\n    for (const field of frame.fields) {\n      if (field.type === FieldType.time) {\n        const calcs = reduceField({ field, reducers });\n        range.from = Math.min(range.from, calcs[ReducerID.min]);\n        range.to = Math.max(range.to, calcs[ReducerID.max]);\n        found = true;\n      }\n    }\n  }\n  return found ? range : undefined;\n}\n\n// Check wether event is LegacyGraphHoverEvent\nexport function isLegacyGraphHoverEvent(event: any): event is LegacyGraphHoverEventPayload {\n  return event.hasOwnProperty('pos');\n}\n","import { map, each, isUndefined } from 'lodash';\n\nimport { textUtil } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\n\n/** @ngInject */\nexport function SeriesOverridesCtrl($scope: any, $element: JQuery, popoverSrv: any) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name: string, propertyName: string, values: any) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: map(values, (value) => {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item: { propertyName: string }, subItem: { value: any }) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = (color: any) => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n\n    // update picker model so that the picker UI will also update\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = (color: any) => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: { color },\n    };\n\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = (option: { propertyName: string | number }) => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return map($scope.ctrl.seriesList, (series) => {\n      return textUtil.escapeHtml(series.alias);\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    each($scope.overrideMenu, (option) => {\n      const value = $scope.override[option.propertyName];\n      if (isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Fill gradient', 'fillGradient', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Hidden Series', 'hiddenSeries', [true, false]);\n  $scope.addOverrideOption(\n    'Dash Length',\n    'dashLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption(\n    'Dash Space',\n    'spaceLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n\ncoreModule.controller('SeriesOverridesCtrl', SeriesOverridesCtrl);\n","import tinycolor from 'tinycolor2';\n\nimport coreModule from 'app/angular/core_module';\nimport config from 'app/core/config';\nexport class ThresholdFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n\n  /** @ngInject */\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert && !config.unifiedAlertingEnabled) {\n      this.disabled = true;\n    }\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({\n      value: undefined,\n      colorMode: 'critical',\n      op: 'gt',\n      fill: true,\n      line: true,\n      yaxis: 'left',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index: number) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].lineColor = newColor;\n      this.render();\n    };\n  }\n\n  onThresholdTypeChange(index: number) {\n    // Because of the ng-model binding, threshold's color mode is already set here\n    if (this.panel.thresholds[index].colorMode === 'custom') {\n      this.panel.thresholds[index].fillColor = tinycolor(config.theme2.v1.palette.blue85).setAlpha(0.2).toRgbString();\n      this.panel.thresholds[index].lineColor = tinycolor(config.theme2.v1.palette.blue77).setAlpha(0.6).toRgbString();\n    }\n    this.panelCtrl.render();\n  }\n}\n\ncoreModule.directive('graphThresholdForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/thresholds_form.html',\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import coreModule from 'app/angular/core_module';\n\nimport { getColorModes } from './time_region_manager';\n\nexport class TimeRegionFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n  colorModes: any;\n\n  /** @ngInject */\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index: number) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import $ from 'jquery';\nimport { isString, escape } from 'lodash';\n\nimport coreModule from 'app/angular/core_module';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { DashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\n/** @ngInject */\nexport function annotationTooltipDirective(\n  $sanitize: any,\n  dashboardSrv: DashboardSrv,\n  contextSrv: ContextSrv,\n  $compile: any\n) {\n  function sanitizeString(str: string) {\n    try {\n      return $sanitize(str);\n    } catch (err) {\n      console.log('Could not sanitize annotation string, html escaping instead');\n      return escape(str);\n    }\n  }\n\n  return {\n    restrict: 'E',\n    scope: {\n      event: '=',\n      onEdit: '&',\n    },\n    link: (scope: any, element: JQuery) => {\n      const event = scope.event;\n      let title = event.title;\n      let text = event.text;\n      const dashboard = dashboardSrv.getCurrent();\n\n      let tooltip = '<div class=\"graph-annotation\">';\n      let titleStateClass = '';\n\n      if (event.alertId !== undefined && event.newState) {\n        const stateModel = alertDef.getStateDisplayModel(event.newState);\n        titleStateClass = stateModel.stateClass;\n        title = `<i class=\"${stateModel.iconClass}\"></i> ${stateModel.text}`;\n        text = alertDef.getAlertAnnotationInfo(event);\n        if (event.text) {\n          text = text + '<br />' + event.text;\n        }\n      } else if (title) {\n        text = title + '<br />' + (isString(text) ? text : '');\n        title = '';\n      }\n\n      let header = `<div class=\"graph-annotation__header\">`;\n      if (event.login && event.avatarUrl) {\n        header += `<div class=\"graph-annotation__user\" bs-tooltip=\"'Created by ${event.login}'\"><img src=\"${event.avatarUrl}\" /></div>`;\n      }\n      header += `\n          <span class=\"graph-annotation__title ${titleStateClass}\">${sanitizeString(title)}</span>\n          <span class=\"graph-annotation__time\">${dashboard?.formatDate(event.min)}</span>\n      `;\n\n      // Show edit icon only for users with at least Editor role\n      if (event.id && dashboard?.canEditAnnotations(event.dashboardId)) {\n        header += `\n          <span class=\"pointer graph-annotation__edit-icon\" ng-click=\"onEdit()\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </span>\n        `;\n      }\n\n      header += `</div>`;\n      tooltip += header;\n      tooltip += '<div class=\"graph-annotation__body\">';\n\n      if (text) {\n        tooltip += '<div ng-non-bindable>' + sanitizeString(text.replace(/\\n/g, '<br>')) + '</div>';\n      }\n\n      const tags = event.tags;\n\n      if (tags && tags.length) {\n        scope.tags = tags;\n        tooltip +=\n          '<span class=\"label label-tag small\" ng-repeat=\"tag in tags\" tag-color-from-name=\"tag\">{{tag}}</span><br/>';\n      }\n\n      tooltip += '</div>';\n      tooltip += '</div>';\n\n      const $tooltip = $(tooltip);\n      $tooltip.appendTo(element);\n\n      $compile(element.contents())(scope);\n    },\n  };\n}\n\ncoreModule.directive('annotationTooltip', annotationTooltipDirective);\n","import { cloneDeep, isNumber } from 'lodash';\n\nimport { AnnotationEvent, dateTime } from '@grafana/data';\nimport { coreModule } from 'app/angular/core_module';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from '../../../features/annotations/api';\nimport { getDashboardQueryRunner } from '../../../features/query/state/DashboardQueryRunner/DashboardQueryRunner';\n\nexport class EventEditorCtrl {\n  // @ts-ignore initialized through Angular not constructor\n  panelCtrl: MetricsPanelCtrl;\n  // @ts-ignore initialized through Angular not constructor\n  event: AnnotationEvent;\n  timeRange?: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated?: string;\n\n  /** @ngInject */\n  constructor() {}\n\n  $onInit() {\n    this.event.panelId = this.panelCtrl.panel.id; // set correct id if in panel edit\n    this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time!);\n  }\n\n  canDelete(): boolean {\n    if (contextSrv.accessControlEnabled()) {\n      if (this.event.source.type === 'dashboard') {\n        return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.dashboard.canDelete;\n      }\n      return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.organization.canDelete;\n    }\n    return true;\n  }\n\n  async save(): Promise<void> {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = cloneDeep(this.event);\n    saveModel.time = saveModel.time!.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd!.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    let crudFunction = saveAnnotation;\n    if (saveModel.id) {\n      crudFunction = updateAnnotation;\n    }\n\n    try {\n      await crudFunction(saveModel);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n\n  async delete(): Promise<void> {\n    try {\n      await deleteAnnotation(this.event);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n}\n\nfunction tryEpochToMoment(timestamp: any) {\n  if (timestamp && isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n","import { FlotDataPoint } from '@grafana/data';\nimport { MenuItemProps } from '@grafana/ui';\n\nexport class GraphContextMenuCtrl {\n  private source?: FlotDataPoint | null;\n  private scope?: any;\n  menuItemsSupplier?: () => MenuItemProps[];\n  scrollContextElement: HTMLElement | null = null;\n  position: {\n    x: number;\n    y: number;\n  } = { x: 0, y: 0 };\n\n  isVisible: boolean;\n\n  constructor($scope: any) {\n    this.isVisible = false;\n    this.scope = $scope;\n  }\n\n  onClose = () => {\n    if (this.scrollContextElement) {\n      this.scrollContextElement.removeEventListener('scroll', this.onClose);\n    }\n\n    this.scope.$apply(() => {\n      this.isVisible = false;\n    });\n  };\n\n  toggleMenu = (event?: { pageX: number; pageY: number }) => {\n    this.isVisible = !this.isVisible;\n    if (this.isVisible && this.scrollContextElement) {\n      this.scrollContextElement.addEventListener('scroll', this.onClose);\n    }\n\n    if (this.source) {\n      this.position = {\n        x: this.source.pageX,\n        y: this.source.pageY,\n      };\n    } else {\n      this.position = {\n        x: event ? event.pageX : 0,\n        y: event ? event.pageY : 0,\n      };\n    }\n  };\n\n  // Sets element which is considered as a scroll context of given context menu.\n  // Having access to this element allows scroll event attachement for menu to be closed when user scrolls\n  setScrollContextElement = (el: HTMLElement | null) => {\n    this.scrollContextElement = el;\n  };\n\n  setSource = (source: FlotDataPoint | null) => {\n    this.source = source;\n  };\n\n  getSource = () => {\n    return this.source;\n  };\n\n  setMenuItemsSupplier = (menuItemsSupplier: () => MenuItemProps[]) => {\n    this.menuItemsSupplier = menuItemsSupplier;\n  };\n}\n","import { selectors } from '@grafana/e2e-selectors';\n\nimport { GraphCtrl } from './module';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: GraphCtrl;\n  logScales: any;\n  xAxisModes: any;\n  xAxisStatOptions: any;\n  xNameSegment: any;\n  selectors: typeof selectors.components.Panels.Visualization.Graph.VisualizationTab;\n\n  /** @ngInject */\n  constructor(private $scope: any) {\n    this.panelCtrl = $scope.ctrl as GraphCtrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.xAxisModes = {\n      Time: 'time',\n      Series: 'series',\n      Histogram: 'histogram',\n      // 'Data field': 'field',\n    };\n\n    this.xAxisStatOptions = [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Count', value: 'count' },\n      { text: 'Current', value: 'current' },\n    ];\n\n    if (this.panel.xaxis.mode === 'custom') {\n      if (!this.panel.xaxis.name) {\n        this.panel.xaxis.name = 'specify field';\n      }\n    }\n    this.selectors = selectors.components.Panels.Visualization.Graph.VisualizationTab;\n  }\n\n  setUnitFormat(axis: { format: any }) {\n    return (unit: string) => {\n      axis.format = unit;\n      // if already set via field config we clear that\n      if (this.panel.fieldConfig.defaults.unit) {\n        this.panel.fieldConfig.defaults.unit = undefined;\n        this.panelCtrl.refresh();\n      } else {\n        this.panelCtrl.render();\n      }\n    };\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  xAxisModeChanged() {\n    this.panelCtrl.processor.setPanelDefaultsForNewXAxisMode();\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n\n  xAxisValueChanged() {\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n}\n\n/** @ngInject */\nexport function axesEditorComponent() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/graph/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import './graph';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\nimport './time_regions_form';\nimport './annotation_tooltip';\nimport './event_editor';\n\nimport { auto } from 'angular';\nimport { defaults, find, without } from 'lodash';\n\nimport { DataFrame, FieldConfigProperty, PanelEvents, PanelPlugin } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { ThresholdMapper } from 'app/features/alerting/state/ThresholdMapper';\nimport { changePanelPlugin } from 'app/features/panel/state/actions';\nimport { dispatch } from 'app/store/store';\n\nimport { appEvents } from '../../../core/core';\nimport { loadSnapshotData } from '../../../features/dashboard/utils/loadSnapshotData';\nimport { annotationsFromDataFrames } from '../../../features/query/state/DashboardQueryRunner/utils';\nimport { ZoomOutEvent } from '../../../types/events';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { graphPanelMigrationHandler } from './GraphMigrations';\nimport { axesEditorComponent } from './axes_editor';\nimport { DataProcessor } from './data_processor';\nimport template from './template';\nimport { DataWarning, GraphFieldConfig, GraphPanelOptions } from './types';\nimport { getDataTimeRange } from './utils';\n\nexport class GraphCtrl extends MetricsPanelCtrl {\n  static template = template;\n\n  renderError = false;\n  hiddenSeries: any = {};\n  hiddenSeriesTainted = false;\n  seriesList: TimeSeries[] = [];\n  dataList: DataFrame[] = [];\n  annotations: any = [];\n  alertState: any;\n\n  dataWarning?: DataWarning;\n  colors: any = [];\n  subTabIndex = 0;\n  processor: DataProcessor;\n  contextMenuCtrl: GraphContextMenuCtrl;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null,\n    },\n    yaxis: {\n      align: false,\n      alignLevel: null,\n    },\n    // show/hide lines\n    lines: true,\n    // fill factor\n    fill: 1,\n    // fill gradient\n    fillGradient: 0,\n    // line width in pixels\n    linewidth: 1,\n    // show/hide dashed line\n    dashes: false,\n    // show/hide line\n    hiddenSeries: false,\n    // length of a dash\n    dashLength: 10,\n    // length of space between two dashes\n    spaceLength: 10,\n    // show hide points\n    points: false,\n    // point radius in pixels\n    pointradius: 2,\n    // show hide bars\n    bars: false,\n    // enable/disable stacking\n    stack: false,\n    // stack percentage mode\n    percentage: false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false,\n    },\n    // how null points should be handled\n    nullPointMode: 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip: {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n    timeRegions: [],\n    options: {\n      // show/hide alert threshold lines and fill\n      alertThreshold: true,\n    },\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    super($scope, $injector);\n\n    defaults(this.panel, this.panelDefaults);\n    defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    defaults(this.panel.legend, this.panelDefaults.legend);\n    defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n    defaults(this.panel.options, this.panelDefaults.options);\n\n    this.useDataFrames = true;\n    this.processor = new DataProcessor(this.panel);\n    this.contextMenuCtrl = new GraphContextMenuCtrl($scope);\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.events.on(PanelEvents.dataFramesReceived, this.onDataFramesReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataSnapshotLoad.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n    this.events.on(PanelEvents.initPanelActions, this.onInitPanelActions.bind(this));\n\n    // set axes format from field config\n    const fieldConfigUnit = this.panel.fieldConfig.defaults.unit;\n    if (fieldConfigUnit) {\n      this.panel.yaxes[0].format = fieldConfigUnit;\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Display', 'public/app/plugins/panel/graph/tab_display.html');\n    this.addEditorTab('Series overrides', 'public/app/plugins/panel/graph/tab_series_overrides.html');\n    this.addEditorTab('Axes', axesEditorComponent);\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html');\n    this.addEditorTab('Thresholds', 'public/app/plugins/panel/graph/tab_thresholds.html');\n    this.addEditorTab('Time regions', 'public/app/plugins/panel/graph/tab_time_regions.html');\n    this.subTabIndex = 0;\n    this.hiddenSeriesTainted = false;\n  }\n\n  onInitPanelActions(actions: any[]) {\n    actions.push({ text: 'Toggle legend', click: 'ctrl.toggleLegend()', shortcut: 'p l' });\n  }\n\n  zoomOut(evt: any) {\n    appEvents.publish(new ZoomOutEvent({ scale: 2 }));\n  }\n\n  onDataSnapshotLoad(snapshotData: any) {\n    const { series, annotations } = loadSnapshotData(this.panel, this.dashboard);\n    this.panelData!.annotations = annotations;\n    this.onDataFramesReceived(series);\n  }\n\n  onDataFramesReceived(data: DataFrame[]) {\n    this.dataList = data;\n    this.seriesList = this.processor.getSeriesList({\n      dataList: this.dataList,\n      range: this.range,\n    });\n\n    this.dataWarning = this.getDataWarning();\n\n    this.alertState = undefined;\n    (this.seriesList as any).alertState = undefined;\n    if (this.panelData!.alertState) {\n      this.alertState = this.panelData!.alertState;\n      (this.seriesList as any).alertState = this.alertState.state;\n    }\n\n    this.annotations = [];\n    if (this.panelData!.annotations?.length) {\n      this.annotations = annotationsFromDataFrames(this.panelData!.annotations);\n    }\n\n    this.loading = false;\n    this.render(this.seriesList);\n  }\n\n  getDataWarning(): DataWarning | undefined {\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      if (this.dataList) {\n        for (const frame of this.dataList) {\n          if (frame.length && frame.fields?.length) {\n            return {\n              title: 'Unable to graph data',\n              tip: 'Data exists, but is not timeseries',\n              actionText: 'Switch to table view',\n              action: () => {\n                dispatch(changePanelPlugin({ panel: this.panel, pluginId: 'table' }));\n              },\n            };\n          }\n        }\n      }\n\n      return {\n        title: 'No data',\n        tip: 'No data returned from query',\n      };\n    }\n\n    // If any data is in range, do not return an error\n    for (const series of this.seriesList) {\n      if (!series.isOutsideRange) {\n        return undefined;\n      }\n    }\n\n    // All data is outside the time range\n    const dataWarning: DataWarning = {\n      title: 'Data outside time range',\n      tip: 'Can be caused by timezone mismatch or missing time filter in query',\n    };\n\n    const range = getDataTimeRange(this.dataList);\n\n    if (range) {\n      dataWarning.actionText = 'Zoom to data';\n      dataWarning.action = () => {\n        locationService.partial({\n          from: range.from,\n          to: range.to,\n        });\n      };\n    }\n\n    return dataWarning;\n  }\n\n  onRender() {\n    if (!this.seriesList) {\n      return;\n    }\n\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n\n    for (const series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      // Always use the configured field unit\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis - 1].format = series.unit;\n      }\n      if (this.hiddenSeriesTainted === false && series.hiddenSeries === true) {\n        this.hiddenSeries[series.alias] = true;\n      }\n    }\n  }\n\n  onColorChange = (series: any, color: string) => {\n    series.setColor(config.theme2.visualization.getColorByName(color));\n    this.panel.aliasColors[series.alias] = color;\n    this.render();\n  };\n\n  onToggleSeries = (hiddenSeries: any) => {\n    this.hiddenSeriesTainted = true;\n    this.hiddenSeries = hiddenSeries;\n    this.render();\n  };\n\n  onToggleSort = (sortBy: any, sortDesc: any) => {\n    this.panel.legend.sort = sortBy;\n    this.panel.legend.sortDesc = sortDesc;\n    this.render();\n  };\n\n  onToggleAxis = (info: { alias: any; yaxis: any }) => {\n    let override: any = find(this.panel.seriesOverrides, { alias: info.alias });\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    override.yaxis = info.yaxis;\n    this.render();\n  };\n\n  addSeriesOverride(override: any) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override: any) {\n    this.panel.seriesOverrides = without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.render();\n  }\n\n  legendValuesOptionChanged() {\n    const legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  onContextMenuClose = () => {\n    this.contextMenuCtrl.toggleMenu();\n  };\n\n  getTimeZone = () => this.dashboard.getTimezone();\n\n  getDataFrameByRefId = (refId: string) => {\n    return this.dataList.filter((dataFrame) => dataFrame.refId === refId)[0];\n  };\n\n  migrateToReact() {\n    this.onPluginTypeChange(config.panels['timeseries']);\n  }\n}\n\n// Use new react style configuration\nexport const plugin = new PanelPlugin<GraphPanelOptions, GraphFieldConfig>(null)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Mappings,\n    ],\n  })\n  .setDataSupport({ annotations: true, alertStates: true })\n  .setMigrationHandler(graphPanelMigrationHandler);\n\n// Use the angular ctrt rather than a react one\nplugin.angularPanelCtrl = GraphCtrl;\n","const template = `\n<div class=\"graph-panel\" ng-class=\"{'graph-panel--legend-right': ctrl.panel.legend.rightSide}\">\n  <div class=\"graph-panel__chart\" grafana-graph ng-dblclick=\"ctrl.zoomOut()\">\n  </div>\n\n  <div class=\"graph-legend\">\n    <div class=\"graph-legend-content\" graph-legend></div>\n  </div>\n  <div ng-if=\"ctrl.contextMenuCtrl.isVisible\">\n    <graph-context-menu\n      itemsGroup=\"ctrl.contextMenuCtrl.menuItemsSupplier()\"\n      on-close=\"ctrl.onContextMenuClose\"\n      getContextMenuSource=\"ctrl.contextMenuCtrl.getSource\"\n      timeZone=\"ctrl.getTimeZone()\"\n      x=\"ctrl.contextMenuCtrl.position.x\"\n      y=\"ctrl.contextMenuCtrl.position.y\"\n    ></graph-context-menu>\n  </div>\n</div>\n`;\n\nexport default template;\n","import { PanelModel, FieldConfigSource, DataLink } from '@grafana/data';\n\n/**\n * Called when upgrading from a previously saved versoin\n */\nexport const graphPanelMigrationHandler = (panel: PanelModel<any>): Partial<any> => {\n  const fieldConfig: FieldConfigSource = panel.fieldConfig ?? {\n    defaults: {},\n    overrides: [],\n  };\n\n  const options = panel.options || {};\n\n  // Move <7.1 dataLinks to the field section\n  if (options.dataLinks) {\n    fieldConfig.defaults.links = options.dataLinks as DataLink[];\n    delete options.dataLinks;\n  }\n\n  // Mutate the original panel state (only necessary because it is angular)\n  panel.options = options;\n  panel.fieldConfig = fieldConfig;\n  return options;\n};\n"],"names":["DEFAULT_PORTS","http","https","ftp","AngularLocationWrapper","constructor","this","absUrl","wrapInDeprecationWarning","hash","host","path","port","protocol","replace","search","state","url","fn","replacement","self","deprecationWarning","name","apply","arguments","window","location","origin","newHash","navigationLogger","Error","locationService","slice","URL","href","hostname","pathname","parsedPath","String","startsWith","length","parseInt","paramValue","newQuery","locationSearchToObject","key","Object","keys","undefined","updatedUrl","urlUtil","newUrl","trim","MetricsPanelCtrl","PanelCtrl","$scope","$injector","super","next","data","panelData","LoadingState","loading","processDataError","error","angularDirtyCheck","request","timeInfo","timeRange","range","useDataFrames","handleDataFrames","series","legacy","map","v","toLegacyResponseData","handleQueryResult","contextSrv","get","datasourceSrv","timeSrv","templateSrv","panel","datasource","events","on","PanelEvents","onMetricsPanelRefresh","bind","onPanelTearDown","onMetricsPanelMounted","queryRunner","getQueryRunner","querySubscription","getData","withTransforms","withFieldConfig","subscribe","panelDataObserver","unsubscribe","otherPanelInFullscreenMode","snapshotData","updateTimeRange","isArray","$timeout","emit","scopedVars","then","issueQueries","catch","err","cancelled","console","log","message","$root","$$phase","$digest","newTimeData","applyPanelTimeOverrides","run","queries","targets","panelId","id","dashboardId","dashboard","timezone","getTimezone","maxDataPoints","width","minInterval","interval","publicDashboardAccessToken","meta","cacheTimeout","transformations","snapshot","frame","toDataFrameDTO","result","plugin","$parent","editorTabs","$location","EventBusSrv","timing","config","type","pluginId","pluginName","$on","panelDidMount","panelInitialized","renderingCompleted","profiler","refresh","publishAppEvent","event","payload","appEvent","initEditMode","editModeInitiated","addEditorTab","title","directiveFn","index","icon","editorTab","isString","templateUrl","splice","push","getExtendedMenu","menu","async","otherPanelInFullscreen","render","hiddenReducerTypes","ThresholdMapper","static","alert","i","conditions","condition","evaluator","thresholds","visible","indexOf","reducer","value","params","op","value1","value2","t","fill","options","alertThreshold","line","colorMode","DataProcessor","getSeriesList","list","dataList","timeField","getTimeField","applyNullInsertThreshold","refFieldName","j","fields","field","FieldType","getFieldDisplayName","datapoints","r","values","dateTime","valueOf","toTimeSeries","xaxis","mode","stack","first","alias","aliasEscaped","concat","dataFrameIndex","fieldIndex","colorIndex","colors","color","aliasColors","TimeSeries","unit","last","from","isOutsideRange","setPanelDefaultsForNewXAxisMode","bars","lines","points","legend","show","tooltip","shared","validateXAxisSeriesValue","validOptions","getXAxisValueOptions","find","text","pluckDeep","obj","property","propertyParts","split","createAnnotationToolip","element","plot","injector","getLegacyAngularInjector","content","document","createElement","innerHTML","invoke","$compile","$rootScope","eventManager","getOptions","manager","tmpScope","$new","onEdit","editEvent","$destroy","drop","Drop","target","position","classes","openOn","hoverCloseDelay","tetherOptions","constraints","to","pin","attachment","open","setTimeout","destroy","markerElementToAttachTo","createEditPopover","editorOpen","editorOpened","scope","panelCtrl","close","editorClosed","DrawableEvent","object","drawFunc","clearFunc","moveFunc","left","top","height","_object","_drawFunc","_clearFunc","_moveFunc","_position","_width","_height","draw","clear","getObject","moveTo","VisualEvent","drawableEvent","_options","_drawableEvent","_hidden","visual","getParent","_parent","isHidden","hide","unhide","EventMarkers","_events","_types","_plot","eventsEnabled","getEvents","setTypes","types","setupEvents","parts","partition","regions","$","ve","_buildDiv","vre","_buildRegDiv","sort","a","b","ao","bo","min","drawEvents","insidePlot","_insidePlot","timeEnd","overlapPlot","_overlapPlot","updateEvents","o","getPlotOffset","getXAxes","p2c","_clearEvents","val","that","container","getPlaceholder","markerSize","markerShow","lineStyle","lineWidth","markerTooltip","eventTypeId","eventType","toLowerCase","topOffset","eventSectionHeight","css","opacity","appendTo","marker","Math","round","toUpperCase","mouseenter","editModel","mouseleave","clearSelection","cursor","hover","remove","regionWidth","timeFrom","timeTo","max","right","xmin","xmax","regionStart","each","region","x","xc","point0","point1","coord0","coord1","coordMin","coordMax","init","eventMarkers","hideEvents","showEvents","setEvents","hooks","processOptions","version","LEGEND_STATS","LegendItem","PureComponent","props","e","onLabelClick","yaxis","info","setState","onToggleAxis","onColorChange","forceUpdate","renderLegendValues","asTable","legendValueItems","valueName","valueFormatted","formatValue","stats","LegendValue","onValueClick","hidden","seriesOptionClasses","classNames","valueItems","seriesLabel","LegendSeriesLabel","label","className","role","LegendSeriesIcon","onClick","selectors","onChange","enableNamedColors","ref","showColorPicker","hideColorPicker","SeriesIcon","onMouseLeave","GraphLegend","onToggleSeries","hiddenSeries","ctrlKey","metaKey","shiftKey","toggleSeriesExclusiveMode","sortLegend","seriesList","sortBy","alignAsTable","_sortBy","Infinity","sortDesc","reverse","every","forEach","optionalClass","rightSide","sideWidth","hideEmpty","hideZero","avg","current","total","seriesValuesProps","seriesHideProps","sortProps","filter","hideFromLegend","legendClass","legendStyle","minWidth","legendProps","onToggleSort","style","LegendTable","LegendSeriesList","stat","textAlign","statName","LegendTableHeaderItem","Icon","Legend","CustomScrollbar","hideHorizontalTrack","alignYLevel","yAxes","level","isNaN","axis","checkCorrectAxes","yLeft","yRight","moveLevelToZero","wideFactor","expandStuckValues","zero","oneSide","checkOneSide","checkOppositeSides","rate","checkTwoCross","rateLeft","rateRight","absLeftMin","abs","absLeftMax","absRightMin","absRightMax","upLeft","downLeft","upRight","downRight","getRate","restoreLevelFromZero","axes","EventManager","updateTime","dashboardUID","uid","time","isRegion","elem","addFlotEvents","annotations","flotOptions","$__alerting","ALERTING_COLOR","$__ok","OK_COLOR","$__no_data","NO_DATA_COLOR","$__pending","PENDING_COLOR","$__editing","DEFAULT_ANNOTATION_COLOR","item","newState","getRegions","markings","grid","defaultColor","fillColor","source","colorString","alpha","tinycolor","isValid","setAlpha","toRgbString","addAlphaToRGB","REGION_FILL_ALPHA","addRegionMarking","levels","GraphTooltip","getSeriesFn","ctrl","hoverEvent","LegacyGraphHoverEvent","pos","point","$tooltip","findHoverIndexFromDataPoints","posX","ps","pointsize","initial","len","steps","findHoverIndexFromData","middle","lower","upper","floor","renderAndShow","absoluteTime","innerHtml","xMode","html","place_tt","pageX","pageY","offset","getMultiSeriesPlotHoverInfo","hoverIndex","hoverDistance","pointTime","minDistance","minTime","results","lastValue","allIsNull","allIsZero","hideTooltip","value_type","n","distance","detach","unhighlight","publish","LegacyGraphHoverClearEvent","DataHoverClearEvent","panelInEdit","panelRelY","appEvents","CoreEvents","clearCrosshair","plotData","group","hoverInfo","seriesHtml","tooltipFormat","allSeriesMode","pointOffset","Number","scrollTop","innerHeight","setCrosshair","sharedCrosshairModeOnly","hasMsResolution","systemDateFormats","seriesHoverInfo","formatDate","highlightClass","seriesIndex","textUtil","highlight","datapoint","convertToHistogramData","bucketSize","getSeriesValues","histogram","minBound","getBucketBound","maxBound","domain","histGenerator","bin","x0","convertValuesToHistogram","ThresholdManager","getHandleHtml","handleIndex","model","valueStr","stateClass","initDragging","evt","handleElem","currentTarget","parents","posTop","lastY","dragging","clientY","diff","addEventListener","stopped","graphValue","c2p","y","toFixed","off","removeEventListener","$apply","threshold","cleanUp","placeholder","needsCleanup","renderHandle","defaultHandleTopPos","handleTopPos","isNumber","valueCanvasPos","append","toggleClass","shouldDrawHandles","hasSecondYAxis","editingThresholds","prepare","thresholdMargin","addFlotOptions","other","gtLimit","ltLimit","limit","lineColor","y2axis","calculateTimesWithin","cfg","tRange","fromDayOfWeek","toDayOfWeek","timeRegion","hRange","parseTimeRange","dayOfWeek","h","m","s","fromStart","set","add","unix","isoWeekday","fromEnd","hour","str","match","exec","colorModes","gray","themeDependent","darkColor","lightColor","red","green","blue","yellow","custom","getColor","theme","visualization","getColorByName","isLight","TimeRegionManager","timeRegions","utc","raw","tr","timeRegionColor","LegendWithThemeProvider","provideTheme","GraphElement","flotPosition","linksSupplier","items","canAddAnnotations","ariaLabel","dataLinks","getLinks","replaceVariables","link","contextMenu","contextMenuCtrl","panelWidth","thresholdManager","timeRegionManager","sortedSeries","onPanelTeardown","onRender","onGraphHover","onGraphHoverClear","DataHoverEvent","onPlotSelected","onPlotClick","parent","legendElem","renderData","buildFlotPairs","graphHeight","updateLegendValues","hasChildNodes","ReactDOM","renderPanel","legendOptions","valueOptions","legendReactElem","React","sharedTooltipModeEnabled","hasOwnProperty","handler","ranges","setTime","toUtc","scrollContextElement","closest","contextMenuSourceItem","x1","yAxisConfig","yaxes","dataFrame","dataIndex","getDataIndexWithNullValuesCorrection","links","hasLinksValue","hasLinks","fieldConfig","decimals","fieldDisplay","getDisplayProcessor","timeZone","getFieldLinksSupplier","display","view","DataFrameView","rowIndex","colIndex","setScrollContextElement","setSource","setMenuItemsSupplier","getContextMenuItemsSupplier","toggleMenu","Array","ts","correctIndex","toArray","findIndex","shouldAbortRender","drawHook","dataWarning","msg","action","actionText","click","processOffsetHook","gridMargin","getYAxes","panelOptions","processRangeHook","align","alignLevel","parseFloat","getMinTimeStepOfSeries","MAX_VALUE","timeStep","dashes","buildFlotOptions","prepareXAxis","configureYAxisOptions","sortSeries","callPlot","getFlotPairs","nullPointMode","transform","getFlotPairsConstant","barWidth","addXSeriesAxis","histMin","_min","histMax","_max","ticks","buckets","tickStep","addXHistogramAxis","addXTableAxis","addTimeAxis","incrementRenderCounter","renderError","gridColor","processOffset","processRange","stackpercent","percentage","translateFillOption","getFillGradient","fillGradient","linewidth","steppedLine","dashLength","spaceLength","radius","pointradius","shadowSize","minBorderMargin","backgroundColor","borderWidth","hoverable","clickable","margin","labelMarginX","mouseActiveRadius","selection","crosshair","sortOrder","haveSortBy","haveSortOrder","shouldSortBy","zindex","amount","isUndefined","timeformat","graphTimeFormat","tickFormatter","graphTickFormatter","defaultTicks","tickValues","d","ticksNum","ceil","configureAxisMode","pointIndex","flatten","defaults","logBase","parseNumber","tickDecimals","secondY","clone","applyLogScale","format","toNumber","minSetToZero","MIN_VALUE","logmin","inverseTransform","pow","isFinite","generateTicksForLogScaleYAxis","unshift","nextTick","maxNumTicks","numTicks","factor","formatter","getValueFormat","formattedValueToString","graphDirective","popoverSrv","restrict","template","SeriesOverridesCtrl","$element","overrideMenu","currentOverrides","override","colorPickerModel","addOverrideOption","propertyName","option","submenu","setOverride","subItem","addSeriesOverride","updateCurrentOverrides","openColorSelector","colorSelected","autoClose","onClose","removeOverride","getSeriesNames","coreModule","ThresholdFormCtrl","$onInit","disabled","unbindDestroy","addThreshold","removeThreshold","onFillColorChange","newColor","onLineColorChange","onThresholdTypeChange","controller","bindToController","controllerAs","TimeRegionFormCtrl","editingTimeRegions","addTimeRegion","removeTimeRegion","annotationTooltipDirective","$sanitize","dashboardSrv","sanitizeString","escape","getCurrent","titleStateClass","alertId","stateModel","alertDef","iconClass","header","login","avatarUrl","canEditAnnotations","tags","contents","EventEditorCtrl","tryEpochToMoment","timeFormated","canDelete","annotationsPermissions","organization","form","$valid","saveModel","cloneDeep","crudFunction","saveAnnotation","updateAnnotation","getDashboardQueryRunner","deleteAnnotation","timestamp","epoch","GraphContextMenuCtrl","isVisible","el","menuItemsSupplier","AxesEditorCtrl","logScales","linear","xAxisModes","Time","Series","Histogram","xAxisStatOptions","setUnitFormat","xAxisModeChanged","processor","onDataFramesReceived","xAxisValueChanged","axesEditorComponent","GraphCtrl","renderer","timeShift","seriesOverrides","setColor","hiddenSeriesTainted","refId","panelDefaults","onDataSnapshotLoad","onInitEditMode","onInitPanelActions","fieldConfigUnit","subTabIndex","actions","shortcut","zoomOut","ZoomOutEvent","scale","loadSnapshotData","getDataWarning","alertState","annotationsFromDataFrames","reduce","prev","tip","dispatch","changePanelPlugin","frames","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","found","reducers","ReducerID","calcs","reduceField","getDataTimeRange","applySeriesOverrides","removeSeriesOverride","without","toggleLegend","legendValuesOptionChanged","migrateToReact","onPluginTypeChange","PanelPlugin","useFieldConfig","disableStandardOptions","FieldConfigProperty","setDataSupport","alertStates","setMigrationHandler","overrides","angularPanelCtrl"],"sourceRoot":""}